{
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.getDateInstance(int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java@org.apache.commons.lang3.concurrent.ConstantFuture.createIfAbsentUnchecked(ConcurrentMap,K,ConcurrentInitializer)": "add final modifier to local variables.add final modifier to method parameters.[] added support for concurrentmap.putifabsent() to concurrentutils.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.append(String,Object)": ": avoid string allocation in strbuilder.append(charsequence). this fixes  from github. thanks to mikhail mazurskiy and fabian lange.[] create strbuilder apis similar to string.format(string, object...)",
  "src/main/java/org/apache/commons/lang3/text/StrLookup.java@org.apache.commons.lang3.text.StrLookup.lookup(String)": "replaces 'size() == 0' and 'length() == 0' with 'isempty()'add final modifier to local variables.[] strlookup for system properties now sees updated values.the lookup implementation now directly accesses system properties withoutcaching the properties object in any way.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.TwoDigitMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.BasicThreadFactory.daemon(boolean)": "don't use single letter variable names.don't need internal ivar name for a boolean to carry a \"flag\" postfix.adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/arch/Processor.java@org.apache.commons.lang3.arch.Processor.is32Bit()": ": add archutils - an utility class for the \"os.arch\" system property ()",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.setFieldSeparator(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.indexOf(char,char,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.isJsonArray(String)": ": fix logic in isjsonarray method of jsontostringstyleextract logic for checking string representation of objects into separate methods",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.getNextStrategy()": "add final modifier to local variables.format.statement unnecessarily nested within else clause.\\refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.greaterOrEqual(long,long)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.Builder.wrappedFactory(ThreadFactory)": "use validatenotnull instead of \"throw new nullpointerexception\"adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.withUpperBounds(Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java@org.apache.commons.lang3.text.translate.EntityArrays.APOS_ESCAPE()": "make sure placement of curly braces is consistent",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.isTrue(boolean,String,long)": "[github] commons-lang pull request : intellij idea refactorings..",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.TimeZoneDisplayKey(TimeZone,boolean,int,Locale)": "don't mutate parametersadd final modifier to method parameters.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy(Calendar,Locale)": ": fastdateformat doesn't respect summer daylight in some localized stringsmerge branch 'master' of https://github.com/nickmanley/commons-langthis  fix nullpointerexception in fastdateparser$timezonestrategyfix nullpointerexception in fastdateparser$timezonestrategyrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.isEmpty(Object)": ": add empty checks to objectutils",
  "src/main/java/org/apache/commons/lang3/text/StrMatcher.java@org.apache.commons.lang3.text.CharSetMatcher.stringMatcher(String)": "eat own dog food: call stringutils.isempty().",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.appendRecursiveTypes(StringBuilder,int,Type)": " - stackoverflowerror on typeutils.tostring(...) for a generic return type of enum.valueof ()",
  "src/main/java/org/apache/commons/lang3/concurrent/ThresholdCircuitBreaker.java@org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker.incrementAndCheckState(Long)": "add final modifier to local variables.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.getGenericComponentType()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.TimeZoneStrategy(Locale)": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.setNullText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.smaller(long,long,String,Object)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.TimeZoneNameRule(TimeZone,Locale,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces fastdateformat's \"z\" pattern does not respect timezone of calendar instances passed to format()applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.append(CharBuffer,int,int)": ": avoid string allocation in strbuilder.append(charsequence). this fixes  from github. thanks to mikhail mazurskiy and fabian lange.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.splitByCharacterTypeCamelCase(String)": "sort members.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.CONST(int)": "make sure placement of curly braces is consistent[] introduce const() methods to prevent javac from inlining constants",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.FastDateFormat(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.appendDisplayNames(Calendar,Locale,int,StringBuilder,Map)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.format(Calendar,B)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.appendTo(StringBuffer,Calendar)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.truncate(Object,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.lastIndexOf(float,float)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.replaceImpl(StrMatcher,String,int,int,int)": ": strbuilderreplaceall arrayindexoutofboundsexception ()avoid arrayindexoutofboundsexception by keeping variable buf consistent with buffer in strbuilderreplaceimpl.add final modifier to local variables.add final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toPrimitive(Short,short)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.appendln(String,int,int)": "[] create strbuilder apis similar to string.format(string, object...)",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(String)": ": rounding utilities for converting to bigdecimal",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.CheckIntervalData.getCheckIntervalStart()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeAll(boolean,int)": ": arrayutils.removeall(object array, int... indices) should do the clone, not its callers ()crlf -> lfjavadoc: fix typo but working is still awkward.[] complement arrayutils.addall() variants with by-index and by-value removal methods",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.appendTo(StringBuffer,Calendar)": "zz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.abbreviateMiddle(CharSequence,CharSequence,int)": "moving abbreviate + abbreviatemiddle to charsequences",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.WeekYear(NumberRule)": ": fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,Type)": "[] vastly expanded typeutils",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.smallerOrEqual(long,long)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/CharUtils.java@org.apache.commons.lang3.CharUtils.compare(char,char)": " - add issorted() to arrayutils. patch supplied by james sawle.  in github.",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.StrSubstitutor()": "remove redundant casts ()remove redundant casts throughout the codebase to make it cleaner and easier to read.fix raw types",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.format(Object,StringBuffer,FieldPosition)": "4fastdateformat apis that use a stringbuilderapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.removeIgnoreCase(String,String)": "sort members.merge branch '': add stringutilsremoveignorecasepatch by gokul nanthakumar c",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.setSummaryObjectStartText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.NamePredicate.NamePredicate(String)": "use validateistrue to validate argumentsfixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java@org.apache.commons.lang3.text.ExtendedMessageFormat.containsElements(Collection)": "add final modifier to local variables.use collection.isempty() instead of size() == 0convert to java 5 enhanced loops. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.TextStrategy(int,Calendar,Locale)": " - tolowercase should use locale, additional unit tests for case-insensitive matching - fastdateparser should be case insensitive: fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.modify(Calendar,int,ModifyType)": "removes unnecessary class reference of static method calls which are declared in the same classmake sure lines in files don't have trailing white spaces and remove all trailing white spacespmd: useless parenthesesreplaced private integer constants with private static enum.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.append(StringBuffer,String,boolean,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/tuple/Triple.java@org.apache.commons.lang3.tuple.TripleAdapter.getRight()": "[] add empty_array constants to classes inorg.apache.commons.lang3.tuple",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.simpleQuote(StringBuilder,String)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateparser too strict on abbreviated short month symbolsadd final modifier to local variables.format. fastdateparser_timezonestrategytesttesttimezonestrategypattern fails on windows with german localereimplementing 1107",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.setContentStart(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.add(char,char)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.parse(String,ParsePosition)": "format.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names: dateutilstest.testlang530 fails for some timezonesadd final modifier to local variables.trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.StringLiteral(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.addRegex(FastDateParser,StringBuilder)": " fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.setTestTransients(boolean)": ": recursive and reflective equalsbuilder ()patch by yathos ug",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.getMaxLengthEstimate()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.applyRulesToString(Calendar)": "4fastdateformat apis that use a stringbuilderrefactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(String,String,boolean)": "convert to java 5 enhanced loops. javadocsimplify code (eliminate conditional check) and avoid npe warningreplace tab characters with spaces",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.setArraySeparator(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.appendWithSeparators(Object,String)": ": update java requirement from java 6 to 7replace usage of deprecated objectutilstostring with objectstostring: fix deprecation warningseat own dog food: separator == null ? \"\" : separator->objectutils.tostring(separator)remove superfluous parens.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.getDateTimeInstance(int,int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.format(Calendar,B)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.toBoolean(String)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.wsrefactoring toboolean(string) and tobooleanobject(string) so that the latter has the same optimizations. i did this by pointing the former to the latter. i had to rewrite the optimizations a bit so they didn't auto-return as the latter considers null and false to be different. i also had to add specific support for false, no and off for the same reason. 633",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.greaterOrEqual(double,double,String,Object)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/reflect/ConstructorUtils.java@org.apache.commons.lang3.reflect.ConstructorUtils.invokeConstructor(Class,Object,Class)": "add final modifier to local variables.: add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.a bit of dog food and a lot of javadoc tweakageadd final modifier to local variables.review and cleanup javadoc in constructorutilsmove/comment suppresswarnings(unchecked)/refactor surrounding codegenerics",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(int,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove unused constructor parameterformat.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display namesrename textstrategy to caseinsensitivetextstrategy per sebb's suggestion[] use the cache in fastdateparser correctly.add final modifier to local variables.tab police fastdateparser could use calendar.getdisplaynames for all text fieldsremove unnecessary keyvalue instances: fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/SystemUtils.java@org.apache.commons.lang3.SystemUtils.isJavaAwtHeadless()": "simplify boolean expression- fix () systemutils.getjavaversionasfloat throws stringindexoutofboundsexception on android runtime/dalvik vm- refactor for unit testing.- remove odd test code which is copy and pasted from systemutils, which therefore does not test anything.",
  "src/main/java/org/apache/commons/lang3/CharSet.java@org.apache.commons.lang3.CharSet.contains(char)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.replace(StrBuilder,int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/tuple/Pair.java@org.apache.commons.lang3.tuple.Pair.getLeft()": "[] add empty_array constants to classes inorg.apache.commons.lang3.tuple",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.format(Object,StringBuffer,FieldPosition)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.InitStripAccents.mid(String,int,int)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.ProxyInvocationHandler.initializeTransientFields(Class,ClassLoader)": "add final modifier to local variables.document some @suppresswarning annotationsallow subclass custom invocation handlingadd serialization support to eventlistenersupport",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isSorted(short)": "formatting fixes perhttps://patch-diff.githubusercontent.com/raw/apache/commons-lang/pull/128.diffcrlf -> lfjavadoc: fix typo but working is still awkward. - add issorted() to arrayutils. patch supplied by james sawle.  in github.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.isJsonArray(String)": ": fix logic in isjsonarray method of jsontostringstyleextract logic for checking string representation of objects into separate methods",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.getGenericComponentType()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.swap(long,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.merge branch '': inconsistent behavior of swap for malformed inputs. thanksto adrian ber.consistent treatment for negative indices for swap methodswap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.format(Date,B)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.getTypeArguments(ParameterizedType,Class,Map)": "explicit type parameters can be removedremove redundant type arguments.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.indexOf(char,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.normalizeUpperBounds(Type)": "remove redundant type arguments.validation",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.join(Object,char,int,int)": "sort members.extract method.add final modifier to local variables.[] stringutils join apis for primitives.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)applying ilya's patch from  fixing an npe when tostring returns null",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isSorted(T)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to method parameters.crlf -> lfjavadoc: fix typo but working is still awkward. - add issorted() to arrayutils. patch supplied by james sawle.  in github.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.format(Date,StringBuffer)": "change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.findRecursiveTypes(ParameterizedType)": "deletes redundant 'new' expression in constant array creationuse final. - stackoverflowerror on typeutils.tostring(...) for a generic return type of enum.valueof ()",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.BasicThreadFactory.newThread(Runnable)": "don't use single letter variable names.add final modifier to local variables.adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.format(long,B)": ": fastdateprinter generates date objects wastefullyfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.TimeZoneNumberRule(boolean)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java@org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long,boolean,int)": " durationformatutils does not handle large durations correctly",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.appendTo(StringBuffer,Calendar)": "zz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TzInfo.TimeZoneStrategy(Calendar,Locale)": ": fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isEmpty(float)": "crlf -> lfjavadoc: fix typo but working is still awkward.simplify isempty be reusing getlengths/if (foo) { return true; } return false;/return foo;/g",
  "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java@org.apache.commons.lang3.StringEscapeUtils.escapeXml(String)": ": add methods for removing all invalid characters according to xml 1.0 and xml 1.1 in an input string to stringescapeutils. thanks to adam hooper",
  "src/main/java/org/apache/commons/lang3/time/StopWatch.java@org.apache.commons.lang3.time.StopWatch.reset()": "sort methods.applying sebb's patch from  - adding isstarted, issuspended and isstopped to stopwatch",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.StrSubstitutor(StrLookup,String,String,char,String)": "add missing since tags for strsubstitutor; wrap lines longer than 80 chars[] strsubstitutor now supports the declaration of default values for the variables to be replaced. thanks to woonsan ko for the patch.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.center(String,int)": "sort members.rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.appendInternal(StringBuffer,String,Object,boolean)": "tab alignment[] clear threadlocal recursion registry (compatibly with existing tests, first pass)",
  "src/main/java/org/apache/commons/lang3/builder/ToStringBuilder.java@org.apache.commons.lang3.builder.ToStringBuilder.reflectionToString(T,ToStringStyle,boolean,Class)": "add final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.splitByWholeSeparator(String,String)": "sort members.make whitespace use before tokens consistent and add a checkstyle rule to enforce it.format nit.",
  "src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java@org.apache.commons.lang3.builder.HashCodeBuilder.append(short)": "add final modifier to local variables.convert to java 5 enhanced loops. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.getDateInstance(int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.appendNewLine()": "deprecate systemutilsline_separator in favor of java.lang.systemlineseparator",
  "src/main/java/org/apache/commons/lang3/exception/ContextedException.java@org.apache.commons.lang3.exception.ContextedException.getContextValues(String)": "refactor exceptioncontext and derived. context contract stipulates a sequence of label-value entries with support for multiple entries for the same label.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.appendIfMissing(String,CharSequence,CharSequence)": "sort members.applying joanne polsky's patch adding appendifmissing/prependifmissing methods to stringutils []",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.startsWith(CharSequence,CharSequence,boolean)": "sort members.another formatting nit, one or the other is already nullremove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)moving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils classadding green regionmatches implementation and moving endswith and startswith methods to use it; thus giving them charsequence based apis. 687",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.getStrategy(String,Calendar)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format fastdateparser does not handle excess hours as per simpledateformatdocsadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .don't mutate parameters",
  "src/main/java/org/apache/commons/lang3/exception/CloneFailedException.java@org.apache.commons.lang3.exception.CloneFailedException.CloneFailedException(String,Throwable)": "add methods for cloneables to objectutils ().",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.hexsToInt(String,int,int,int,int)": "code clean-up for checkstyle.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.TwoDigitYearField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.init(Calendar)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.don't need a copy of this field.add final modifier to local variables.remove redundant type arguments.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/test/java/org/apache/commons/lang3/CharUtilsPerfRun.java@org.apache.commons.lang3.CharUtilsPerfRun.run_CharUtils_isAsciiNumeric(int)": "add final modifier to local variables.convert to java 5 enhanced loops. ",
  "src/main/java/org/apache/commons/lang3/arch/Processor.java@org.apache.commons.lang3.arch.Processor.getType()": ": add archutils - an utility class for the \"os.arch\" system property ()",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadIdPredicate.findThreadsByName(String,String)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.use validateistrue to validate argumentsremove redundant type arguments.fixing crlfsstatement unnecessarily nested within else clause.merge branch 'remove_threadutils_compiler_warnings'remove compiler warnings from threadutils. thanks to pascal schuhmacher.remove compiler warnings from threadutilsincorporated feedback from fabian, formatting adjusted, count >> 1 replaced with count / 2incorporated feedback from peteradd threadutils",
  "src/main/java/org/apache/commons/lang3/CharUtils.java@org.apache.commons.lang3.CharUtils.toChar(Character,char)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.applyRules(Calendar,StringBuffer)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.lastIndexOf(CharSequence,int,int)": "sort members.moving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils classreplacing some of the older code. when performing a mutation operation (even if it's on an immutable by returning a new instance), string should go in and string should come out. when performing a non-mutation operation, charsequence should be passed in. 687moving lastindexof, contains, containswhitespace, indexofany, containsany, indexofanybut, containsonly, containsnone and substring over to using charsequences for parameters. 687",
  "src/main/java/org/apache/commons/lang3/Functions.java@org.apache.commons.lang3.Functions.test(FailableBiPredicate,O1,O2)": "functions.java whitspacesreplace tabs with four spaces, as per the project's checkstyle rules.added functions.trywithresources.",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.getFragmentInSeconds(Calendar,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesmake use of existing timeunit class to manage time units.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableShort.java@org.apache.commons.lang3.mutable.MutableShort.subtract(Number)": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.boolsToHexDigitM0_4bits(boolean,int)": "code clean-up for checkstyle.use lowercase presentation for hex values as it is done in the jdk.use jdk functionality where available.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.AlwaysTruePredicate.findThreadById(long,String)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.use validateistrue to validate argumentsfixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.isSameDay(Date,Date)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.compare(T,T)": " add a null-safe compare() method to objectutils",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.splitByCharacterType(String,boolean)": "sort members.remove redundant type arguments.use stringisempty() instead of stringlength() == 0add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.lastIndexOf(char,char)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.addNamesToKeyValues(List,Map)": ": fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.lastIndexOf(double,double)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.getPublicMethod(Class,String,Class)": "removes unchecked exceptions declared in 'throws' clauseremove redundant type arguments.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.format(Object)": "4fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TzInfo.parse(String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadUtils.test(Thread)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.endsWith(CharSequence,CharSequence,boolean)": "sort members.formatting nit, one or the other is already nulladd final modifier to local variables.moving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils classadding green regionmatches implementation and moving endswith and startswith methods to use it; thus giving them charsequence based apis. 687",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.getStrategy(int)": "make checkstyle happy: add missing javadocreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.applyRules(Calendar,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: resurrect applyrules(java.util.calendar, java.lang.stringbuffer) for binary compatibilityadd final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.FastDatePrinter(String,TimeZone,Locale)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.getReflectUpToClass()": ": recursive and reflective equalsbuilder ()patch by yathos ug",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.TwoDigitNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesscope of local variabel shift can be narrowerpmd: useless parenthesesformat to 120 line length.removed unnecessary multiplication by one.add final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.notEqual(Object,Object)": "removes unnecessary class reference of static method calls which are declared in the same class[github] commons-lang pull request : intellij idea refactorings.. add notequal() method to objectutils",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.CONST(double)": "make sure placement of curly braces is consistent[] introduce const() methods to prevent javac from inlining constants",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.NamePredicate.findThreadById(long)": "fixing crlfsstatement unnecessarily nested within else clause.incorporated feedback from peteradd threadutils",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.median(T)": "add @safevarargs to some methods with vararg parameters to suppress \"type safety: potential heap pollution via varargs parameter array\" warningsremove redundant type arguments.add final modifier to local variables.[] add mode and median comparable... methods to objectutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.getParsePattern()": "allow access to parsedpattern for test purposesmake parseexception text similar to that thrown by simpledateformat",
  "src/main/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java@org.apache.commons.lang3.concurrent.MultiBackgroundInitializerResults.addInitializer(String,BackgroundInitializer)": "use validateistrue to validate arguments",
  "src/main/java/org/apache/commons/lang3/CharUtils.java@org.apache.commons.lang3.CharUtils.isAsciiAlpha(char)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.appendDisplayNames(Calendar,Locale,int,StringBuilder)": "add final modifier to local variables.remove redundant type arguments.: fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle.java@org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(StringBuffer,String,double)": "multilinerecursivetostringstyle: made private field indent static: multiline recursive to string style. this fixes  from github. thanks to jan mat\u00e8rne.",
  "src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java@org.apache.commons.lang3.builder.HashCodeBuilder.register(Object)": "remove redundant type arguments.: remove unnecessary synchronization from registry lookup in equalsbuilder and hashcodebuilder ()[] clear threadlocal for hashcodebuilder as well",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.appendFullDigits(Appendable,int,int)": "add final modifier to local variables.: fastdateprinter memory allocation regressionfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.getDateTimeInstance(int,int,TimeZone)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.TimeZoneStrategy(Locale)": "refactor \"gmt\" magic string.add a default case to switch to appease findbugs: nullpointerexception in fastdateparser$timezonestrategy ()replicate the fix for 1186add final modifier to local variables.remove redundant type arguments. fastdateparser_timezonestrategytesttesttimezonestrategypattern fails on windows with german localereimplementing 1107 fix parsing edge cases in fastdateparserrevert muddled commit - number percentage formatting with fractional digits fastdateparser error - timezones not handled correctlyuse final consistently. : test failure in fastdateparsertest and fastdateformat_parsertest when building with jdk8. thanks to bruno p. kinoshita and henri yandell for their help in fixing this issue.add final modifier to local variables.trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.getLocale()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java@org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,String,boolean,TimeZone)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.make sure lines in files don't have trailing white spaces and remove all trailing white spacesusing validate where possible in time package.: durationformatutils are not able to handle negative duration/periods. document new behavior for negative inputs.: durationformatutils are not able to handle negative durations/periods. reported by michael osipov.remove useless parentheses (pmd).add final modifier to local variables.add final modifier to method parameters.fix brace positions",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.appendDetail(StringBuffer,String,Object)": "extract logic for checking string representation of objects into separate methodsformat source codevariable names should follow naming conventionsmodified appenddetail method for object value in jsontostringstyle classfix the jsontostringstyle:except number types and boolean type, all other types in java should be 'appendasstring': add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.simpleQuote(StringBuilder,String)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateparser too strict on abbreviated short month symbolsadd final modifier to local variables.format.",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.toStringTrueFalse(boolean)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.ws",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.getFragmentInMilliseconds(Calendar,int)": "make use of existing timeunit class to manage time units.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.equals(Object)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.getInstance(String)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.appendTo(Appendable,int)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.format(Object,StringBuffer,FieldPosition)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.replaceChars(String,String,String)": "sort members.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/CharUtils.java@org.apache.commons.lang3.CharUtils.isAsciiAlphaLower(char)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java@org.apache.commons.lang3.concurrent.TimedSemaphore.getLastAcquiresPerPeriod()": "[] added timedsemaphore class to concurrent package.",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(String,Locale,String,boolean)": "make sure placement of curly braces is consistentadd final modifier to local variables.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names: dateutilstest.testlang530 fails for some timezonesadd final modifier to local variables.add final modifier to method parameters. - dateutilsparsedate uses default locale; add locale support",
  "src/main/java/org/apache/commons/lang3/tuple/Triple.java@org.apache.commons.lang3.tuple.Triple.getRight()": "[] add empty_array constants to classes inorg.apache.commons.lang3.tuple",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.unrollBounds(Map,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.format(long,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateprinter generates date objects wastefullyapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/translate/OctalUnescaper.java@org.apache.commons.lang3.text.translate.OctalUnescaper.isOctalDigit(char)": "rewriting octalunescaper as a hand rolled parser (all of 4 characters), instead of trying to handle the conversion via repeated attempts to convert the numbers. this fixes bugs, see , and also changes the behaviour for 'illegal' octals such as \\999. instead of throwing numberformatexception, it will now ignore them. this seems the better behaviour. ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.build()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.getDateTimeInstance(int,int,TimeZone)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.equals(Object)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.splitByWholeSeparatorPreserveAllTokens(String,String)": "sort members.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.getDateTimeInstance(int,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.equals(Object)": "if statement can be simplified",
  "src/main/java/org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.java@org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.addChangeListener(PropertyChangeListener)": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.ComparableComparator.containsAll(Range)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.isAllZeros(String)": "replaces 'size() == 0' and 'length() == 0' with 'isempty()'fixing crlfsstatement unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/time/FormatCache.java@org.apache.commons.lang3.time.FormatCache.getDateTimeInstance(int,int,TimeZone,Locale)": " simplify fastdateformat; eliminate boxing",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.parse(FastDateParser,Calendar,String,ParsePosition,int)": "add final modifier to local variables.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/mutable/MutableObject.java@org.apache.commons.lang3.mutable.MutableObject.equals(Object)": "statement unnecessarily nested within else clause.add final modifier to local variables.fix brace positionseliminate unchecked casttabs to whitespaceapplying sean mickey's patch to  such that mutableobject.equals is as would be expected. now it directly overrides the equals(object) method. ",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.createStrategyMap()": "add final modifier to local variables.remove redundant type arguments.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.asWriter()": ": add zero copy write method to strbuilder; : add zero copy read method to strbuilder. thanks to mikhail mazursky.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.TwoDigitYearField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.differentObject(T,T,String,Object)": ": new methods for lang3.validate ()fixed method names; fixed differentobject to use object.equals",
  "src/main/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle.java@org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(StringBuffer,String,long)": "multilinerecursivetostringstyle: made private field indent static: multiline recursive to string style. this fixes  from github. thanks to jan mat\u00e8rne.",
  "src/main/java/org/apache/commons/lang3/LocaleUtils.java@org.apache.commons.lang3.SyncAvoid.languagesByCountry(String)": "[github] commons-lang pull request : intellij idea refactorings..remove redundant type arguments.add final modifier to local variables.eat own dog food: stringutilsisempty(string) and replace some but not all stringlength() == 0 with stringisempty()use concurrent instead of synchronization; javadoc",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl(Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.setSizeStartText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadIdPredicate.getSystemThreadGroup()": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.format(Date)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.isJsonObject(String)": "extract logic for checking string representation of objects into separate methods",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.WeekYear.format(long,B)": ": fastdateprinter generates date objects wastefully168",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.TimeZoneStrategy(Calendar,Locale)": ": fastdateformat doesn't respect summer daylight in some localized stringsmerge branch 'master' of https://github.com/nickmanley/commons-langthis  fix nullpointerexception in fastdateparser$timezonestrategyfix nullpointerexception in fastdateparser$timezonestrategyrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.isFormatLetter(char)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long,long)": "add final modifier to local variables.remove trailing whitespacescrlf -> lfjavadoc: fix typo but working is still awkward.implements : add a method to arrayutils for removing all occurrences of a given element. thanks to haiyang li.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isNotEmpty(char)": "crlf -> lfjavadoc: fix typo but working is still awkward.simplify isnotempty by reusing isemptyapplying chandrashekar m's patch to , adding isnotempty(array) methods to arrayutils. ",
  "src/main/java/org/apache/commons/lang3/tuple/ImmutableTriple.java@org.apache.commons.lang3.tuple.ImmutableTriple.of(L,M,R)": "sort methods.remove redundant type arguments.adding henning's github pull request with a triple implementation. 675",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.isAllBlank(CharSequence)": "sort members.make sure lines in files don't have trailing white spaces and remove all trailing white spacesrevert \": add stringutilsisanynotempty and isanynotblank\" and add \": add stringutilsisallempty and isallblank methods\" instead: add stringutilsisallempty and isallblank methods",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.isJsonArray(String)": ": fix logic in isjsonarray method of jsontostringstyleextract logic for checking string representation of objects into separate methods",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.applyRules(Calendar,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: resurrect applyrules(java.util.calendar, java.lang.stringbuffer) for binary compatibilityadd final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.MultiLineToStringStyle()": "deprecate systemutilsline_separator in favor of java.lang.systemlineseparator",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.insert(int,byte,byte)": "use final.remove trailing white spacesadded new vararg methods to insert values into an array at an index.this implements . this commit also deprecates the add() methodsthat inserted a single value into an array at an index.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.SimpleToStringStyle()": "reuse",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.isNotFalse(Boolean)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.setArrayStart(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.byteArrayToUuid(byte,int)": "format to 120 line length.use better method names. document possible arrayindexoutofboundsexception and stringindexoutofboundsexception.",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toByteArray(double)": ": please add number to byte[] methods. suggested by lilianne e. blaze. final patch from vincent ricard (with thanks to henri yandell).",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.parse(String)": "add final modifier to local variables.format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display namesadd final modifier to local variables.allow access to parsedpattern for test purposesmake parseexception text similar to that thrown by simpledateformat fastdateparser does not handle non-gregorian calendars properlyuse calendargetdisplaynames() instead of dateformatsymbolsgeteras()applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.shortsToLong(short,int,long,int,int)": "code clean-up for checkstyle.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/time/StopWatch.java@org.apache.commons.lang3.time.StopWatch.resume()": "sort methods.applying sebb's patch from  - adding isstarted, issuspended and isstopped to stopwatchremove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/exception/ContextedException.java@org.apache.commons.lang3.exception.ContextedException.setContextValue(String,Object)": "javdoc and minor tweaks to contexted exceptionrefactor exceptioncontext and derived. context contract stipulates a sequence of label-value entries with support for multiple entries for the same label.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.getDateTimeInstance(int,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.isNextNumber()": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.init()": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.MultiLineToStringStyle()": "deprecate systemutilsline_separator in favor of java.lang.systemlineseparator",
  "src/main/java/org/apache/commons/lang3/SerializationUtils.java@org.apache.commons.lang3.ClassLoaderAwareObjectInputStream.serialize(Serializable,OutputStream)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.use validateistrue to validate arguments: update java requirement from java 6 to 7use try with resources in serializationutilsadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toPrimitive(Character)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.get(T,int,T)": ": refactored to return default value on negative indexrefactored to generics and added isarrayindexvalid",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.DayInWeekField.newCalendar()": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.toBoolean(Integer,Integer,Integer)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.ws[] removed unnecessary elses and use of ternary operator with primitive boolean consequences e.g. (some boolean expression) ? true : false",
  "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java@org.apache.commons.lang3.time.Token.lexx(String)": "remove redundant type arguments. - fix findbugs warnings in durationformatutilsunnecessary array creation durationformatutilslexx does not detect unmatched quote charfix some formatting.add final modifier to local variables.stringbuffer => stringbuilder where being used as a local-only buffer",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.getType()": "provide simple method to wrap a given type to the typed interface",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.FastDatePrinter(String,TimeZone,Locale)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.createPattern(String)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.readResolve()": "removes unnecessary class reference of static method calls which are declared in the same class: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.: add noclassnametostringstyle implementation of tostringstyle. this  from github. thanks to innokenty shuvalov.",
  "src/main/java/org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.java@org.apache.commons.lang3.concurrent.ConcurrentRuntimeException.ConcurrentRuntimeException()": "[] introduced concurrentruntimeexception and extended the exception handling methods of concurrentutils to support runtime exceptions, too.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.parseObject(String,ParsePosition)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.containsVariableTypeSameParametrizedTypeBound(TypeVariable,ParameterizedType)": " - stackoverflowerror on typeutils.tostring(...) for a generic return type of enum.valueof ()",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyClosed.fetchCheckInterval(EventCountCircuitBreaker)": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastTimeZone.java@org.apache.commons.lang3.time.FastTimeZone.getTimeZone(String)": "use final.sort members.[] timezone.gettimezone() in fastdateparser causes resourcecontention</action>. this .",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.setFieldNameValueSeparator(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.compare(byte,byte)": "fixing crlfsformat nit.statement unnecessarily nested within else clause. - add issorted() to arrayutils. patch supplied by james sawle.  in github.",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.NamePredicate.findThreadGroups(ThreadGroupPredicate)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.lastIndexOf(CharSequence,CharSequence)": "sort members.moving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils classreplacing some of the older code. when performing a mutation operation (even if it's on an immutable by returning a new instance), string should go in and string should come out. when performing a non-mutation operation, charsequence should be passed in. 687moving lastindexof, contains, containswhitespace, indexofany, containsany, indexofanybut, containsonly, containsnone and substring over to using charsequences for parameters. 687",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl(Type,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java@org.apache.commons.lang3.math.IEEE754rUtils.min(double)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesuse validateistrue to validate argumentsusing validate where possible in math package.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.appendTo(StringBuffer,Calendar)": "zz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.WeekYear(NumberRule)": ": fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.format(long)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.[] fastdateformat generates date objects wastefully.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.equalsIgnoreCase(CharSequence,CharSequence)": "sort members.consolidate the stringutils.equals and equalsignorecase methods. ()* consolidate the stringutils.equals and equalsignorecase methods.\r\rimplement the same edge case logic for null. use the same parameter\rnames. use the same javadoc wording. change the equals method to use a\rstep-wise charat comparison.\r\r* : added jira to changes.xml.\r stringutils.equalsignorecase doesn't check string reference equalityalso check lengths.moving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils classmoving equalsignorecase, indexofignorecase, lastindexofignorecase and containsignorecase to the charsequence api. 687",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.getInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.indexOf(Throwable,Class,int,boolean)": "sort by method name.[] add exceptionutils.throwableoftype(throwable, class) andfriends.removes unnecessary class reference of static method calls which are declared in the same classadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.clone(long)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java@org.apache.commons.lang3.builder.ReflectionToStringBuilder.checkNotNull(Object)": "use validateistrue to validate argumentsadd checknotnull method in reflectiontostringbuilder.java to fix 1132",
  "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java@org.apache.commons.lang3.concurrent.TimedSemaphore.getAverageCallsPerPeriod()": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)[] added timedsemaphore class to concurrent package.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.getImplicitUpperBounds(WildcardType)": "validation",
  "src/main/java/org/apache/commons/lang3/concurrent/CircuitBreakingException.java@org.apache.commons.lang3.concurrent.CircuitBreakingException.CircuitBreakingException(String)": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.parse(String,ParsePosition)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastTimeZone.java@org.apache.commons.lang3.time.FastTimeZone.parseInt(String)": "[] timezone.gettimezone() in fastdateparser causes resourcecontention</action>. this .",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.concatWith(String,Object)": "adding concat(object...) and concatwith(string, object...) methods to provide vararg'd versions of the more prominent join methods. this ties into the string.concat method. 396",
  "src/test/java/org/apache/commons/lang3/CharUtilsPerfRun.java@org.apache.commons.lang3.CharUtilsPerfRun.run_CharSet(int)": "add final modifier to local variables.convert to java 5 enhanced loops. ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.append(StringBuffer,String,float,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.getImplicitBounds(TypeVariable)": "validation",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.parseObject(String,ParsePosition)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TzInfo.TimeZoneStrategy(Locale)": "refactor \"gmt\" magic string.add a default case to switch to appease findbugs: nullpointerexception in fastdateparser$timezonestrategy ()replicate the fix for 1186add final modifier to local variables.remove redundant type arguments.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategy.updateCheckIntervalData(CheckIntervalData,CheckIntervalData)": "add final modifier to method parameters.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.CONST(T)": "make sure placement of curly braces is consistent[] introduce const() methods to prevent javac from inlining constants",
  "src/main/java/org/apache/commons/lang3/LocaleUtils.java@org.apache.commons.lang3.LocaleUtils.parseLocale(String)": "replaces 'size() == 0' and 'length() == 0' with 'isempty()': localeutilstolocale does not support language followed by un m.49 numeric-3 area code followed by variantintroduce some more local variables to make the code better readableremove initial if statement by adding an early returnreplace switch statement with if-else blockextract some helper methods to make the code better readable",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.containsAny(CharSequence,CharSequence)": "add final modifier to local variables.use enhanced for loop instead of indexed based iteration: add stringutils.containsany(charsequence, charsequence...) method. thanks to daniel stewart.moving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils classreplacing some of the older code. when performing a mutation operation (even if it's on an immutable by returning a new instance), string should go in and string should come out. when performing a non-mutation operation, charsequence should be passed in. 687moving lastindexof, contains, containswhitespace, indexofany, containsany, indexofanybut, containsonly, containsnone and substring over to using charsequences for parameters. 687",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.appendDisplayNames(Calendar,Locale,int,StringBuilder)": "add final modifier to local variables.remove redundant type arguments.: fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java@org.apache.commons.lang3.text.translate.AggregateTranslator.translate(CharSequence,int,Writer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.format(Calendar,StringBuffer)": "fastdateformat apis that use a stringbuilder: dateformatutils.format does not correctly change calendar timezone in certain situations: unit test fastdateprintertimezonestest needs a timezone setapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.appendDigits(StringBuffer,int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.Iso8601_Rule.appendTo(StringBuffer,Calendar)": "zz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/text/StrTokenizer.java@org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(char)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ArchUtils.java@org.apache.commons.lang3.ArchUtils.init_PPC_64Bit()": "use final.: add archutils - an utility class for the \"os.arch\" system property ()",
  "src/main/java/org/apache/commons/lang3/ArchUtils.java@org.apache.commons.lang3.ArchUtils.getProcessor(String)": ": add archutils - an utility class for the \"os.arch\" system property ()",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.append(float,float)": "use not bool instead of bool == false",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.init()": ": fastdateparser could use calendar.getdisplaynames for all text fieldsshow where the parsing failed fastdateparser does not handle unterminated quotes correctlytrailing spaces fastdateparser does not handle non-gregorian calendars properlyfix bug in java 7 (locale.tostring() format has changed) fastdateparser does not handle non-gregorian calendars properly applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.isJsonObject(String)": "extract logic for checking string representation of objects into separate methods",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.getTimeInstance(int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/tuple/Pair.java@org.apache.commons.lang3.tuple.Pair.emptyArray()": "[] add empty_array constants to classes inorg.apache.commons.lang3.tuple",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.TimeZoneNumberRule(boolean,boolean)": "added missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .",
  "src/main/java/org/apache/commons/lang3/mutable/MutableFloat.java@org.apache.commons.lang3.mutable.MutableFloat.getAndIncrement()": "add final modifier to local variables. addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/time/FormatCache.java@org.apache.commons.lang3.time.MultipartKey.getInstance()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.TimeZoneStrategy(Calendar,Locale)": ": fastdateformat doesn't respect summer daylight in some localized stringsmerge branch 'master' of https://github.com/nickmanley/commons-langthis  fix nullpointerexception in fastdateparser$timezonestrategyfix nullpointerexception in fastdateparser$timezonestrategyrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.truncate(Date,int)": "use validateistrue to validate argumentsreplaced private integer constants with private static enum.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.setArrayStart(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.add(int,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.setValueDelimiter(char)": "[] strsubstitutor now supports the declaration of default values for the variables to be replaced. thanks to woonsan ko for the patch.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.parse(String,ParsePosition,Calendar)": "lvar should not hide ivar.add final modifier to local variables.format.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.java@org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.changeState(State)": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.determineTypeArguments(Class,ParameterizedType)": "validation",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.toString()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.nullToEmpty(char)": "crlf -> lfjavadoc: fix typo but working is still awkward.use isempty() where possible. thanks to james sawle for pointing this out.minor code simplificationadding nulltoempty methods to arrayutils per  and levon karayan's patch. ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.lastIndexOf(StrMatcher,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java@org.apache.commons.lang3.concurrent.TimedSemaphore.prepareAcquire()": "[] added a tryacquire() method to timedsemaphore.this method supports non-blocking use cases.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.append(StringBuffer,String,double,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java@org.apache.commons.lang3.builder.ReflectionToStringBuilder.appendFieldsIn(Class)": ": add tostringsummary annotation (): add null filter to reflectiontostringbuilderfix/add since javadoc tags, fix checkstyle violations and do other small clean-ups.merge branch '' of https://github.com/markdacek/commons-lang: added isexcludenullvalues to reflectiontostringbuilder and testadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.StringLiteral(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.parameterizeWithOwner(Type,Class,Map)": "validation[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.isFormatLetter(char)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toByteArray(long)": ": please add number to byte[] methods. suggested by lilianne e. blaze. final patch from vincent ricard (with thanks to henri yandell).",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.setSizeEndText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.getOwnerType()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object,boolean,String,Object)": ": enhance methodutils to allow invocation of private methods ()",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.NamePredicate.getAllThreads()": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/time/StopWatch.java@org.apache.commons.lang3.time.StopWatch.stop()": "sort methods.applying sebb's patch from  - adding isstarted, issuspended and isstopped to stopwatch",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.parseToken(String,int)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/arch/Processor.java@org.apache.commons.lang3.arch.Processor.Processor(Arch,Type)": ": add archutils - an utility class for the \"os.arch\" system property ()",
  "src/main/java/org/apache/commons/lang3/RegExUtils.java@org.apache.commons.lang3.RegExUtils.removeAll(String,String)": "[] add regexutils class instead of overloadinh methods instringutils that take a regex to take precompiled pattern. sort methods.[] add regexutils class instead of overloadinh methods instringutils that take a regex to take precompiled pattern.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.containsOnly(CharSequence,String)": "sort members.rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.SimpleToStringStyle()": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.getCache(int)": "remove redundant type arguments.format.tab police: fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.swap(char,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.merge branch '': inconsistent behavior of swap for malformed inputs. thanksto adrian ber.consistent treatment for negative indices for swap methodswap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategy.EventCountCircuitBreaker(int,long,TimeUnit)": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.readObject(ObjectInputStream)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.getDateInstance(int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.swap(short,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.merge branch '': inconsistent behavior of swap for malformed inputs. thanksto adrian ber.consistent treatment for negative indices for swap methodswap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.Executable.getTotalTransformationCost(Class,Executable)": "make sure placement of curly braces is consistentadd final modifier to local variables.pmd: remove useless parenthesescheckstyle: add missing curly braces: add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.",
  "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java@org.apache.commons.lang3.time.Token.format(Token,int,int,int,int,int,int,int,boolean)": "add final modifier to local variables.add final modifier to method parameters.stringbuffer => stringbuilder where being used as a local-only buffer",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.StrSubstitutor(Map,String,String,char,String)": "add missing since tags for strsubstitutor; wrap lines longer than 80 chars[] strsubstitutor now supports the declaration of default values for the variables to be replaced. thanks to woonsan ko for the patch.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.equals(Object)": "format.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeLiteral.java@org.apache.commons.lang3.reflect.TypeLiteral.hashCode()": "[] provide typeliteral class similar to javax.enterprise.util.typeliteral",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.wrap(String,char)": ": add nul byte to charutils. thanks to beluga behr.make checkstyle happy: add wrap (with string or char) to stringutils. this closes pr  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.CONST(long)": "make sure placement of curly braces is consistent[] introduce const() methods to prevent javac from inlining constants",
  "src/main/java/org/apache/commons/lang3/ArchUtils.java@org.apache.commons.lang3.ArchUtils.addProcessors(Processor,String)": "use final.: add archutils - an utility class for the \"os.arch\" system property ()",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.literal()": "add final modifier to local variables.pmd: these nested if statements could be combinedformat.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.Executable.compareMethodFit(Method,Method,Class)": ": add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.createInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.trimToNull(String)": "sort members.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.compare(KeyValue,KeyValue)": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.appendFieldStart(StringBuffer,String)": " - jsontostringstyle does not escape string namesjsontostringstyle: improve private constant name and remove wrong comment: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.parseDateWithLeniency(String,String,boolean)": "convert to java 5 enhanced loops. javadocsimplify code (eliminate conditional check) and avoid npe warningreplace tab characters with spaces",
  "src/main/java/org/apache/commons/lang3/CharSetUtils.java@org.apache.commons.lang3.CharSetUtils.CharSetUtils()": "sort members and clean up comments.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.parse(String)": "add final modifier to local variables.format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display namesadd final modifier to local variables.allow access to parsedpattern for test purposesmake parseexception text similar to that thrown by simpledateformat fastdateparser does not handle non-gregorian calendars properlyuse calendargetdisplaynames() instead of dateformatsymbolsgeteras()applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/translate/JavaUnicodeEscaper.java@org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.JavaUnicodeEscaper(int,int,boolean)": "<action issue=\"\" type=\"fix\">stringescapeutils.escapejava() and escapeecmascript() do not output the escaped surrogate pairs that are java parsable</action>",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.toIntegerObject(Boolean,Integer,Integer,Integer)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.ws",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.getTimeZone()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.CopyQuotedStrategy(String)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.getImplicitLowerBounds(WildcardType)": "validation",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.format(Calendar)": "4fastdateformat apis that use a stringbuilderapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/Diff.java@org.apache.commons.lang3.builder.Diff.getType()": ": there should be a differencebuilder with a reflectiondifferencebuilder implementation",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.setArrayStart(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/RegExUtils.java@org.apache.commons.lang3.RegExUtils.replaceAll(String,String,String)": "[] add regexutils class instead of overloadinh methods instringutils that take a regex to take precompiled pattern. sort methods.[] add regexutils class instead of overloadinh methods instringutils that take a regex to take precompiled pattern.",
  "src/main/java/org/apache/commons/lang3/ArchUtils.java@org.apache.commons.lang3.ArchUtils.addProcessor(String,Processor)": "flips the order of conditional expressions and 'if' statements whose conditions were negateduse final.: add archutils - an utility class for the \"os.arch\" system property ()",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.getLowerBounds()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.appendToString(StringBuffer,String)": "use stringbuilderappend(charsequence, int, int) were possible to improve performance(similar to , thanks to stephane landelle for the suggestion)",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.parseObject(String,ParsePosition)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategy.isStateTransition(EventCountCircuitBreaker,CheckIntervalData,CheckIntervalData)": "add final modifier to method parameters.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.Range.elementBefore(T)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TzInfo.init(Calendar)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.don't need a copy of this field.add final modifier to local variables.remove redundant type arguments.",
  "src/main/java/org/apache/commons/lang3/AnnotationUtils.java@org.apache.commons.lang3.AnnotationUtils.memberEquals(Class,Object,Object)": "annotationutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.getDateInstance(int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.EventListenerSupport.getListenerCount()": "changing eol-style to native.misc. event utils.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.isNextNumber()": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.letterPattern(char)": "add final modifier to local variables.format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.reverse(Object,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.[] add arrayutils.reverse(array, from, to) methods.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.getStrategy(String)": "document intentional drop-thruapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.CONST_SHORT(int)": " - followup incorporating ggregory's doc suggestion, some doc fixes, addition of const_byte() and const_short(), and junit improvements to test doc examples and make sure const_byte() and const_short() throw illegalargumentexception as required.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.appendln(String,Object)": "[] create strbuilder apis similar to string.format(string, object...)",
  "src/main/java/org/apache/commons/lang3/EnumUtils.java@org.apache.commons.lang3.EnumUtils.processBitVector(Class,long)": "[] permit bitvector generation for enums with > 64 values; plus some test correctionsremove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)require values parameter when generating bit vectors from enums, throwing nullpointerexception if omitted; merge check for type eligibility; add e... generatebitvector() variant; alter generatebitvector(class<e>, enumset<e>) to (class<e>, iterable<e>) by using |= << instead of + to accumulate values; process only specified valuesadding nelson carpentier's patch adding an enumset to bit vector (and back again) to enumutils. 730",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.toBooleanObject(int,int,int,int)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.ws[] removed unnecessary elses and use of ternary operator with primitive boolean consequences e.g. (some boolean expression) ? true : false",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.append(CharBuffer,int,int)": ": avoid string allocation in strbuilder.append(charsequence). this fixes  from github. thanks to mikhail mazurskiy and fabian lange.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyClosed.EventCountCircuitBreaker(int,long,TimeUnit,int)": "add final modifier to method parameters.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.getLocale()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/LocaleUtils.java@org.apache.commons.lang3.LocaleUtils.languagesByCountry(String)": "[github] commons-lang pull request : intellij idea refactorings..remove redundant type arguments.add final modifier to local variables.eat own dog food: stringutilsisempty(string) and replace some but not all stringlength() == 0 with stringisempty()use concurrent instead of synchronization; javadoc",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.parseToken(String,int)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.toCharArray()": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.setSummaryObjectStartText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.CheckIntervalData.fetchCheckInterval(EventCountCircuitBreaker)": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyClosed.getCheckIntervalStart()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.newCalendar()": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/CharUtils.java@org.apache.commons.lang3.CharUtils.toCharacterObject(char)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.append(StringBuilder)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.<action issue=\"\" type=\"add\">strbuilder should support stringbuilder as an input parameter</action>",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.iterator(Calendar,int)": "add explict default case",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float,float)": "add final modifier to local variables.remove trailing whitespacescrlf -> lfjavadoc: fix typo but working is still awkward.implements : add a method to arrayutils for removing all occurrences of a given element. thanks to haiyang li.",
  "src/main/java/org/apache/commons/lang3/AnnotationUtils.java@org.apache.commons.lang3.AnnotationUtils.arrayMemberEquals(Class,Object,Object)": "annotationutils",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.wrap(Class)": "removes unnecessary class reference of static method calls which are declared in the same classprevent redundant modifiersadd typesafe wrap variant for classes",
  "src/main/java/org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.java@org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.removeChangeListener(PropertyChangeListener)": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.parse(String,ParsePosition,Calendar)": "lvar should not hide ivar.add final modifier to local variables.format.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.selectNumberRule(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.KeyValue(String,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.readResolve()": "removes unnecessary class reference of static method calls which are declared in the same class: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.: add noclassnametostringstyle implementation of tostringstyle. this  from github. thanks to innokenty shuvalov.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.replaceEachRepeatedly(String,String,String)": "sort members.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.hexsToShort(String,int,short,int,int)": "code clean-up for checkstyle.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.hashCode()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.reverse(byte)": "crlf -> lfjavadoc: fix typo but working is still awkward.[] add arrayutils.reverse(array, from, to) methods.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableLong.java@org.apache.commons.lang3.mutable.MutableLong.compareTo(MutableLong)": "pmd: useless parentheses.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.appendDisplayNames(Calendar,Locale,int,StringBuilder)": "add final modifier to local variables.remove redundant type arguments.: fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java@org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.initialize()": "remove redundant type arguments.add final modifier to local variables.",
  "src/test/java/org/apache/commons/lang3/test/NotVisibleExceptionFactory.java@org.apache.commons.lang3.test.NotVisibleException.getCause()": "[] prefer throwable.getcause() in exceptionutils.getcause() ()",
  "src/main/java/org/apache/commons/lang3/SystemUtils.java@org.apache.commons.lang3.SystemUtils.toJavaVersionIntArray(String,int)": "- fix () systemutils.getjavaversionasfloat throws stringindexoutofboundsexception on android runtime/dalvik vm- refactor for unit testing.- remove odd test code which is copy and pasted from systemutils, which therefore does not test anything.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.CONST(short)": "make sure placement of curly braces is consistent[] introduce const() methods to prevent javac from inlining constants",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.append(byte,byte)": "use not bool instead of bool == false",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.getSimpleName(Object)": "[] add methods to classutils to get various forms of classnames in a null-safe manner",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.TwoDigitMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.TimeZoneStrategy(Calendar,Locale)": ": fastdateformat doesn't respect summer daylight in some localized stringsmerge branch 'master' of https://github.com/nickmanley/commons-langthis  fix nullpointerexception in fastdateparser$timezonestrategyfix nullpointerexception in fastdateparser$timezonestrategyrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.parse(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.Iso8601_Rule.equals(Object)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.equals(Object)": "format.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.contains(Object,Object)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.CheckIntervalData.incrementAndCheckState(Integer)": " fix eventcountcircuitbreaker increment batchfixes incrementandcheckstate(integer increment) by passing the increment downstream.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.append(CharSequence,int,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces<action issue=\"\" type=\"add\">strbuilder should support stringbuilder as an input parameter</action>",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.substringBetween(String,String)": "sort members.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.lastIndexOf(String,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.TimeZoneNameRule(TimeZone,Locale,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces fastdateformat's \"z\" pattern does not respect timezone of calendar instances passed to format()applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/StandardToStringStyle.java@org.apache.commons.lang3.builder.StandardToStringStyle.StandardToStringStyle()": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.max(float)": "fixing crlfsstatement unnecessarily nested within else clause. code refactoring in numberutils",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.readResolve()": "removes unnecessary class reference of static method calls which are declared in the same class: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.: add noclassnametostringstyle implementation of tostringstyle. this  from github. thanks to innokenty shuvalov.",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object,String,Object,Class)": "add final modifier to method parameters.fix whitespaces, add missing @since tag: enhance methodutils to allow invocation of private methods (): add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.a bit of dog food and a lot of javadoc tweakageadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.rightPad(String,int,String)": "add final modifier to local variables.[] stringutils join with var args. add and use space string constant for \" \".rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.ISO8601TimeZoneStrategy(String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/tuple/MutablePair.java@org.apache.commons.lang3.tuple.MutablePair.getRight()": "sort methods.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shift(float,int,int,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.crlf -> lfjavadoc: fix typo but working is still awkward.merge branch '': inconsistent behavior of swap for malformed inputs. thanksto adrian ber.new test caseexplanations about algorithmtabs replaced by spacesnew tests addedswap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.getActualTypeArguments()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.validIndex(T,int)": ": added validstate()",
  "src/main/java/org/apache/commons/lang3/time/GmtTimeZone.java@org.apache.commons.lang3.time.GmtTimeZone.setRawOffset(int)": "[] timezone.gettimezone() in fastdateparser causes resourcecontention</action>. this .",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.appendTo(StringBuffer,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(Throwable)": "[github] commons-lang pull request : intellij idea refactorings..remove redundant type arguments.add final modifier to local variables.setting the length of the new array to optimize speed",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long,String)": "validate's string.format without arguments ()while calling string.format(\"some string\") without any additionalarguments is not technically wrong, it's redundant, as it justreturns the same string.removing these calls and just using the string instead both cleans upthe code and offers a (very slight) performance gain.: validate: add inclusivebetween and exclusivebetween overloads for primitives types. initial patch provided by sebb.",
  "src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java@org.apache.commons.lang3.builder.HashCodeBuilder.HashCodeBuilder(int,int)": "using validate where possible in builder package. - redundant check for zero in hashcodebuilder ctor. patch provided by allon mureinik via github.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.StrategyAndWidth(Strategy,int)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.compare(Map,Map)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.max(T)": "add final modifier to local variables. - change objectutils min() & max() functions to use varargs rather than just two parameters",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.hashCodeMulti(Object)": "removes unnecessary class reference of static method calls which are declared in the same classuse final consistently. : fix deprecation warnings; found some more usagesadd final modifier to local variables.convert to java 5 enhanced loops.  - add hashcodemulti varargs method",
  "src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java@org.apache.commons.lang3.mutable.MutableDouble.getAndDecrement()": "add final modifier to local variables. addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.appendDisplayNames(Calendar,Locale,int,StringBuilder,Map)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.appendAll(Iterable)": "add final modifier to local variables.support varargs in strbuilder.appendall(); also convert iterable form of method to use enhanced for loop",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.toString()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.parse(String)": "add final modifier to local variables.format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.applyRules(Calendar,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: resurrect applyrules(java.util.calendar, java.lang.stringbuffer) for binary compatibilityadd final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/exception/CloneFailedException.java@org.apache.commons.lang3.exception.CloneFailedException.CloneFailedException(Throwable)": "add methods for cloneables to objectutils ().",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.getInstance(String,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.java@org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.open()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadIdPredicate.findThreadById(long)": "fixing crlfsstatement unnecessarily nested within else clause.incorporated feedback from peteradd threadutils",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.join(long,char)": "sort members.[] stringutils join apis for primitives.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.append(StringBuffer,String,short,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.min(long,long,long)": "fixing crlfsstatement unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/RandomStringUtils.java@org.apache.commons.lang3.RandomStringUtils.randomAlphabetic(int)": ": extend randomstringutils with methods that generate strings between a min and max length (, )",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.parsePattern()": "adjust fastdateformat for java 7 behavior regarding format of the year pattern ().refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.SimpleToStringStyle()": "reuse",
  "src/main/java/org/apache/commons/lang3/CharUtils.java@org.apache.commons.lang3.CharUtils.toChar(Character)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.appendDigits(Appendable,int)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.appendRecursiveTypes(StringBuilder,int,Type)": " - stackoverflowerror on typeutils.tostring(...) for a generic return type of enum.valueof ()",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.iterator()": "make whitespace use around generic tokens consistent and add a checkstyle rule to enforce it.make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove redundant type arguments.use final consistently. [] retrieve class hierarchy",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.parsePattern()": "adjust fastdateformat for java 7 behavior regarding format of the year pattern ().refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.abbreviate(String,int,int)": "sort members.: stringutilsabbreviate should support 'custom ellipses' parameter ()remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687tab police (and trailing spaces)makes sure \"...\" is the same all over this method. rename method from truncatemiddle() to abbreviatemiddle()",
  "src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java@org.apache.commons.lang3.builder.HashCodeBuilder.toHashCode()": "checkstyle and trailing spaces.adding builder interface, and refactoring the builder classes and basicthreadfactory to implement this interface. patch from michael wooten in 601",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.getTypeArguments(Class,Class,Map)": "explicit type parameters can be removedremove redundant type arguments.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.parse(String)": "add final modifier to local variables.format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display namesadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.appendDigits(StringBuffer,int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.format(long)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.[] fastdateformat generates date objects wastefully.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.appendTo(Appendable,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyOpen.close()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.intArrayToLong(int,int,long,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesscope of local variabel shift can be narrowerpmd: useless parenthesesformat to 120 line length.add final modifier to local variables.use better method names. document possible arrayindexoutofboundsexception and stringindexoutofboundsexception.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.FastDateParser(String,TimeZone,Locale,Date,boolean)": ": dateutilstest.testlang530 fails for some timezones",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.appendEnd(StringBuffer,Object)": "[github] commons-lang pull request : intellij idea refactorings..",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.getFieldWidth()": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.minimizeCapacity()": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.setCalendar(FastDateParser,Calendar,String)": "[] timezone.gettimezone() in fastdateparser causes resourcecontention</action>. this .utc and gmt are the same, so simplify.refactor \"gmt\" magic string.make sure lines in files don't have trailing white spaces and remove all trailing white spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.TwoDigitYearField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.deleteAll(String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/text/StrLookup.java@org.apache.commons.lang3.text.MapStrLookup.lookup(String)": "replaces 'size() == 0' and 'length() == 0' with 'isempty()'add final modifier to local variables.[] strlookup for system properties now sees updated values.the lookup implementation now directly accesses system properties withoutcaching the properties object in any way.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.getInstance()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.appendToString(StringBuffer,String)": "use stringbuilderappend(charsequence, int, int) were possible to improve performance(similar to , thanks to stephane landelle for the suggestion)add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.addAll(int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.subarray(float,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.getDateTimeInstance(int,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TzInfo.parse(FastDateParser,Calendar,String,ParsePosition,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.getAbbreviatedName(String,int)": "add final modifier to local variables.: add classutils.getabbreviatedname(). this fixes  from github. thanks to fabian lange.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java@org.apache.commons.lang3.mutable.MutableDouble.getAndAdd(double)": "add final modifier to local variables. addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.format(Calendar,StringBuffer)": "fastdateformat apis that use a stringbuilder: dateformatutils.format does not correctly change calendar timezone in certain situations: unit test fastdateprintertimezonestest needs a timezone setapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.exclusiveBetween(T,T,Comparable)": "add todosjavadocfix brace positionsapplying valentin rocher's patch to , adding new regexp and in range methods to validate",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.format(Calendar,StringBuffer)": "4fastdateformat apis that use a stringbuilder: dateformatutils.format does not correctly change calendar timezone in certain situations: unit test fastdateprintertimezonestest needs a timezone setapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.WildcardTypeImpl(Type,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.max(long)": "fixing crlfsstatement unnecessarily nested within else clause. code refactoring in numberutils",
  "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java@org.apache.commons.lang3.text.translate.NumericEntityEscaper.above(int)": "reverting r1090111 - moving the text.translate escapers back from using range to replicating parts of the range api. see the list for details ('unnecessary boxing in stringescapeutils etc'), the move to range was an uncomfortable fit. ",
  "src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java@org.apache.commons.lang3.builder.HashCodeBuilder.append(double)": "add final modifier to local variables.convert to java 5 enhanced loops. ",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.intToBools(int,int,boolean,int,int)": "code clean-up for checkstyle.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.TextField(int,String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.readResolve()": "removes unnecessary class reference of static method calls which are declared in the same class: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.: add noclassnametostringstyle implementation of tostringstyle. this  from github. thanks to innokenty shuvalov.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.add(Object,int,Object,Class)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.parsePattern()": "adjust fastdateformat for java 7 behavior regarding format of the year pattern ().refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.init()": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadUtils.ThreadIdPredicate(long)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.literal()": "add final modifier to local variables.pmd: these nested if statements could be combinedformat.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shift(byte,int,int,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.crlf -> lfjavadoc: fix typo but working is still awkward.merge branch '': inconsistent behavior of swap for malformed inputs. thanksto adrian ber.new test caseexplanations about algorithmtabs replaced by spacesnew tests addedswap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.appendTo(Appendable,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadUtils.findThreadById(long,String)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.use validateistrue to validate argumentsfixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.format(long,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateprinter generates date objects wastefullyapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.wrap(Class)": "removes unnecessary class reference of static method calls which are declared in the same classprevent redundant modifiersadd typesafe wrap variant for classes",
  "src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java@org.apache.commons.lang3.exception.ContextedRuntimeException.setContextValue(String,Object)": "javdoc and minor tweaks to contexted exceptionrefactor exceptioncontext and derived. context contract stipulates a sequence of label-value entries with support for multiple entries for the same label.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.isFormatLetter(char)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.finite(double)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/CharSet.java@org.apache.commons.lang3.CharSet.CharSet(String)": "use final.use foreach loop for arrays ()since the project no longer supports java versions older than 6, it'ssafe to use the enhanced for loop syntax introduced in java 5.this patch employs this syntax where possible to clean up the code.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/StopWatch.java@org.apache.commons.lang3.time.StopWatch.start()": "sort methods.applying sebb's patch from  - adding isstarted, issuspended and isstopped to stopwatch",
  "src/main/java/org/apache/commons/lang3/mutable/MutableFloat.java@org.apache.commons.lang3.mutable.MutableFloat.addAndGet(Number)": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.TimeZoneNumberRule(boolean)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyOpen.incrementAndCheckState(Integer)": " fix eventcountcircuitbreaker increment batchfixes incrementandcheckstate(integer increment) by passing the increment downstream.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesscope of local variabel shift can be narrowerformat to 120 line length.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.adjustYear(int)": "replace tabs with whitespaces and add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.applyRules(Calendar,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: resurrect applyrules(java.util.calendar, java.lang.stringbuffer) for binary compatibilityadd final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.WildcardTypeImpl(Type,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.appendTo(Appendable,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.getStackFrames(String)": "sort by method name.deprecate systemutilsline_separator in favor of java.lang.systemlineseparatorremove redundant type arguments.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.Executable.Executable(Method)": ": add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.join(T)": "sort members.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.append(StringBuffer,String,Object,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.containsAny(CharSequence,String)": "change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.replaceIgnoreCase(String,String,String)": "sort members.merge branch '': add stringutilsremoveignorecasepatch by gokul nanthakumar c",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.Range.isAfterRange(Range)": "refactor range with lots of new methods",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(Class,String,Object,Class)": ": add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.a bit of dog food and a lot of javadoc tweakageadd final modifier to local variables.[] add methodutil apis to call methods without parameters.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyOpen.isStateTransition(EventCountCircuitBreaker,CheckIntervalData,CheckIntervalData)": "add final modifier to method parameters.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.wrap(Type)": "provide simple method to wrap a given type to the typed interface",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.greater(double,double)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.wrap(Class)": "removes unnecessary class reference of static method calls which are declared in the same classprevent redundant modifiersadd typesafe wrap variant for classes",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.getDateInstance(int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.getCause(Throwable,String)": "[] prefer throwable.getcause() in exceptionutils.getcause() ()add final modifier to local variables.convert to java 5 enhanced loops. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.TimeZoneNameRule(TimeZone,Locale,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces fastdateformat's \"z\" pattern does not respect timezone of calendar instances passed to format()applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.setFieldNameValueSeparator(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.round(Date,int)": "use validateistrue to validate argumentsreplaced private integer constants with private static enum.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.FastDateFormat(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.join(double,char,int,int)": "sort members.extract method.add final modifier to local variables.[] stringutils join apis for primitives.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategy.incrementAndCheckState(Integer)": " fix eventcountcircuitbreaker increment batchfixes incrementandcheckstate(integer increment) by passing the increment downstream.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(Map,Type)": "removes unnecessary class reference of static method calls which are declared in the same classprevent redundant modifiersremove redundant type arguments.null-guard[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.appendTo(Appendable,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.reverse(long)": "crlf -> lfjavadoc: fix typo but working is still awkward.[] add arrayutils.reverse(array, from, to) methods.",
  "src/main/java/org/apache/commons/lang3/CharUtils.java@org.apache.commons.lang3.CharUtils.isAsciiAlphaUpper(char)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyOpen.performStateCheck(int)": "add final modifier to local variables.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.replaceEach(String,String,String,boolean,int)": "use stringisempty() instead of stringlength() == 0add final modifier to local variables.add final modifier to method parameters.changing exception message per sebb's comment in 686improving error message when recursion fails ttl in replaceeachrepeatedly. 686[] stringutils doc/comment spelling fixes.fix brace positionstab police (and trailing spaces)",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.appendFullDigits(Appendable,int,int)": "add final modifier to local variables.: fastdateprinter memory allocation regressionfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.hexToLong(String,int,long,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesscope of local variabel shift can be narrowerformat to 120 line length.add final modifier to local variables.use better method names. document possible arrayindexoutofboundsexception and stringindexoutofboundsexception.",
  "src/main/java/org/apache/commons/lang3/RegExUtils.java@org.apache.commons.lang3.RegExUtils.removeFirst(String,String)": "[] add regexutils class instead of overloadinh methods instringutils that take a regex to take precompiled pattern. sort methods.[] add regexutils class instead of overloadinh methods instringutils that take a regex to take precompiled pattern.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.Iso8601_Rule.format(Date,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java@org.apache.commons.lang3.StringEscapeUtils.escapeHtml3(String)": "remove unnecessary white spaces",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.typesSatisfyVariables(Map)": "the the patrol.validation",
  "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java@org.apache.commons.lang3.concurrent.TimedSemaphore.endOfPeriod()": "[] added a tryacquire() method to timedsemaphore.this method supports non-blocking use cases.[] added timedsemaphore class to concurrent package.",
  "src/main/java/org/apache/commons/lang3/RandomStringUtils.java@org.apache.commons.lang3.RandomStringUtils.randomNumeric(int,int)": ": extend randomstringutils with methods that generate strings between a min and max length (, )",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.CONST(short)": "make sure placement of curly braces is consistent[] introduce const() methods to prevent javac from inlining constants",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.StringLiteral(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.getRawType()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.format(Date,StringBuffer)": "change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.appendNewLine()": "deprecate systemutilsline_separator in favor of java.lang.systemlineseparator",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shuffle(long,Random)": ": added shuffle methods to arrayutils",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.or(boolean)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.add final modifier to local variables.ws[] add booleanutils.and/or varargs methods to complement xor",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.getOpeningThreshold()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyClosed.getOpeningInterval()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.TzInfo(TimeZone,boolean)": ": fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.literal()": "add final modifier to local variables.pmd: these nested if statements could be combinedformat.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.notNull(T)": ": added validstate()",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.toBooleanObject(String)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.add explict default caseadd final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)wsfix brace positionsadding t/f and y/n options to tobooleanobject(string). 649must not use autoboxing for booleans in tobooleanobject(string), as we rely on object equality in toboolean(string)refactoring toboolean(string) and tobooleanobject(string) so that the latter has the same optimizations. i did this by pointing the former to the latter. i had to rewrite the optimizations a bit so they didn't auto-return as the latter considers null and false to be different. i also had to add specific support for false, no and off for the same reason. 633",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.contains(byte,byte)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/StopWatch.java@org.apache.commons.lang3.time.StopWatch.suspend()": "sort methods.applying sebb's patch from  - adding isstarted, issuspended and isstopped to stopwatch",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.createInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.InitStripAccents.stripStart(String,String)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.max(int,int,int)": "fixing crlfsstatement unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.Range.getComparator()": "refactor range with lots of new methods",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.removeAccentsSUN(CharSequence)": " use iod for stripaccent init stringutils throws java.security.accesscontrolexception on google app enginechange static code to catch and save exception; only report failure if no method is availablereapplying more of oliver's checkstyle fixes from r1083211checkstyleadding cedrik lime's patch from ; adding unaccenting for java 1.3->1.5 via reflection usage of sun jvms",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.BasicThreadFactory.getNamingPattern()": "adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.getDateInstance(int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.CopyQuotedStrategy(String)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/math/Fraction.java@org.apache.commons.lang3.math.Fraction.getFraction(String)": "use validateistrue to validate argumentsstatement unnecessarily nested within else clause.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.TextStrategy(int,Calendar,Locale)": " - tolowercase should use locale, additional unit tests for case-insensitive matching - fastdateparser should be case insensitive: fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.getInstance()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeElement(int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.stripToNull(String)": "sort members.use stringisempty() instead of stringlength() == 0",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.MemberUtils.of(Constructor)": "make sure placement of curly braces is consistent: add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.format(Object)": "fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.max(short)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesfixing crlfsstatement unnecessarily nested within else clause. code refactoring in numberutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.appendTo(StringBuffer,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.delete(int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java@org.apache.commons.lang3.text.translate.CodePointTranslator.translate(CharSequence,int,Writer)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesno need for if/then/else w/ 2 returns when a simple ternary expression will do.add final modifier to local variables.formatting/ws",
  "src/main/java/org/apache/commons/lang3/time/FormatCache.java@org.apache.commons.lang3.time.FormatCache.getInstance(String,TimeZone,Locale)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesuse validatenotnull instead of \"throw new nullpointerexception\"add final modifier to local variables.refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.ISO8601TimeZoneStrategy(String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display namesreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(CharSequence,CharSequence)": "sort members.",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.min(float)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesfixing crlfsstatement unnecessarily nested within else clause. code refactoring in numberutils",
  "src/main/java/org/apache/commons/lang3/builder/Diff.java@org.apache.commons.lang3.builder.Diff.Diff(String)": ": there should be a differencebuilder with a reflectiondifferencebuilder implementation",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.truncate(Calendar,int)": "replaced private integer constants with private static enum.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.compare(String,String)": ": fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.WeekYear.appendFullDigits(Appendable,int,int)": "add final modifier to local variables.: fastdateprinter memory allocation regression169",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.replaceImpl(StrMatcher,String,int,int,int)": ": strbuilderreplaceall arrayindexoutofboundsexception ()avoid arrayindexoutofboundsexception by keeping variable buf consistent with buffer in strbuilderreplaceimpl.add final modifier to local variables.add final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.toString(Boolean,String,String,String)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.ws",
  "src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java@org.apache.commons.lang3.builder.DiffBuilder.append(String,char,char)": "use validateistrue to validate arguments: there should be a differencebuilder with a reflectiondifferencebuilder implementation",
  "src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java@org.apache.commons.lang3.builder.HashCodeBuilder.append(char)": "add final modifier to local variables.convert to java 5 enhanced loops. ",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toShort(String)": "fixing crlfsstatement unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.format(Date,B)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/text/StrTokenizer.java@org.apache.commons.lang3.text.StrTokenizer.tokenize(char,int,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove redundant type arguments.reuseit's confusing to re-use field names locallyadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.append(String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.<action issue=\"\" type=\"add\">strbuilder should support stringbuilder as an input parameter</action>",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategy.stateStrategy(State)": "[github] commons-lang pull request : intellij idea refactorings..add final modifier to local variables.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/EnumUtils.java@org.apache.commons.lang3.EnumUtils.getEnumList(Class)": "remove redundant type arguments.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.literal()": "add final modifier to local variables.pmd: these nested if statements could be combinedformat.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.appendTo(StringBuffer,Calendar)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.getDateInstance(int,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.addAll(byte,byte)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.java@org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.isOpen()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.applyRules(Calendar,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: resurrect applyrules(java.util.calendar, java.lang.stringbuffer) for binary compatibilityadd final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.max(int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesfixing crlfsstatement unnecessarily nested within else clause. code refactoring in numberutils",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toByteArray(short)": ": please add number to byte[] methods. suggested by lilianne e. blaze. final patch from vincent ricard (with thanks to henri yandell).",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.getInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.format(Date)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.ISO8601TimeZoneStrategy(String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display namesreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.containsOnly(CharSequence,char)": "sort members.use index_not_found instead of magic number.change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.getTimeZone()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/SerializationUtils.java@org.apache.commons.lang3.ClassLoaderAwareObjectInputStream.resolveClass(ObjectStreamClass)": "statement unnecessarily nested within else clause.add final modifier to local variables.applying benedikt ritter's patch to fix the checkstyle error in serializationutils - 793[] serializationutils throws classnotfoundexception when cloning primitive classesapplying sven ludwig's patch from . this modifies the serializationutils.clone method to use the threadcontextloader if it is unable to find a class using the object's current classloader. this should (hopefully) help with weblogic and tomcat situations where lang is outside the web-inf for some reason (likely user error with tomcat, by design for weblogic)",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.appendTo(Appendable,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.parse(String,ParsePosition)": "format.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names: dateutilstest.testlang530 fails for some timezonesadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.indexOf(String,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableLong.java@org.apache.commons.lang3.mutable.MutableLong.getAndAdd(long)": "add final modifier to local variables. addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.NamePredicate.findThreadGroups(ThreadGroup,boolean,ThreadGroupPredicate)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.use validateistrue to validate argumentsremove redundant type arguments.fixing crlfsstatement unnecessarily nested within else clause.incorporated feedback from fabian, formatting adjusted, count >> 1 replaced with count / 2incorporated feedback from peteradd threadutils",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.next()": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove redundant type arguments.[] retrieve class hierarchy",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.appendToString(StringBuffer,String)": "use stringbuilderappend(charsequence, int, int) were possible to improve performance(similar to , thanks to stephane landelle for the suggestion)",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.replaceImpl(int,int,int,String,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toInt(String,int)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.fixing crlfsstatement unnecessarily nested within else clause.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.format(long)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.[] fastdateformat generates date objects wastefully.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.toStringBuilder()": "strbuilder implements builder; provide tostringbuilder as tostringbuffer",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.append(StringBuffer,String,Object,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.getStrategy(char,int,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y') partial: implement format 'u' for fastdateformat, day number of weekrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.remove(float,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.isFormatLetter(char)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/CharUtils.java@org.apache.commons.lang3.CharUtils.isAsciiControl(char)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/LocaleUtils.java@org.apache.commons.lang3.LocaleUtils.isISO639LanguageCode(String)": "extract some helper methods to make the code better readable",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.format(Calendar)": "fastdateformat apis that use a stringbuilderapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.isNotEmpty(Object)": ": add empty checks to objectutils",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.iterator(Date,int)": "use validateistrue to validate argumentsadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.extractTypeArgumentsFrom(Map,TypeVariable)": "use final consistently. [] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.getInstance(String,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.getFragmentInHours(Date,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesmake use of existing timeunit class to manage time units.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.setArraySeparator(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java@org.apache.commons.lang3.math.IEEE754rUtils.max(double)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesuse validateistrue to validate argumentsusing validate where possible in math package.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.parse(String,ParsePosition)": "format.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names: dateutilstest.testlang530 fails for some timezonesadd final modifier to local variables.trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.smallerOrEqual(long,long,String,Object)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.toArray(Map)": "trailing spaces fastdateparser does not handle non-gregorian calendars properlyuse calendargetdisplaynames() instead of dateformatsymbolsgeteras()",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.applyRules(Calendar,B)": "add final modifier to local variables.1154fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesscope of local variabel shift can be narrowerformat to 120 line length.add final modifier to method parameters.use better method names. document possible arrayindexoutofboundsexception and stringindexoutofboundsexception.",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.boolsToHexDigit(boolean)": ":  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/text/WordUtils.java@org.apache.commons.lang3.text.WordUtils.containsAllWords(String,String)": "doc: stringutils.containsany. add: containsallwords to wordutils",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.getCanonicalName(String)": "replaces 'size() == 0' and 'length() == 0' with 'isempty()'statement unnecessarily nested within else clause.statement unnecessarily nested within else clause.add final modifier to local variables.[] add apis classutils.isprimitivewrapper(class<?>) and isprimitiveorwrapper(class<?>)",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.format(long,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateprinter generates date objects wastefullyapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.InitStripAccents.indexOfAny(CharSequence,CharSequence)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.getParsePattern()": "allow access to parsedpattern for test purposesmake parseexception text similar to that thrown by simpledateformat",
  "src/main/java/org/apache/commons/lang3/tuple/Pair.java@org.apache.commons.lang3.tuple.Pair.getValue()": "sort methods.",
  "src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java@org.apache.commons.lang3.reflect.FieldUtils.getDeclaredFields(Class)": "[] add fieldutils getdeclaredfields() to return all the fields defined in the given class and super classes.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toStringArray(Object)": ": add arrayutilstostringarray(object[], string) method (and minimal clean-up of arrayutilstostringarray(object[]))add changes.xml entry: add arrayutilstostringarray(object[]) methodpatch supplied by ig",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.ExceptionUtils()": "sort by method name.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.getInstance()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.format(long)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.[] fastdateformat generates date objects wastefully.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.appendTo(StringBuffer,Calendar)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toPrimitive(Boolean)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.subarray(double,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/concurrent/CircuitBreakingException.java@org.apache.commons.lang3.concurrent.CircuitBreakingException.CircuitBreakingException(String,Throwable)": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.unrollVariables(Map,Type)": "removes unnecessary class reference of static method calls which are declared in the same classprevent redundant modifiersremove redundant type arguments.null-guard[] new type util features",
  "src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java@org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(int,int,T,boolean,Class,String)": "use validateistrue to validate argumentsadd final modifier to local variables.add final modifier to method parameters.more varargs-related updates",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.wildcardTypeToString(WildcardType)": "typeutils wildcard fixes[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.getDateTimeInstance(int,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.TwoDigitNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.format(long,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateprinter generates date objects wastefullyapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.add(float,float)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.readObject(ObjectInputStream)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.capitalize(String)": "sort members.add final modifier to local variables.: stringutils should use toxxxxcase(int) rather than toxxxxcase(char) ()based on patch by sebbadd final modifier to local variables.switched capitalize back to using totitlecase. added a test for this using the 'lj' letter. 1142updates for : stringutils.uncapitalize performance improvement. similar fix also applied to stringutils.capitalize (as mentioned in issue). thanks to leo wang.use final consistently. tabs and trailing spacesshort circuit (un)capitalize if string is already (un)capitalized.rolling capitalize and uncapitalize back from (charsequence) to (string)",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.setSummaryObjectStartText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/arch/Processor.java@org.apache.commons.lang3.arch.Processor.isIA64()": ": add archutils - an utility class for the \"os.arch\" system property ()",
  "src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java@org.apache.commons.lang3.exception.DefaultExceptionContext.addContextValue(String,Object)": "remove redundant type arguments.remove add and set methods of exceptioncontext types taking a pair. format entries with index. improve javadoc. add serialization test.refactor exceptioncontext and derived. context contract stipulates a sequence of label-value entries with support for multiple entries for the same label.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.TwoDigitMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java@org.apache.commons.lang3.text.translate.EntityArrays.invert(String)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.modify(int)": " fastdateparser does not handle excess hours as per simpledateformattrailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle.java@org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(StringBuffer,String,boolean)": "multilinerecursivetostringstyle: made private field indent static: multiline recursive to string style. this fixes  from github. thanks to jan mat\u00e8rne.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.getDateTimeInstance(int,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.TwentyFourHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.appendTo(StringBuffer,Calendar)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.convertRemainingAccentCharacters(StringBuilder)": "sort members.: stringutils.stripaccents should remove accents from \"\u0142\" and \"\u0142\" ().",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.reverse(int)": "crlf -> lfjavadoc: fix typo but working is still awkward.[] add arrayutils.reverse(array, from, to) methods.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.getClosingThreshold()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.FastDateFormat(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.createInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(Object,String,Object,Class)": "a bit of dog food and a lot of javadoc tweakageadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/tuple/Pair.java@org.apache.commons.lang3.tuple.PairAdapter.setValue(R)": "[] add empty_array constants to classes inorg.apache.commons.lang3.tuple",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.delete(int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.format(Object,StringBuffer,FieldPosition)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrLookup.java@org.apache.commons.lang3.text.SystemPropertiesStrLookup.lookup(String)": "replaces 'size() == 0' and 'length() == 0' with 'isempty()'add final modifier to local variables.[] strlookup for system properties now sees updated values.the lookup implementation now directly accesses system properties withoutcaching the properties object in any way.",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.truncatedCompareTo(Date,Date,int)": "add final modifier to local variables.javadoc: add truncatedequals and truncatedcompareto",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.getStrategy(char,int,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y') partial: implement format 'u' for fastdateformat, day number of weekrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/text/StrMatcher.java@org.apache.commons.lang3.text.StrMatcher.charSetMatcher(String)": "eat own dog food: stringutilsisempty(string) and replace some but not all stringlength() == 0 with stringisempty()",
  "src/main/java/org/apache/commons/lang3/SystemUtils.java@org.apache.commons.lang3.SystemUtils.getHostName()": "removes unnecessary class reference of static method calls which are declared in the same class[] systemutils.gethostname() api.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.setNullText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.appendDigits(Appendable,int)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.parsePattern()": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove redundant type arguments.: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y') partial: implement format 'u' for fastdateformat, day number of weekzz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.appendTo(StringBuffer,Calendar)": "zz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.getFragmentInMilliseconds(Date,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesmake use of existing timeunit class to manage time units.",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.getMessage(Throwable)": "sort by method name.reuseadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/AnnotationUtils.java@org.apache.commons.lang3.AnnotationUtils.getShortClassName(java)": "reuseadd final modifier to local variables.document some @suppresswarning annotationschanging the stringbuilder to build around an empty string and not null, as null will cause an npe. reported by findbugsuse builder apis for annotationutils.tostring()",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.Executable.compareConstructorFit(Constructor,Constructor,Class)": ": add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.appendDisplayNames(Calendar,Locale,int,StringBuilder)": "add final modifier to local variables.remove redundant type arguments.: fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.getTimeInstance(int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.abbreviate(String,String,int)": "sort members.: stringutilsabbreviate should support 'custom ellipses' parameter ()",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.append(StringBuffer,String,byte,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.format(long,B)": ": fastdateprinter generates date objects wastefullyfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.modify(int)": " fastdateparser does not handle excess hours as per simpledateformat",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.transpositions(CharSequence,CharSequence)": "inline division operationformat source code: add the jaro-winkler string distance algorithm to stringutils - partially applying the patch by rekha joshi as submitted for further refinement",
  "src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java@org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(String)": "remove redundant type arguments.: exception while using extendedmessageformat and escaping braces. this fixes  from github. thanks to andrey khobnya.add final modifier to local variables.checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.isAnyNotBlank(CharSequence)": ": stringutilsisanyempty and isanyblank should return false for an empty array (): add stringutilsisanynotempty and isanynotblank ()",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyOpen.isCheckIntervalFinished(EventCountCircuitBreaker,CheckIntervalData,long)": "add final modifier to method parameters.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.lastIndexOf(StrMatcher,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.toArray(Map)": "trailing spaces fastdateparser does not handle non-gregorian calendars properlyuse calendargetdisplaynames() instead of dateformatsymbolsgeteras()",
  "src/main/java/org/apache/commons/lang3/CharUtils.java@org.apache.commons.lang3.CharUtils.toIntValue(Character)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.setArraySeparator(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java@org.apache.commons.lang3.time.DurationFormatUtils.containsTokenWithValue(Token,Object)": "use final consistently. use enhanced for loopadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.readObject(ObjectInputStream)": " and trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.appendFullDigits(Appendable,int,int)": "add final modifier to local variables.: fastdateprinter memory allocation regressionfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(Object,Object,boolean,Class,String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: recursive and reflective equalsbuilder ()patch by yathos ugapplying thomas neidhart's patch for ; fixing a bug in which equalsbuilder considers two arrays of the same type to be equal, without considering the contentsadd final modifier to local variables.add final modifier to method parameters.more varargs-related updatescheckstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.length(CharSequence)": "sort members.removing the charsequenceutils.length method in favour of the stringutils.length methodtab police (and trailing spaces)change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java@org.apache.commons.lang3.concurrent.TimedSemaphore.acquire()": "[] added a tryacquire() method to timedsemaphore.this method supports non-blocking use cases.[] added timedsemaphore class to concurrent package.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.hashCode()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.parseObject(String,ParsePosition)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.append(CharSequence,int,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces<action issue=\"\" type=\"add\">strbuilder should support stringbuilder as an input parameter</action>",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.indexOf(StrMatcher,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.Iso8601_Rule(int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.getInstance(String,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.WeekYear.format(Calendar,B)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.append(StringBuffer,String,short,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.TwoDigitMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/CharUtils.java@org.apache.commons.lang3.CharUtils.toChar(String,char)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.UnpaddedMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.replace(char)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.appendTo(StringBuffer,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.append(StringBuffer,String,char,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.getClass(ClassLoader,String,boolean)": ": handle \"void\" in classutils.getclass() ()getclass() previously deferred to an array type to get the class,but this fails for void, which lacks an array type.instead, map explicitly from primitive name to primitive class.add final modifier to local variables.add final modifier to method parameters.adding nopmd statement to empty catchper david m. sledge's patch to , added support to classutils.getclass(string) to support inner classes being separated by '.' as well as the official '$'",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.append(StringBuffer,String,boolean,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.appendValueAsString(StringBuffer,String)": " - jsontostringstyle does not escape double quote in a stringvalue[github] commons-lang pull request : intellij idea refactorings..: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.TimeZoneNameRule(TimeZone,Locale,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces fastdateformat's \"z\" pattern does not respect timezone of calendar instances passed to format()applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.getLowerBounds()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.indexOf(double,double,int,double)": "removes unnecessary class reference of static method calls which are declared in the same classcrlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.getStrategy(char,int,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y') partial: implement format 'u' for fastdateformat, day number of weekrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/text/FormattableUtils.java@org.apache.commons.lang3.text.FormattableUtils.append(CharSequence,Formatter,int,int,int,CharSequence)": "add final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.getAllSuperclassesAndInterfaces(Class)": "use final.: add methodutilsfindannotation and extend methodutilsgetmethodswithannotation for non-public, super-class and interface methodsadd changes.xml entry and minimal clean-up.: adds methodutilsfindannotation and extend methodutilsgetmethodswithannotation for non-public, super-class and interface methods ()",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shuffle(float)": ": added shuffle methods to arrayutils",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.shortToBools(short,int,boolean,int,int)": "code clean-up for checkstyle.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/tuple/Pair.java@org.apache.commons.lang3.tuple.Pair.getKey()": "sort methods.",
  "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java@org.apache.commons.lang3.CsvUnescaper.translate(CharSequence,int,Writer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: numericentityescaper incorrectly encodes supplementary characters. thanks to chris karcher.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.append(CharBuffer,int,int)": ": avoid string allocation in strbuilder.append(charsequence). this fixes  from github. thanks to mikhail mazurskiy and fabian lange.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.lastIndexOf(String,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.clone(T)": "flips the order of conditional expressions and 'if' statements whose conditions were negateddocument some @suppresswarning annotationsjavadocwsfix cloning of array types.add methods for cloneables to objectutils ().",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.hexDigitM0ToBools(char)": "revert 1391258 by veto of sebb.use conversion tables for boolean arrays.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.getDateTimeInstance(int,int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.min(int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesfixing crlfsstatement unnecessarily nested within else clause. code refactoring in numberutils",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.score(CharSequence,CharSequence)": "pmd: useless parenthesesmake checkstyle happyuse final modifier where possiblecorrect indentation: add the jaro-winkler string distance algorithm to stringutils - partially applying the patch by rekha joshi as submitted for further refinement",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.TwoDigitYearField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.getTimeInstance(int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.FastDateParser(String,TimeZone,Locale)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.applyRules(Calendar,B)": "add final modifier to local variables.1154fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.applyRules(Calendar,StringBuffer)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.getImplicitBounds(TypeVariable)": "validation",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.setFieldSeparator(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.WeekYear(NumberRule)": ": fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/CharUtils.java@org.apache.commons.lang3.CharUtils.unicodeEscaped(Character)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.wrapIfMissing(String,char)": ": add nul byte to charutils. thanks to beluga behr.add final modifier to local variables.[] stringutils.wrapifmissing(string, char|string)",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.capitalize(CharSequence)": "removing charsequenceutils in favour of putting the code in stringutilschange stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.parameterizeWithOwner(Type,Class,Type)": "removes unnecessary class reference of static method calls which are declared in the same classapply patch contributed by bruno p. kinoshitavalidation[] new type util features",
  "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java@org.apache.commons.lang3.concurrent.TimedSemaphore.setLimit(int)": "[] added timedsemaphore class to concurrent package.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.appendTo(Appendable,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.getMaxWidth(ListIterator)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.parameterizeWithOwner(Type,Class,Type)": "removes unnecessary class reference of static method calls which are declared in the same classapply patch contributed by bruno p. kinoshitavalidation[] new type util features",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadIdPredicate.NamePredicate(String)": "use validateistrue to validate argumentsfixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.getFragmentInMilliseconds(Calendar,int)": "make use of existing timeunit class to manage time units.",
  "src/main/java/org/apache/commons/lang3/ClassPathUtils.java@org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedPath(Class,String)": ": new class classpathutils with methods for turning fqn into resource path",
  "src/main/java/org/apache/commons/lang3/SystemUtils.java@org.apache.commons.lang3.SystemUtils.isJavaVersionAtLeast(JavaVersion)": "[] add apiorg.apache.commons.lang3.systemutils.isjavaversionatmost(javaversion)removed isjavaversionatleast(float) and (int), and added an enum variant with the new javaversion enum. updated the rest of the code, switched isjavaversionatleast over to using java.specification.version and not java.version (the vendor code) and dropped java_version_trimmed, java_version_float and java_version_int. see: 624",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.applyRules(Calendar,B)": "add final modifier to local variables.1154fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/CharRange.java@org.apache.commons.lang3.CharRange.equals(Object)": "boolean comparisons in charrange ()cleaned up comparisons to false to just use the boolean negationoperator (!).add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.left(CharSequence,int)": "moving center, left, leftpad, right, rightpad, mid, uppercase, lowercase and swapcase over to charsequence input. 687",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.getUpperBounds()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/tuple/Pair.java@org.apache.commons.lang3.tuple.PairAdapter.getKey()": "sort methods.",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object,String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: enhance methodutils to allow invocation of private methods ()[] add method org.apache.commons.lang3.reflect.methodutils.invokeexactmethod(object, string)</action>[] add method org.apache.commons.lang3.reflect.methodutils.invokemethod(object, string)</action>[] add methodutil apis to call methods without parameters.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isEmpty(long)": "crlf -> lfjavadoc: fix typo but working is still awkward.simplify isempty be reusing getlengths/if (foo) { return true; } return false;/return foo;/g",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.parse(FastDateParser,Calendar,String,ParsePosition,int)": "add final modifier to local variables.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.join(Object,char)": "sort members.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.appendDisplayNames(Calendar,Locale,int,StringBuilder)": "add final modifier to local variables.remove redundant type arguments.: fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.Iso8601_Rule.format(Calendar,B)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.TimeZoneNumberRule(boolean)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesscope of local variabel shift can be narrowerformat to 120 line length.add final modifier to method parameters.use better method names. document possible arrayindexoutofboundsexception and stringindexoutofboundsexception.",
  "src/main/java/org/apache/commons/lang3/text/StrTokenizer.java@org.apache.commons.lang3.text.StrTokenizer.clone()": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyOpen.fetchCheckInterval(EventCountCircuitBreaker)": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/CharSet.java@org.apache.commons.lang3.CharSet.equals(Object)": "[github] commons-lang pull request : intellij idea refactorings..add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.lastIndexOf(short,short,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.greaterObj(Comparable,T)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadIdPredicate.test(ThreadGroup)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.FastDateParser(String,TimeZone,Locale,Date)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.make sure placement of curly braces is consistent: dateutilstest.testlang530 fails for some timezonesreplace tabs with whitespaces and ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.getDigits(String)": "sort members.: added getdigits method to stringutils ()",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.WeekYear(NumberRule)": ": fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/mutable/MutableBoolean.java@org.apache.commons.lang3.mutable.MutableBoolean.setValue(boolean)": "<action issue=\"\" type=\"add\" dev=\"ggregory\">add apis mutableboolean settrue() and setfalse()</action>",
  "src/test/java/org/apache/commons/lang3/CharsetsTestCase.java@org.apache.commons.lang3.CharsetsTestCase.testToCharset_String()": "[] add null-safe stringutils apis to wrapstringgetbytes([charset|string]).</action>",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.appendFullDigits(Appendable,int,int)": "add final modifier to local variables.: fastdateprinter memory allocation regressionfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.contains(boolean,boolean)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/CharUtils.java@org.apache.commons.lang3.CharUtils.toChar(String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/text/StrLookup.java@org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup()": "[] strlookup for system properties now sees updated values.the lookup implementation now directly accesses system properties withoutcaching the properties object in any way.: strsubstitutor.replacesystemproperties does not work consistently. this fixes  from github. thanks to jonathan baker.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.format(long,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateprinter generates date objects wastefullyapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.toArray(Map)": "trailing spaces fastdateparser does not handle non-gregorian calendars properlyuse calendargetdisplaynames() instead of dateformatsymbolsgeteras()",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.setArrayEnd(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.replaceAll(String,String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.incrementAndCheckState(Integer)": " fix eventcountcircuitbreaker increment batchfixes incrementandcheckstate(integer increment) by passing the increment downstream.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.parseToken(String,int)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.count(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java@org.apache.commons.lang3.concurrent.TimedSemaphore.tryAcquire()": "[] added a tryacquire() method to timedsemaphore.this method supports non-blocking use cases.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.wrap(Type)": "provide simple method to wrap a given type to the typed interface",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.lastIndexOf(CharSequence,int)": "sort members.moving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils classreplacing some of the older code. when performing a mutation operation (even if it's on an immutable by returning a new instance), string should go in and string should come out. when performing a non-mutation operation, charsequence should be passed in. 687moving lastindexof, contains, containswhitespace, indexofany, containsany, indexofanybut, containsonly, containsnone and substring over to using charsequences for parameters. 687",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.Builder.getNamingPattern()": "adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.hexDigitM0ToInt(char)": ":  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java@org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)": "replaces 'size() == 0' and 'length() == 0' with 'isempty()'make sure lines in files don't have trailing white spaces and remove all trailing white spacesfix various javadoc typos ()reuseadd final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.FastDateParser(String,TimeZone,Locale,Date)": "replace tabs with whitespaces and ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.reflectionAppendArrayDetail(StringBuffer,String,Object)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesscope of local variabel shift can be narrowerpmd: useless parenthesesformat to 120 line length.removed unnecessary multiplication by one.add final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.Range.elementAfter(T)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.applyRulesToString(Calendar)": "4fastdateformat apis that use a stringbuilderrefactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.toString()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.repeat(char,int)": "sort members. fix stringutils.repeat(char, int) dealing with negative repeat valueadd final modifier to local variables.renaming the newly public pad(int, char) method to repeat(char, int) [note the swap of param order]. i've also pulled the faster implementation out of repeat(string, int). ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.setFieldSeparator(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.format(Object,StringBuffer,FieldPosition)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.append(StringBuffer,String,char,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.format(Object,StringBuffer,FieldPosition)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.StrategyParser(String,Calendar)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.MultiLineToStringStyle()": "deprecate systemutilsline_separator in favor of java.lang.systemlineseparator",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.wrap(Class)": "removes unnecessary class reference of static method calls which are declared in the same classprevent redundant modifiersadd typesafe wrap variant for classes",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toPrimitive(Short)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.appendAllTo(StringBuilder,String,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isNotEmpty(T)": "crlf -> lfjavadoc: fix typo but working is still awkward.simplify isnotempty by reusing isemptyapplying chandrashekar m's patch to , adding isnotempty(array) methods to arrayutils. ",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.compare(int,int)": "fixing crlfsstatement unnecessarily nested within else clause.statement unnecessarily nested within else clause. - add issorted() to arrayutils. patch supplied by james sawle.  in github.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.replaceOnceIgnoreCase(String,String,String)": "sort members.merge branch '': add stringutilsremoveignorecasepatch by gokul nanthakumar c",
  "src/main/java/org/apache/commons/lang3/RandomUtils.java@org.apache.commons.lang3.RandomUtils.nextInt(int,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd sugar to randomiutils: new randumutils class. thanks to duncan jones",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.Executable.getParameterTypes()": "make sure placement of curly braces is consistent: add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.FastDateFormat(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.getPattern()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.appendRecursiveTypes(StringBuilder,int,Type)": " - stackoverflowerror on typeutils.tostring(...) for a generic return type of enum.valueof ()",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.identityToString(StringBuffer,Object)": "[] objectutils.identitytostring(object) and friends shouldallocate builders and buffers with a sizerefactor magic char.better exception message.use validatenotnull instead of \"throw new nullpointerexception\" add objectutils.toidentitystring methods that support stringbuilder, strbuilder, and appendable",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.createInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.appendFullDigits(Appendable,int,int)": "add final modifier to local variables.: fastdateprinter memory allocation regressionfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.SimpleToStringStyle()": "reuse",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.toCodePoints(CharSequence)": "sort members.: add null-safe stringutils.valueof(char[]) to delegate to string.valueof(char[])fix checkstyle violations[] add null-safe stringutils.valueof(char[]) to delegate tostring.valueof(char[])use final.remove trailing white spaces - add method for converting string to an array of code points",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.setSizeEndText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/SystemUtils.java@org.apache.commons.lang3.SystemUtils.isJavaVersionAtMost(JavaVersion)": "[] add apiorg.apache.commons.lang3.systemutils.isjavaversionatmost(javaversion)",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.contains(char,char)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.printRootCauseStackTrace(Throwable)": "sort by method name.",
  "src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java@org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(String,ParsePosition)": ": exception while using extendedmessageformat and escaping braces. this fixes  from github. thanks to andrey khobnya.add explict default caseadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.append(StringBuffer,int,int)": "add final modifier to local variables.<action issue=\"\" type=\"add\">strbuilder should support stringbuilder as an input parameter</action>",
  "src/main/java/org/apache/commons/lang3/text/StrTokenizer.java@org.apache.commons.lang3.text.StrTokenizer.getTokenList()": "[github] commons-lang pull request : intellij idea refactorings..remove redundant type arguments.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.normalizeUpperBounds(Type)": "remove redundant type arguments.validation",
  "src/main/java/org/apache/commons/lang3/text/WordUtils.java@org.apache.commons.lang3.text.WordUtils.isDelimiter(char,char)": "add final modifier to local variables.convert to java 5 enhanced loops. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.format(Calendar)": "4fastdateformat apis that use a stringbuilderapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.append(CharSequence)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: avoid string allocation in strbuilder.append(charsequence). this fixes  from github. thanks to mikhail mazurskiy and fabian lange.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.format(Date,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.getStrategy(char,int,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y') partial: implement format 'u' for fastdateformat, day number of weekrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.NamePredicate.ThreadUtils()": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.Executable.compareParameterTypes(Executable,Executable,Class)": "use build in methods for comparing numerical values",
  "src/main/java/org/apache/commons/lang3/CharRange.java@org.apache.commons.lang3.CharRange.hashCode()": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.getLocaleSpecificStrategy(int,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove unused constructor parameterformat.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java@org.apache.commons.lang3.exception.DefaultExceptionContext.addValue(String,Object)": "fix brace positionsadded {} to iffix defaultexceptioncontext.addvalue that overwrites information in a recursive situation (). allow explicit replacement of a label with the new replacevalue methods.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.equals(GenericArrayType,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.equals(Object)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/SerializationUtils.java@org.apache.commons.lang3.ClassLoaderAwareObjectInputStream.deserialize(byte)": "removes unnecessary class reference of static method calls which are declared in the same classprevent redundant modifiersuse validateistrue to validate argumentssimpler (the prefix is still needed as .<t> cannot start a method call)eliminate one unchecked warning; localise and document others[] use generics in serializationutils",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.NoClassNameToStringStyle()": ": add noclassnametostringstyle implementation of tostringstyle. this  from github. thanks to innokenty shuvalov.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.equals(GenericArrayType,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.TimeZoneNameRule(TimeZone,Locale,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces fastdateformat's \"z\" pattern does not respect timezone of calendar instances passed to format()applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastTimeZone.java@org.apache.commons.lang3.time.FastTimeZone.parseSign(String)": "[] timezone.gettimezone() in fastdateparser causes resourcecontention</action>. this .",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.append(char)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.add(byte,byte)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)": "format to 120 line length.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.append(StrBuilder,int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java@org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(String,ParsePosition,StringBuilder)": "changing switch statement to if/else statement for greater claritymake whitespace use after tokens consistent and add a checkstyle rule to enforce it.make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.: exception while using extendedmessageformat and escaping braces. this fixes  from github. thanks to andrey khobnya.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.indexOfAny(CharSequence,CharSequence)": "use foreach loop for arrays ()since the project no longer supports java versions older than 6, it'ssafe to use the enhanced for loop syntax introduced in java 5.this patch employs this syntax where possible to clean up the code.add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)moving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils classreplacing some of the older code. when performing a mutation operation (even if it's on an immutable by returning a new instance), string should go in and string should come out. when performing a non-mutation operation, charsequence should be passed in. 687moving lastindexof, contains, containswhitespace, indexofany, containsany, indexofanybut, containsonly, containsnone and substring over to using charsequences for parameters. 687",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.isTrue(boolean,String,double)": "[github] commons-lang pull request : intellij idea refactorings..use internal java's number caches instead creating new objects:- use more efficient integer cache: use \"integer.valueof(int)\" instead of \"new integer(int)\".- use more efficient long cache: use \"long.valueof(int)\" instead of \"new long(long)\".- use more efficient short cache: use \"short.valueof(int)\" instead of \"new short(short)\".in java version 1.6.0_24 (vendor: sun microsystems inc.), float and double do not implement caches, but i've made the same changes for consistency and future proofing.- use \"double.valueof(int)\" instead of \"new double(double)\".- use \"float.valueof(int)\" instead of \"new float(float)\".",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategy.createStrategyMap()": "add final modifier to local variables.remove redundant type arguments.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.max(double)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesfixing crlfsstatement unnecessarily nested within else clause. code refactoring in numberutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.CaseInsensitiveTextStrategy(int,Calendar,Locale)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.: fastdateformat doesn't respect summer daylight in some localized stringsrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.set(Date,int,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesuse validateistrue to validate argumentsadd final modifier to local variables.adding tocalendar method per 632",
  "src/main/java/org/apache/commons/lang3/builder/ReflectionDiffBuilder.java@org.apache.commons.lang3.builder.ReflectionDiffBuilder.appendFields(Class)": ": add a reflection-based variant of diffbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.parseToken(String,int)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java@org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.addInitializer(String,BackgroundInitializer)": "use validateistrue to validate arguments",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.TimeZoneNameRule(TimeZone,Locale,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces fastdateformat's \"z\" pattern does not respect timezone of calendar instances passed to format()applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.getTypeArguments(ParameterizedType,Class,Map)": "explicit type parameters can be removedremove redundant type arguments.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.format(Date,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.FastDatePrinter(String,TimeZone,Locale)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.longToShorts(long,int,short,int,int)": "code clean-up for checkstyle.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.appendDigits(StringBuffer,int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.isFormatLetter(char)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.toCharArray(int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.format(Object)": "fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/mutable/MutableLong.java@org.apache.commons.lang3.mutable.MutableLong.getAndDecrement()": "add final modifier to local variables. addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.indexOf(String,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.InitStripAccents.abbreviateMiddle(String,String,int)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.TimeZoneStrategy(Calendar,Locale)": ": fastdateformat doesn't respect summer daylight in some localized stringsmerge branch 'master' of https://github.com/nickmanley/commons-langthis  fix nullpointerexception in fastdateparser$timezonestrategyfix nullpointerexception in fastdateparser$timezonestrategyrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.createInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.getTimeInstance(int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.append(Object)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: avoid string allocation in strbuilder.append(charsequence). this fixes  from github. thanks to mikhail mazurskiy and fabian lange.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.setSizeEndText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.appendTo(StringBuffer,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.toString()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadIdPredicate.getAllThreads()": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shift(boolean,int,int,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.crlf -> lfjavadoc: fix typo but working is still awkward.merge branch '': inconsistent behavior of swap for malformed inputs. thanksto adrian ber.new test caseexplanations about algorithmtabs replaced by spacesnew tests addedswap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.getInstance(String)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.appendDigits(Appendable,int)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeElement(short,short)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.adjustYear(int)": "format.use final consistently. ",
  "src/main/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java@org.apache.commons.lang3.text.translate.UnicodeEscaper.toUtf16Escape(int)": "<action issue=\"\" type=\"fix\">stringescapeutils.escapejava() and escapeecmascript() do not output the escaped surrogate pairs that are java parsable</action>",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.swapCase(CharSequence)": "moving center, left, leftpad, right, rightpad, mid, uppercase, lowercase and swapcase over to charsequence input. 687",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.appendSeparator(String,String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java@org.apache.commons.lang3.concurrent.TimedSemaphore.getLimit()": "[] added timedsemaphore class to concurrent package.",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadUtils.NamePredicate(String)": "use validateistrue to validate argumentsfixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.equals(Object)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.indexOf(int,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.toString()": ": fix deprecation warnings",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.getActualTypeArguments()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.UnpaddedNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.indexOf(long,long,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/builder/StandardToStringStyle.java@org.apache.commons.lang3.builder.StandardToStringStyle.isArrayContentDetail()": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.createNumber(String)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.removes unnecessary class reference of static method calls which are declared in the same classreplaces 'size() == 0' and 'length() == 0' with 'isempty()'[] numberutils.createnumber() throwsstringindexoutofboundsexception instead of numberformatexception.fix unbox warning. show when we are unboxing.pmd: remove useless parentheses: fix precision loss on numberutils.createnumber(string) (): numberutils.createnumber() behaves inconsistently with numberutils.isnumber()this closes github  thanks to pbrosefixing crlfsstatement unnecessarily nested within else clause.: numberutilscreatenumber() returns positive bigdecimal when negative float is expected. thanks to renat zhilkibaev. numberutils does not handle long hex numbers method createnumber from numberutils doesn't work for floating point numbers other than floatdocument why double exponent (e and e) seems to work even though the index will be wrong numberutils.createnumber() javadoc says it does not work for octal numbersstatements unnecessarily nested within else clauses.add final modifier to local variables. numberutilscreatenumber - does not allow for hex numbers to be larger than long numberutils does not handle long hex numbers numberutils does not handle upper-case hex: 0x and -0xadding nopmd tags for various empty catch blocksmaking it so that numberutils.createnumber throws a numberformatexception instead of a stringindexoutofboundsexception when strings such as 1ee are passed in. thanks to ingo heinrich's report and patch in 638",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.format(Object)": "1154fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.equals(Object)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Functions.java@org.apache.commons.lang3.Functions.tryWithResources(FailableRunnable,FailableRunnable)": "functions.java whitspacesreplace tabs with four spaces, as per the project's checkstyle rules.added functions.trywithresources.",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.EventListenerSupport.writeObject(ObjectOutputStream)": "remove redundant type arguments.add final modifier to local variables.add serialization support to eventlistenersupport",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.FastDateParser(String,TimeZone,Locale)": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/CharRange.java@org.apache.commons.lang3.CharacterIterator.prepareNext()": "adding vincent ricard's patch to charrange.java providing an iterator that lets you walk the chars in the range. 454",
  "src/main/java/org/apache/commons/lang3/Functions.java@org.apache.commons.lang3.Functions.accept(FailableConsumer,O)": "functions.java whitspacesreplace tabs with four spaces, as per the project's checkstyle rules.adding the functions class as a helper for dealing with java 8 lambdas.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.append(StringBuffer,int,int)": "add final modifier to local variables.<action issue=\"\" type=\"add\">strbuilder should support stringbuilder as an input parameter</action>",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.Range.toString(String)": "refactor range with lots of new methods",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.isParsable(String)": "make code more readable with less nesting (move block out of elseclause).: performance improvements for numberutils.isparsable ()~2.5x performance increase wrt 3.4 version; added a couple checks more to unit testsfixing crlfsstatement unnecessarily nested within else clause.simplify statement by calling substring on str directly. stringutils.startswith makes sure that str is not  null at this point. improvement suggested by sebb.: numberutilsisparsable method(s). apply juan pablosantos rodr\u00edguez patch for handling negative numbers.: numberutilsisparsable method(s). thanks to juan pablo santos rodr\u00edguez.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.TzInfo(TimeZone,boolean)": ": fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.appendAll(Iterable)": "add final modifier to local variables.support varargs in strbuilder.appendall(); also convert iterable form of method to use enhanced for loop",
  "src/main/java/org/apache/commons/lang3/BitField.java@org.apache.commons.lang3.BitField.BitField(int)": "flips the order of conditional expressions and 'if' statements whose conditions were negated: optimize bitfield constructor implementation ()",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.containsTypeVariables(Type)": "removes unnecessary class reference of static method calls which are declared in the same classuse final consistently. [] new type util features",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.binaryToLong(boolean,int,long,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesscope of local variabel shift can be narrowerpmd: useless parenthesesformat to 120 line length.removed unnecessary multiplication by one.add final modifier to local variables.add final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.createPattern(String)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.appendEnd(StringBuffer,Object)": "[github] commons-lang pull request : intellij idea refactorings..",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.swap(double,int,int,int)": "add final modifier to local variables.better javadoc for arrayutils.swap variantscrlf -> lfjavadoc: fix typo but working is still awkward.merge branch '': inconsistent behavior of swap for malformed inputs. thanksto adrian ber.consistent treatment for negative indices for swap methodexamples added in javadoctabs replaced by spacesnew tests addedswap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isEquals(Object,Object)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.format(Date)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.toString(T)": " - stackoverflowerror on typeutils.tostring(...) for a generic return type of enum.valueof ()",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyOpen.EventCountCircuitBreaker(int,long,TimeUnit,int)": "add final modifier to method parameters.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.format(Date,StringBuffer)": "change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.MemberUtils.getParameterTypes()": "make sure placement of curly braces is consistent: add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.isNoneEmpty(CharSequence)": "sort members.: add stringutilsisanynotempty and isanynotblank ()applying alexander muthmann's patch from , adding isblank/isempty charsequence... variants",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.getUpperBounds()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/Charsets.java@org.apache.commons.lang3.Charsets.toCharset(Charset)": "[] add null-safe stringutils apis to wrapstringgetbytes([charset|string]).</action>",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.toString()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.BasicThreadFactory.wrappedFactory(ThreadFactory)": "use validatenotnull instead of \"throw new nullpointerexception\"adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.parsePattern()": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove redundant type arguments.: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y') partial: implement format 'u' for fastdateformat, day number of weekzz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.isAssignable(Type,ParameterizedType,Map)": ": typeutils.isassignable throws nullpointerexception when fromtype has type variables and totype generic superclass specifies type variable ()",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.minimizeCapacity()": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.append(long,long)": "use not bool instead of bool == false",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.BasicThreadFactory.reset()": "don't need internal ivar name for a boolean to carry a \"flag\" postfix.adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.TextStrategy(int,Calendar,Locale)": ": fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.parsePattern()": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove redundant type arguments.: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y') partial: implement format 'u' for fastdateformat, day number of weekzz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java@org.apache.commons.lang3.concurrent.ConcurrentUtils.createIfAbsentUnchecked(ConcurrentMap,K,ConcurrentInitializer)": "add final modifier to local variables.add final modifier to method parameters.[] added support for concurrentmap.putifabsent() to concurrentutils.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,GenericArrayType,Map)": "add final modifier to local variables.add final modifier to method parameters.[] vastly expanded typeutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.appendTo(Appendable,int)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.getLocale()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/math/Fraction.java@org.apache.commons.lang3.math.Fraction.addSub(Fraction,boolean)": "use validateistrue to validate argumentsformat to 120 line length.add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/tuple/ImmutablePair.java@org.apache.commons.lang3.tuple.ImmutablePair.of(L,R)": "sort methods.remove redundant type arguments.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shuffle(char,Random)": ": added shuffle methods to arrayutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.appendTo(StringBuffer,Calendar)": "zz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/AtomicSafeInitializer.java@org.apache.commons.lang3.concurrent.AtomicSafeInitializer.get()": "reverting changes from r1661762 () for now until we have consensus about this change.: remove busy wait from atomicsafeinitializer.get(). this also fixes  from github. thanks to github user artnaseef.[] added atomicsafeinitializer class. thanks to alexander dot apanasovich at gmail dot com for the proposal.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shuffle(boolean)": ": added shuffle methods to arrayutils",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.SimpleToStringStyle()": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.getMaxWidth(ListIterator)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.parseObject(String,ParsePosition)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.CheckIntervalData.updateCheckIntervalData(CheckIntervalData,CheckIntervalData)": "add final modifier to method parameters.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.equals(Object)": "format.add final modifier to local variables.trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadIdPredicate.ThreadIdPredicate(long)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.getStrategy(char,int,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y') partial: implement format 'u' for fastdateformat, day number of weekrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.getSimpleName(Class,String)": "[] add methods to classutils to get various forms of classnames in a null-safe manner",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.remove(T,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.setCalendar(FastDateParser,Calendar,String)": "[] timezone.gettimezone() in fastdateparser causes resourcecontention</action>. this .utc and gmt are the same, so simplify.refactor \"gmt\" magic string.make sure lines in files don't have trailing white spaces and remove all trailing white spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .trailing spaces fastdateparser does not handle non-gregorian calendars properly unnecessary ;applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.Builder.priority(int)": "don't use single letter variable names.adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.getDateInstance(int,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.hashCode()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.appendln(String,int,int)": "[] create strbuilder apis similar to string.format(string, object...)",
  "src/main/java/org/apache/commons/lang3/builder/IDKey.java@org.apache.commons.lang3.builder.IDKey.equals(Object)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/AnnotationUtils.java@org.apache.commons.lang3.AnnotationUtils.hashCode(Annotation)": "add final modifier to local variables.avoid throwing checked exceptions from annotationutils.hashcode()additional javadoc; remove illegalargumentexception from throws clauseaddress the invalidity of null annotation membersadd hashcode and tostring methods to annotationutils, plus tests",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.parameterize(Class,Map)": "validation[] new type util features",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.sequenceToString(CharSequence)": "moving lastindexof, contains, containswhitespace, indexofany, containsany, indexofanybut, containsonly, containsnone and substring over to using charsequences for parameters. 687",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.EventCountCircuitBreaker(int,long,TimeUnit,int)": "add final modifier to method parameters.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.intToHexDigitM0(int)": "use lowercase presentation for hex values as it is done in the jdk.use jdk functionality where available.use conversion tables for boolean arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.format(Date,StringBuffer)": "change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/test/java/org/apache/commons/lang3/CharsetsTestCase.java@org.apache.commons.lang3.CharsetsTestCase.testToCharset_Charset()": "[] add null-safe stringutils apis to wrapstringgetbytes([charset|string]).</action>",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.bytesToShort(byte,int,short,int,int)": "code clean-up for checkstyle.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.TwoDigitNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.withDecimalsParsing(String,int)": "numberutilswithdecimalsparsing: eliminate redundant calculation of isdecimalpoint. (): performance improvements for numberutils.isparsable ()~2.5x performance increase wrt 3.4 version; added a couple checks more to unit tests",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.createPattern(StringBuilder)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.getStackFrameList(Throwable)": "deprecate systemutilsline_separator in favor of java.lang.systemlineseparatorremove redundant type arguments.add final modifier to local variables.eat own dog food: stringutilsisempty(string) and replace some but not all stringlength() == 0 with stringisempty()",
  "src/main/java/org/apache/commons/lang3/text/translate/JavaUnicodeEscaper.java@org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.between(int,int)": "<action issue=\"\" type=\"fix\">stringescapeutils.escapejava() and escapeecmascript() do not output the escaped surrogate pairs that are java parsable</action>",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.replace(StrMatcher,String,int,int,int)": "add final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.getMaxWidth(ListIterator)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.wrapAndThrow(Throwable)": " added alternative checked exception wrapping/unwrapping methods",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.setEnableSubstitutionInVariables(boolean)": "strsubstitutor can preserve escapesstrsubstitutor can now optionally preserve the escape character for anescaped reference, which is useful when substitution takes place inmultiple phases and some references are intentionally unresolved.  priorto this change, an unresolved reference `${a}` and an escaped reference`$${a}` may result in the same string `${a}`, making it impossible foran additional substitution phase to distinguish between escapedreferences and non-escaped references.add final modifier to method parameters.[] added support for substitution in variable names.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.format(Object,StringBuffer,FieldPosition)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.getNextStrategy()": "add final modifier to local variables.format.statement unnecessarily nested within else clause.\\refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/SerializationUtils.java@org.apache.commons.lang3.SerializationUtils.clone(T)": "remove redundant modifiers (support recent checkstyle versions) ()add final modifier to local variables.use try-with-resources.formating.<action issue=\"\" type=\"add\" dev=\"ggregory\">add serializationutils.roundtrip(t extends serializable) to serialize then deserialize</action>add final modifier to local variables.suppress generic warningapplying sven ludwig's patch from . this modifies the serializationutils.clone method to use the threadcontextloader if it is unable to find a class using the object's current classloader. this should (hopefully) help with weblogic and tomcat situations where lang is outside the web-inf for some reason (likely user error with tomcat, by design for weblogic)checkstyle and trailing spaces.explain why it is safe to suppress the cast warning on serializationutils.clone()make serializationutils.clone() type-safe",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.setNullText(String)": "use stringisempty() instead of stringlength() == 0",
  "src/main/java/org/apache/commons/lang3/text/StrLookup.java@org.apache.commons.lang3.text.SystemPropertiesStrLookup.systemPropertiesLookup()": "[] strlookup for system properties now sees updated values.the lookup implementation now directly accesses system properties withoutcaching the properties object in any way.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isEmpty(byte)": "crlf -> lfjavadoc: fix typo but working is still awkward.simplify isempty be reusing getlengths/if (foo) { return true; } return false;/return foo;/g",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.applyRules(Calendar,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: resurrect applyrules(java.util.calendar, java.lang.stringbuffer) for binary compatibilityadd final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/EnumUtils.java@org.apache.commons.lang3.EnumUtils.generateBitVectors(Class,Iterable)": " enumutils *bitvector issue with more than 32 values enumthis add final modifier to local variables.[] permit bitvector generation for enums with > 64 values; plus some test corrections",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.FastDateParser(String,TimeZone,Locale,Date)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.make sure placement of curly braces is consistent: dateutilstest.testlang530 fails for some timezones",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.getRawType(Type,Type)": "add final modifier to local variables.[] vastly expanded typeutils",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean)": "use term \"binary\" instead of \"boolarray\" in conversion. improve javadoc of class.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.Iso8601_Rule(int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.typesSatisfyVariables(Map)": "the the patrol.validation",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.indexOfAny(CharSequence,char)": "sort members.add final modifier to local variables.https://issues.apache.org/jira/browse/ stringutils methods do not handle unicode 2.0+ supplementary characters correctly.use index_not_found instead of magic number.change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.mode(T)": "remove redundant type arguments.add final modifier to local variables.[] add mode and median comparable... methods to objectutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.createKeyValues(String,String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FormatCache.java@org.apache.commons.lang3.time.MultipartKey.getDateInstance(int,TimeZone,Locale)": " simplify fastdateformat; eliminate boxing",
  "src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java@org.apache.commons.lang3.builder.CompareToBuilder.appendSuper(int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(CharSequence,CharSequence)": "sort members.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.indexOf(String,String,int)": "rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687use index_not_found instead of magic number.moving the indexof(string, string, int) method above the ordinalindexof methods to put it with its overloaded peers. 590",
  "src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java@org.apache.commons.lang3.builder.ReflectionToStringBuilder.toStringExclude(Object,String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd checknotnull method in reflectiontostringbuilder.java to fix 1132",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.NumberStrategy(int)": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.join(long,char,int,int)": "extract method.add final modifier to local variables.[] stringutils join apis for primitives.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.hashCode()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.createPattern(String)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.throwableOfType(Throwable,Class,int)": "sort by method name.[] add exceptionutils.throwableoftype(throwable, class) andfriends.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.getPattern()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.getFieldWidth()": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.smaller(double,double,String,Object)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.toCalendar(Date,TimeZone)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesreplace tabs with spaces in dateutilsadd dateutils.tocalendar(date, timezone)",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadUtils.findThreadsByName(String,String)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.use validateistrue to validate argumentsremove redundant type arguments.fixing crlfsstatement unnecessarily nested within else clause.merge branch 'remove_threadutils_compiler_warnings'remove compiler warnings from threadutils. thanks to pascal schuhmacher.remove compiler warnings from threadutilsincorporated feedback from fabian, formatting adjusted, count >> 1 replaced with count / 2incorporated feedback from peteradd threadutils",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.replace(StrMatcher,String,int,int,int)": "add final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.getLocaleSpecificStrategy(int,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove unused constructor parameterformat.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display namesrename textstrategy to caseinsensitivetextstrategy per sebb's suggestion[] use the cache in fastdateparser correctly.add final modifier to local variables.tab police fastdateparser could use calendar.getdisplaynames for all text fieldsremove unnecessary keyvalue instances: fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,char,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.append(int,int)": "use not bool instead of bool == false",
  "src/main/java/org/apache/commons/lang3/reflect/ConstructorUtils.java@org.apache.commons.lang3.reflect.ConstructorUtils.getMatchingAccessibleConstructor(Class,Class)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.a bit of dog food and a lot of javadoc tweakageadd final modifier to local variables.add final modifier to method parameters.adding nopmd tags for various empty catch blockscheckstyle and trailing spaces.fix wrong cast.comment why ok to suppress the warningremove unnecessary castmove/comment suppresswarnings(unchecked)/refactor surrounding codeminimise scope of @suppresswarningsvararging constructor methods; much like the method ones were in methodutils. 396generics",
  "src/main/java/org/apache/commons/lang3/CharUtils.java@org.apache.commons.lang3.CharUtils.toString(char)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.setNullText(String)": "use stringisempty() instead of stringlength() == 0",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.split(String,String)": "sort members.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.ordinalIndexOf(CharSequence,CharSequence,int,boolean)": "sort members. ordinalindexof(\"abc\", \"ab\", 1) gives incorrect answer of -1(correct answer should be 0)revert 1077 stringutils.ordinalindexof(\"aaaaaa\", \"aa\", 2) != 3 in stringutilsmoving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils classmoving countmatches, ordinalindexof and lastordinalindexof over to a charsequence-based api. 687",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.getDateTimeInstance(int,int,TimeZone)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/tuple/Pair.java@org.apache.commons.lang3.tuple.Pair.getRight()": "[] add empty_array constants to classes inorg.apache.commons.lang3.tuple",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.BasicThreadFactory.getThreadCount()": "adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadIdPredicate.findThreadGroups(ThreadGroup,boolean,ThreadGroupPredicate)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.use validateistrue to validate argumentsremove redundant type arguments.fixing crlfsstatement unnecessarily nested within else clause.incorporated feedback from fabian, formatting adjusted, count >> 1 replaced with count / 2incorporated feedback from peteradd threadutils",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.isStateTransition(EventCountCircuitBreaker,CheckIntervalData,CheckIntervalData)": "add final modifier to method parameters.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/concurrent/LazyInitializer.java@org.apache.commons.lang3.concurrent.LazyInitializer.get()": ": multiple calls of org.apache.commons.lang3.concurrent.lazyinitializer.initialize() are possibleuse all uppercase name for constant: multiple calls of org.apache.commons.lang3.concurrent.lazyinitializer.initialize() are possibleminimal clean-up[] multiple calls oforg.apache.commons.lang3.concurrent.lazyinitializer.initialize() arepossible.",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.getFragmentInDays(Date,int)": "make use of existing timeunit class to manage time units.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.getInstance(String)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java@org.apache.commons.lang3.text.translate.NumericEntityEscaper.NumericEntityEscaper()": "reverting r1090111 - moving the text.translate escapers back from using range to replicating parts of the range api. see the list for details ('unnecessary boxing in stringescapeutils etc'), the move to range was an uncomfortable fit. moving text translation classes to the range class for its configuration",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.format(Calendar)": "4fastdateformat apis that use a stringbuilderapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.getDateInstance(int,TimeZone,Locale)": " simplify fastdateformat; eliminate boxingrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.getTimeInstance(int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.format(Date,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyClosed.getClosingInterval()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.toCalendar(Date)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd dateutils.tocalendar(date, timezone)add final modifier to local variables.adding tocalendar method per 632",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.clone(float)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.CheckIntervalData.EventCountCircuitBreaker(int,long,TimeUnit,int,long,TimeUnit)": "add final modifier to method parameters.remove redundant type arguments.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.removeAccentsJava6(CharSequence)": " use iod for stripaccent init stringutils throws java.security.accesscontrolexception on google app enginechange static code to catch and save exception; only report failure if no method is availablereapplying more of oliver's checkstyle fixes from r1083211checkstyleadding cedrik lime's patch from ; adding unaccenting for java 1.3->1.5 via reflection usage of sun jvms",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.TextField(int,String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.remove(Object,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.format(long,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateprinter generates date objects wastefullyapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.setNullText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.ceiling(Date,int)": "use validateistrue to validate argumentsreplaced private integer constants with private static enum.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableLong.java@org.apache.commons.lang3.mutable.MutableLong.incrementAndGet()": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.getDisplayNames(int,Calendar,Locale)": " fastdateparser could use calendar.getdisplaynames for all text fieldsremove unnecessary keyvalue instances: fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategy.getOpeningThreshold()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.startsWith(String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.isJsonObject(String)": "extract logic for checking string representation of objects into separate methods",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.TimeZoneNumberRule(boolean)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.unrollVariables(Map,Type)": "removes unnecessary class reference of static method calls which are declared in the same classprevent redundant modifiersremove redundant type arguments.null-guard[] new type util features",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.AlwaysTruePredicate.findThreadGroups(ThreadGroup,boolean,ThreadGroupPredicate)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.use validateistrue to validate argumentsremove redundant type arguments.fixing crlfsstatement unnecessarily nested within else clause.incorporated feedback from fabian, formatting adjusted, count >> 1 replaced with count / 2incorporated feedback from peteradd threadutils",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.stripAccents(String)": "sort members.make whitespace use after tokens consistent and add a checkstyle rule to enforce it.removes unnecessary class reference of static method calls which are declared in the same class: stringutils.stripaccents should remove accents from \"\u0142\" and \"\u0142\" ().reuseadd final modifier to local variables.simplifying the unaccent code to no longer support java 5 use iod for stripaccent init stringutils throws java.security.accesscontrolexception on google app enginedisplay both java6 and sun exceptions when neither is available for stripaccents stringutils throws java.security.accesscontrolexception on google app enginechange static code to catch and save exception; only report failure if no method is availablerewrap textreapplying more of oliver's checkstyle fixes from r1083211",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.append(CharSequence)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: avoid string allocation in strbuilder.append(charsequence). this fixes  from github. thanks to mikhail mazurskiy and fabian lange.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.endsWith(CharSequence,CharSequence)": "sort members.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shuffle(boolean,Random)": ": added shuffle methods to arrayutils",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.equals(ParameterizedType,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.createPattern(StringBuilder)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.append(String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.<action issue=\"\" type=\"add\">strbuilder should support stringbuilder as an input parameter</action>",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.contains(char)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.getTimeInstance(int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.CheckIntervalData.changeStateAndStartNewCheckInterval(State)": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.getTimeZone()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.rethrow(Throwable)": "make whitespace use around generic tokens consistent and add a checkstyle rule to enforce it.9ability to throw checked exceptions without declaring them",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.defaultIfEmpty(T,T)": "sort members.: bring static method references in stringutils to consistent style. thanks to alex yursha",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.smallerOrEqualObj(Comparable,T)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java@org.apache.commons.lang3.builder.DiffBuilder.append(String,long,long)": "use validateistrue to validate arguments: there should be a differencebuilder with a reflectiondifferencebuilder implementation",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.getName(Object)": "[] add methods to classutils to get various forms of classnames in a null-safe manner",
  "src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java@org.apache.commons.lang3.reflect.FieldUtils.writeDeclaredField(Object,String,Object,boolean)": "make the write*field impl match its in-line comment and not rely on the default behavior of writefield(field,target,value).a bit of dog food and a lot of javadoc tweakage[] add fieldutils getdeclaredfields() to return all the fields defined in the given class and super classes.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.TwoDigitYearField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.insert(int,int,int)": "use final.remove trailing white spacesadded new vararg methods to insert values into an array at an index.this implements . this commit also deprecates the add() methodsthat inserted a single value into an array at an index.",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(Object,Object,boolean,Class,boolean,String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to method parameters.: add support for recursive comparison to equalsbuilderreflectionequals ()minimal clean-ups: remove getter methods, improve javadoc, add unit test for reflectionappend: recursive and reflective equalsbuilder ()patch by yathos ug",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/mutable/MutableByte.java@org.apache.commons.lang3.mutable.MutableByte.getAndAdd(Number)": "add final modifier to local variables. addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/RandomUtils.java@org.apache.commons.lang3.RandomUtils.nextLong(long,long)": "add sugar to randomiutils: new randumutils class. thanks to duncan jones",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.appendln(StringBuilder,int,int)": "<action issue=\"\" type=\"add\">strbuilder should support stringbuilder as an input parameter</action>",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.format(Date,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.setNullText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(BigDecimal)": ": rounding utilities for converting to bigdecimal",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte,byte)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/CharSequenceUtils.java@org.apache.commons.lang3.CharSequenceUtils.regionMatches(CharSequence,boolean,int,CharSequence,int,int)": " there are no tests for charsequenceutils.regionmatchesuse final consistently. statement unnecessarily nested within else clause.adding dmitry katsubo's patch from , providing charsequenceutils.regionmatches with a proper green implementation instead of inefficiently converting to stringsadd final modifier to method parameters.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)formattingmoving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils class",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.longToInts(long,int,int,int,int)": "code clean-up for checkstyle.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.add(char,int,char)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.JsonToStringStyle()": ": add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.TwelveHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.AlwaysTruePredicate.test(ThreadGroup)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.identityToString(StrBuilder,Object)": "[] objectutils.identitytostring(object) and friends shouldallocate builders and buffers with a sizerefactor magic char.better exception message.use validatenotnull instead of \"throw new nullpointerexception\" add objectutils.toidentitystring methods that support stringbuilder, strbuilder, and appendable",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.StrategyParser(String,Calendar)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,String,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.parseToken(String,int)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.isAnyEmpty(CharSequence)": "sort members.make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: stringutilsisanyempty and isanyblank should return false for an empty array (): add stringutilsisanynotempty and isanynotblank ()use final consistently. applying alexander muthmann's patch from , adding isblank/isempty charsequence... variants",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.register(Object)": "remove redundant type arguments.add final modifier to local variables.promote uniformity between branches by using registry accessorunused imports + uh, why would you synchronize access to a threadlocal?  :p[] clear threadlocal recursion registry (compatibly with existing tests, first pass)",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toLong(byte)": ": please add number to byte[] methods. suggested by lilianne e. blaze. final patch from vincent ricard (with thanks to henri yandell).",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toObject(float)": ": add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.readObject(ObjectInputStream)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/StopWatch.java@org.apache.commons.lang3.time.StopWatch.isStarted()": "applying sebb's patch from  - adding isstarted, issuspended and isstopped to stopwatch",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.Iso8601_Rule.WeekYear(NumberRule)": ": fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y')",
  "src/test/java/org/apache/commons/lang3/CharUtilsPerfRun.java@org.apache.commons.lang3.CharUtilsPerfRun.printlnTotal(String,long)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.applyRules(Calendar,StringBuffer)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.appendln(StringBuilder)": "<action issue=\"\" type=\"add\">strbuilder should support stringbuilder as an input parameter</action>",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.contains(CharSequence,CharSequence)": "moving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils classreplacing some of the older code. when performing a mutation operation (even if it's on an immutable by returning a new instance), string should go in and string should come out. when performing a non-mutation operation, charsequence should be passed in. 687moving lastindexof, contains, containswhitespace, indexofany, containsany, indexofanybut, containsonly, containsnone and substring over to using charsequences for parameters. 687",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.appendTo(Appendable,int)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyOpen.nextCheckIntervalData(int,CheckIntervalData,State,long)": "add final modifier to method parameters.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.Iso8601_Rule.appendDigits(Appendable,int)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.parameterize(Class,Map)": "validation[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.getInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.genericArrayType(Type)": "validation[] new type util features",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.classToString(Class)": ": typeutils.tostring() doesn't handle primitive and object arrays correctlyapply patch by aaron digulla[] new type util features",
  "src/main/java/org/apache/commons/lang3/math/Fraction.java@org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesformat to 120 line length.add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/time/GmtTimeZone.java@org.apache.commons.lang3.time.GmtTimeZone.toString()": "[] timezone.gettimezone() in fastdateparser causes resourcecontention</action>. this .",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(Double)": ": rounding utilities for converting to bigdecimal",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.join(Iterable,char)": "sort members.",
  "src/main/java/org/apache/commons/lang3/AnnotationUtils.java@org.apache.commons.lang3.AnnotationUtils.hasNext()": "add hashcode and tostring methods to annotationutils, plus tests",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.equals(WildcardType,Type)": "lan-1114 fixes bug in typeutils.equals(wildcardtype, type) where it was incorrectly returning true when the second argument was not a wildcard type.typeutils wildcard fixes[] new type util features",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(Class,Class,Map)": "explicit type parameters can be removedremove redundant type arguments.add final modifier to local variables.add final modifier to method parameters.[] [] fix related bugs dealing with type variable inheritance[] vastly expanded typeutils",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.replace(StrMatcher,String,int,int,int)": "add final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java@org.apache.commons.lang3.builder.DiffBuilder.append(String,byte,byte)": "use validateistrue to validate arguments: there should be a differencebuilder with a reflectiondifferencebuilder implementation",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.format(long,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateprinter generates date objects wastefullyapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArchUtils.java@org.apache.commons.lang3.ArchUtils.init()": ": add archutils - an utility class for the \"os.arch\" system property ()",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.hashCode()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.getInstance(String)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.min(short)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesfixing crlfsstatement unnecessarily nested within else clause. code refactoring in numberutils",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.isPrimitiveOrWrapper(Class)": "[] add apis classutils.isprimitivewrapper(class<?>) and isprimitiveorwrapper(class<?>)",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.prependIfMissingIgnoreCase(String,CharSequence,CharSequence)": "sort members.applying joanne polsky's patch adding appendifmissing/prependifmissing methods to stringutils []",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.Pair.FastDateFormat(String,TimeZone,Locale)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.DayInWeekField.format(long,B)": ": fastdateprinter generates date objects wastefully168",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.different(double,double,String,Object)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(Object,String,Object)": "a bit of dog food and a lot of javadoc tweakageadd final modifier to local variables.[] methodutils.invoke*(*, object... args) variants cannot handle null valuesmoving most of the methods over to varargs. a couple can't change because they are object[], class[] with both end parameters ideally wanting to be vararg. 396",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.getMaxLengthEstimate()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/math/Fraction.java@org.apache.commons.lang3.math.Fraction.subAndCheck(int,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesformat to 120 line length.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.DayInWeekField.format(long)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyOpen.getOpeningInterval()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.appendInternal(StringBuffer,String,Object,boolean)": "tab alignment[] clear threadlocal recursion registry (compatibly with existing tests, first pass)",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toFloat(String,float)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesfixing crlfsstatement unnecessarily nested within else clause.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.isNotTrue(Boolean)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.appendNewLine()": "deprecate systemutilsline_separator in favor of java.lang.systemlineseparator",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.lastIndexOf(double,double,int)": "removes unnecessary class reference of static method calls which are declared in the same classcrlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.appendTo(StringBuffer,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.parse(FastDateParser,Calendar,String,ParsePosition,int)": "add final modifier to local variables.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.isAlphanumericSpace(CharSequence)": "sort members.[github] commons-lang pull request : intellij idea refactorings..add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.getPattern()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.getLocaleSpecificStrategy(int,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove unused constructor parameterformat.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.join(short,char)": "sort members.[] stringutils join apis for primitives.",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.getCause(Throwable)": "[] prefer throwable.getcause() in exceptionutils.getcause() ()",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.append(StringBuffer,String,int,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.MemberUtils.of(Method)": "make sure placement of curly braces is consistentadd final modifier to method parameters.: add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.validateArray(Object)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesuse validateistrue to validate argumentsfixing crlfsstatement unnecessarily nested within else clause.using validate where possible in math package. code refactoring in numberutils",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.max(T,T)": " add a null-safe compare() method to objectutilsadd methods for cloneables to objectutils ().",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.setLength(int)": ": add nul byte to charutils. thanks to beluga behr.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.TimeZoneNameRule(TimeZone,Locale,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.CheckIntervalData.getEventCount()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shuffle(char)": ": added shuffle methods to arrayutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.parseObject(String,ParsePosition)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.classToString(Class)": ": typeutils.tostring() doesn't handle primitive and object arrays correctlyapply patch by aaron digulla[] new type util features",
  "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java@org.apache.commons.lang3.CsvUnescaper.escapeXml10(String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: add methods for removing all invalid characters according to xml 1.0 and xml 1.1 in an input string to stringescapeutils. thanks to adam hooper",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.performStateCheck(int)": "add final modifier to local variables.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.Range.between(T,T)": "refactor range with lots of new methods",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.mid(String,int,int)": "sort members.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.appendln(StringBuilder,int,int)": "<action issue=\"\" type=\"add\">strbuilder should support stringbuilder as an input parameter</action>",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.ordinalIndexOf(String,String,int,boolean)": "wsmoving the indexof(string, string, int) method above the ordinalindexof methods to put it with its overloaded peers. 590",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.createPattern(StringBuilder)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadUtils.findThreadById(long,ThreadGroup)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.use validateistrue to validate argumentsfixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.parseToken(String,int)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/GmtTimeZone.java@org.apache.commons.lang3.time.GmtTimeZone.hashCode()": "[] timezone.gettimezone() in fastdateparser causes resourcecontention</action>. this .",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double,String)": "validate's string.format without arguments ()while calling string.format(\"some string\") without any additionalarguments is not technically wrong, it's redundant, as it justreturns the same string.removing these calls and just using the string instead both cleans upthe code and offers a (very slight) performance gain.: validate: add inclusivebetween and exclusivebetween overloads for primitives types. initial patch provided by sebb.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.fetchCheckInterval(EventCountCircuitBreaker)": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.CONST(boolean)": "make sure placement of curly braces is consistent[] introduce const() methods to prevent javac from inlining constants",
  "src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java@org.apache.commons.lang3.builder.ReflectionToStringBuilder.setUpToClass(Class)": "[github] commons-lang pull request : intellij idea refactorings..add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.trimToEmpty(String)": "sort members.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.modify(int)": " fastdateparser does not handle excess hours as per simpledateformat",
  "src/main/java/org/apache/commons/lang3/text/StrLookup.java@org.apache.commons.lang3.text.SystemPropertiesStrLookup.mapLookup(Map)": "remove redundant type arguments.",
  "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java@org.apache.commons.lang3.text.translate.NumericEntityUnescaper.NumericEntityUnescaper(OPTION)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.making unescapehtml _not_ escape unfinished numeric entities by default (it ignores them); however adding options that will fire an exception or unescape the numeric entity. 710",
  "src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java@org.apache.commons.lang3.builder.DiffBuilder.append(String,short,short)": "use validateistrue to validate arguments: there should be a differencebuilder with a reflectiondifferencebuilder implementation",
  "src/main/java/org/apache/commons/lang3/tuple/Triple.java@org.apache.commons.lang3.tuple.Triple.emptyArray()": "[] add empty_array constants to classes inorg.apache.commons.lang3.tuple",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.format(Calendar,B)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.getTimeInstance(int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.FastDateFormat(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.getInstance(String)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.FastDateParser(String,TimeZone,Locale)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names: dateutilstest.testlang530 fails for some timezones",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.hashCode()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TzInfo.getStrategy(char,int,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadUtils.findThreadById(long)": "fixing crlfsstatement unnecessarily nested within else clause.incorporated feedback from peteradd threadutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.format(Date)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.appendAll(T)": "fix typos in commentssuppress warning about vararg usage.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.different(long,long)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.register(Object)": "remove redundant type arguments.add final modifier to local variables.promote uniformity between branches by using registry accessorunused imports + uh, why would you synchronize access to a threadlocal?  :p[] clear threadlocal recursion registry (compatibly with existing tests, first pass)",
  "src/main/java/org/apache/commons/lang3/mutable/MutableByte.java@org.apache.commons.lang3.mutable.MutableByte.getAndAdd(byte)": "add final modifier to local variables. addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.substring(CharSequence,int,int)": "removing the unnecessary sequencetostring methodmoving lastindexof, contains, containswhitespace, indexofany, containsany, indexofanybut, containsonly, containsnone and substring over to using charsequences for parameters. 687",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.adjustYear(int)": "format.",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double)": ": validate: add inclusivebetween and exclusivebetween overloads for primitives types. initial patch provided by sebb.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.containsVariableTypeSameParametrizedTypeBound(TypeVariable,ParameterizedType)": " - stackoverflowerror on typeutils.tostring(...) for a generic return type of enum.valueof ()",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.subarray(boolean,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.setArrayStart(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.appendDigits(StringBuffer,int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toLong(String)": "fixing crlfsstatement unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.getInstance(String,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.setFieldSeparator(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/AnnotationUtils.java@org.apache.commons.lang3.AnnotationUtils.next()": "add hashcode and tostring methods to annotationutils, plus tests",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.UnpaddedMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.TzInfo(TimeZone,boolean)": ": fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.getFragmentInMinutes(Calendar,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesmake use of existing timeunit class to manage time units.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.TimeZoneNameRule(TimeZone,Locale,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces fastdateformat's \"z\" pattern does not respect timezone of calendar instances passed to format()applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java@org.apache.commons.lang3.concurrent.TimedSemaphore.getPeriod()": "[] added timedsemaphore class to concurrent package.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.estimateLength()": " fastdateparser and fastdateprinter support 'x' formatapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.getCache(int)": "remove redundant type arguments.format.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.parse(String,ParsePosition)": "add final modifier to local variables.trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.append(StringBuffer,String,long,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/Functions.java@org.apache.commons.lang3.Functions.test(FailablePredicate,O)": "functions.java whitspacesreplace tabs with four spaces, as per the project's checkstyle rules.added functions.trywithresources.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.DayInWeekField(NumberRule)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.join(Iterable,String)": "sort members.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.applyRules(Calendar,B)": "add final modifier to local variables.1154fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.TwoDigitNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(int)": " simplify fastdateformat; eliminate boxingrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.getTimeZone()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.setSummaryObjectEndText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isSorted(char)": "formatting fixes perhttps://patch-diff.githubusercontent.com/raw/apache/commons-lang/pull/128.diffcrlf -> lfjavadoc: fix typo but working is still awkward. - add issorted() to arrayutils. patch supplied by james sawle.  in github.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.CONST(int)": "make sure placement of curly braces is consistent[] introduce const() methods to prevent javac from inlining constants",
  "src/main/java/org/apache/commons/lang3/event/EventUtils.java@org.apache.commons.lang3.event.EventUtils.invoke(Object,Method,Object)": "statement unnecessarily nested within else clause.wsfix brace positionsimproving test coverage.changing eol-style to native.misc. event utils.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.hashCode()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.lastIndexOf(Object,Object)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/CharRange.java@org.apache.commons.lang3.CharRange.toString()": "add final modifier to local variables.adding vincent ricard's patch to charrange.java providing an iterator that lets you walk the chars in the range. 454",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.TwoDigitMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.hashCode()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.format(Date)": "change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. applying my fix to , and mikael's test case; fixing the fastdateformat to properly include the locale when formatting a date",
  "src/main/java/org/apache/commons/lang3/RandomUtils.java@org.apache.commons.lang3.RandomUtils.nextDouble()": "add sugar to randomiutils",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.setSizeEndText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/EnumUtils.java@org.apache.commons.lang3.EnumUtils.generateBitVector(Class,EnumSet)": "adding nelson carpentier's patch adding an enumset to bit vector (and back again) to enumutils. 730",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.startsWith(String,String,boolean)": "tab police (and trailing spaces)",
  "src/main/java/org/apache/commons/lang3/mutable/MutableFloat.java@org.apache.commons.lang3.mutable.MutableFloat.getAndAdd(Number)": "add final modifier to local variables. addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/ArchUtils.java@org.apache.commons.lang3.ArchUtils.init_PPC_32Bit()": "use final.: add archutils - an utility class for the \"os.arch\" system property ()",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.rightPad(String,int,char)": "add final modifier to local variables.renaming the newly public pad(int, char) method to repeat(char, int) [note the swap of param order]. i've also pulled the faster implementation out of repeat(string, int). make the pad method public. i can use this now :) ! the method used to be private and named padding. it is used internally and covered by unit tests through leftpad(), rightpad() and repeat().rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shift(byte,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.swap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(Class,Class)": "add final modifier to local variables.convert to java 5 enhanced loops. javadocremove unnecessary cast[] vastly expanded typeutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.appendDigits(Appendable,int)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.",
  "src/main/java/org/apache/commons/lang3/CharRange.java@org.apache.commons.lang3.CharRange.contains(CharRange)": "use validateistrue to validate arguments",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shift(short,int,int,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.crlf -> lfjavadoc: fix typo but working is still awkward.merge branch '': inconsistent behavior of swap for malformed inputs. thanksto adrian ber.new test caseexplanations about algorithmtabs replaced by spacesnew tests addedswap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.applyRules(Calendar,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: resurrect applyrules(java.util.calendar, java.lang.stringbuffer) for binary compatibilityadd final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/EnumUtils.java@org.apache.commons.lang3.EnumUtils.isValidEnumIgnoreCase(Class,String)": ": enumutils.getenumignorecase and isvalidenumignorecase methods added ()",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.init(Calendar)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.don't need a copy of this field.add final modifier to local variables.remove redundant type arguments.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.Iso8601_Rule(int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.getOwnerType()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.differentObj(Comparable,T)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategy.incrementAndCheckState()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.getPattern()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java@org.apache.commons.lang3.reflect.FieldUtils.getFieldsWithAnnotation(Class,Class)": ": provide methods to retrieve all fields/methods annotated with a specific type. thanks to alexander m\u00fcller.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.getMaxWidth(ListIterator)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.parseObject(String,ParsePosition)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.format(long,B)": ": fastdateprinter generates date objects wastefullyfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.max(byte)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesfixing crlfsstatement unnecessarily nested within else clause. code refactoring in numberutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.compare(Map,Map)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.reflectionAppendArrayDetail(StringBuffer,String,Object)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.java@org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.AbstractCircuitBreaker()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isNotEmpty(short)": "crlf -> lfjavadoc: fix typo but working is still awkward.simplify isnotempty by reusing isemptyapplying chandrashekar m's patch to , adding isnotempty(array) methods to arrayutils. ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.substringBefore(String,String)": "sort members.use stringisempty() instead of stringlength() == 0add final modifier to local variables.use index_not_found instead of magic number.",
  "src/main/java/org/apache/commons/lang3/CharRange.java@org.apache.commons.lang3.CharRange.CharRange(char,char,boolean)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.equals(Object)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.primitivesToWrappers(Class)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.getCauseUsingMethodName(Throwable,String)": ": update java requirement from java 6 to 7use multi-catch in annotationutils and exceptionutilsadd final modifier to local variables.remove unnecessary reflection parameter argsadding nopmd tags for various empty catch blocks",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.getCache(int)": "remove redundant type arguments.format.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.equals(ParameterizedType,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.BooleanUtils()": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.asWriter()": ": add zero copy write method to strbuilder; : add zero copy read method to strbuilder. thanks to mikhail mazursky.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategy.increment(int)": "flips the order of conditional expressions and 'if' statements whose conditions were negated: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.isSameLocalTime(Calendar,Calendar)": "pmd: useless parentheses dateutils issamelocaltime() compares the hour using 12hour calendar.hour instead of 24hour calendar.hour_of_day - thanks to christian",
  "src/main/java/org/apache/commons/lang3/text/StrMatcher.java@org.apache.commons.lang3.text.NoMatcher.toString()": "add stringmatchertostring(); useful from a debugger.",
  "src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java@org.apache.commons.lang3.builder.ReflectionToStringBuilder.setExcludeNullValues(boolean)": "merge branch '' of https://github.com/markdacek/commons-lang: added isexcludenullvalues to reflectiontostringbuilder and test",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.boolArrayBeMsb0ToHexDigit(boolean)": "use better method names. document possible arrayindexoutofboundsexception and stringindexoutofboundsexception.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.CONST(long)": "make sure placement of curly braces is consistent[] introduce const() methods to prevent javac from inlining constants",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadUtils.findThreads(ThreadPredicate)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.max(T)": "add final modifier to local variables. - change objectutils min() & max() functions to use varargs rather than just two parameters",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.different(long,long,String,Object)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.format(Object)": "fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.toStringYesNo(Boolean)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.ws",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.WeekYear.equals(Object)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.indexOf(String,int)": "rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.indexOf(char,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.NoClassNameToStringStyle()": ": add noclassnametostringstyle implementation of tostringstyle. this  from github. thanks to innokenty shuvalov.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.hashCode()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.readObject(ObjectInputStream)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.getPackageCanonicalName(String)": "removes unnecessary class reference of static method calls which are declared in the same class",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.Range.getMaximum()": "refactor range with lots of new methods",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.isJsonArray(String)": ": fix logic in isjsonarray method of jsontostringstyleextract logic for checking string representation of objects into separate methods",
  "src/main/java/org/apache/commons/lang3/CharRange.java@org.apache.commons.lang3.CharacterIterator.CharRange(char,char,boolean)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/LocaleUtils.java@org.apache.commons.lang3.SyncAvoid.isNumericAreaCode(String)": "extract some helper methods to make the code better readable",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.parseToken(String,int)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.add(boolean,int,boolean)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeLiteral.java@org.apache.commons.lang3.reflect.TypeLiteral.getType()": "[] provide typeliteral class similar to javax.enterprise.util.typeliteral",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.format(Object)": "4fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java@org.apache.commons.lang3.concurrent.TimedSemaphore.startTimer()": "add missing @override.[] added timedsemaphore class to concurrent package.",
  "src/main/java/org/apache/commons/lang3/CharUtils.java@org.apache.commons.lang3.CharUtils.unicodeEscaped(char)": "[github] commons-lang pull request : intellij idea refactorings..make sure lines in files don't have trailing white spaces and remove all trailing white spaces: performance improvements for stringescapeutils. this fixes  from github. thanks to fabian lange.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.appendEnd(StringBuffer,Object)": "[github] commons-lang pull request : intellij idea refactorings..",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.getDateInstance(int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.append(String,int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.typeVariableToString(TypeVariable)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.WeekYear(NumberRule)": ": fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.getLocaleSpecificStrategy(int,Calendar)": "[] use the cache in fastdateparser correctly.add final modifier to local variables.tab police fastdateparser could use calendar.getdisplaynames for all text fieldsremove unnecessary keyvalue instances: fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.getDateTimeInstance(int,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.format(Calendar,StringBuffer)": "4fastdateformat apis that use a stringbuilder: dateformatutils.format does not correctly change calendar timezone in certain situations: unit test fastdateprintertimezonestest needs a timezone setapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/SystemUtils.java@org.apache.commons.lang3.SystemUtils.getOSMatchesName(String)": "- fix () systemutils.getjavaversionasfloat throws stringindexoutofboundsexception on android runtime/dalvik vm- refactor for unit testing.- remove odd test code which is copy and pasted from systemutils, which therefore does not test anything.",
  "src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java@org.apache.commons.lang3.concurrent.ConcurrentUtils.handleCause(ExecutionException)": "add final modifier to local variables.[] introduced concurrentruntimeexception and extended the exception handling methods of concurrentutils to support runtime exceptions, too.",
  "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java@org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(CharSequence,int,Writer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.make sure placement of curly braces is consistentfix non-critical typos in comments and javadocfix typos in several local variablesadd final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)moving to an illegalargumentexception: 710making unescapehtml _not_ escape unfinished numeric entities by default (it ignores them); however adding options that will fire an exception or unescape the numeric entity. 710adding tests and resolving , reported by benjamin valentin. note that this changed such that the code will now escape an unfinished entity (i.e. &). this matches browser behaviour. implemented todo to protect unescaper from arrayindexoutofboundsadding a test, and code fix, to have supplementary chars working in numeric entity unescaping. see 617",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy(String)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display namesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TzInfo.TzInfo(TimeZone,boolean)": ": fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.TimeZoneNameRule(TimeZone,Locale,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.getLength(Object)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.Range.isBeforeRange(Range)": "refactor range with lots of new methods",
  "src/main/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java@org.apache.commons.lang3.concurrent.CallableBackgroundInitializer.checkCallable(Callable)": "use validateistrue to validate arguments",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean,int)": "simplify using ternary expressions.statement unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.createPattern(StringBuilder)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isEmpty(short)": "crlf -> lfjavadoc: fix typo but working is still awkward.simplify isempty be reusing getlengths/if (foo) { return true; } return false;/return foo;/g",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.rightPad(CharSequence,int)": "moving center, left, leftpad, right, rightpad, mid, uppercase, lowercase and swapcase over to charsequence input. 687",
  "src/main/java/org/apache/commons/lang3/Functions.java@org.apache.commons.lang3.Functions.apply(FailableBiFunction,I1,I2)": "functions.java whitspacesreplace tabs with four spaces, as per the project's checkstyle rules.adding the functions class as a helper for dealing with java 8 lambdas.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.ISO8601TimeZoneStrategy(String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display namesreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.AlwaysTruePredicate.getAllThreads()": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.indexOfType(Throwable,Class,int)": "sort by method name.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(CharSequence,CharSequence,int)": "sort members.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)moving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils classmoving equalsignorecase, indexofignorecase, lastindexofignorecase and containsignorecase to the charsequence api. 687",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.getOwnerType()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(Object,int,char)": "reuseadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.createInteger(String)": "fixing crlfsstatement unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.getInstance(String,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.format(Calendar,StringBuffer)": "4fastdateformat apis that use a stringbuilder: dateformatutils.format does not correctly change calendar timezone in certain situations: unit test fastdateprintertimezonestest needs a timezone setapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.unregister(Object,Object)": "add final modifier to local variables.: remove unnecessary synchronization from registry lookup in equalsbuilder and hashcodebuilder ()add final modifier to local variables.checkstyle and trailing spaces.fixing  so that equalsbuilder synchronizes on itself and not hashcodebuilderapplying the copy of the hashcodebuilder code to stop cyclic references over to equalsbuilder per  and oliver sauder's patch",
  "src/main/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java@org.apache.commons.lang3.text.translate.UnicodeEscaper.UnicodeEscaper(Range)": "moving text translation classes to the range class for its configuration",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.appendDetail(StringBuffer,String,char)": "fix the jsontostringstyle:except number types and boolean type, all other types in java should be 'appendasstring'",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.splitPreserveAllTokens(String,char)": "sort members.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.appendDisplayNames(Calendar,Locale,int,StringBuilder)": "add final modifier to local variables.remove redundant type arguments.: fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.min(short,short,short)": "fixing crlfsstatement unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double)": ": validate: add inclusivebetween and exclusivebetween overloads for primitives types. initial patch provided by sebb.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.CONST(double)": "make sure placement of curly braces is consistent[] introduce const() methods to prevent javac from inlining constants",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.noNullElements(T,String,Object)": "removes unnecessary class reference of static method calls which are declared in the same classadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.getPattern()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.walkInterfaces(Set,Class)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesuse final consistently. [] retrieve class hierarchy",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.GenericArrayTypeImpl(Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.parameterizedTypeToString(ParameterizedType)": " - stackoverflowerror on typeutils.tostring(...) for a generic return type of enum.valueof ()[] new type util features",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.smallerOrEqual(double,double,String,Object)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.firstNonBlank(T)": "sort members.: methods for getting first non empty or non blank value ()",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.addRegex(FastDateParser,StringBuilder)": " fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses . fastdateparser does not handle non-gregorian calendars properly applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.createKeyValues(List)": ": fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.parseDateStrictly(String,Locale,String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: parsedatestrictly does't pass specified locale - dateutilsparsedate uses default locale; add locale support",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.simpleQuote(StringBuilder,String)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateparser too strict on abbreviated short month symbolsadd final modifier to local variables.format. fastdateparser_timezonestrategytesttesttimezonestrategypattern fails on windows with german localereimplementing 1107",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.mid(CharSequence,int,int)": "moving center, left, leftpad, right, rightpad, mid, uppercase, lowercase and swapcase over to charsequence input. 687",
  "src/main/java/org/apache/commons/lang3/mutable/MutableByte.java@org.apache.commons.lang3.mutable.MutableByte.addAndGet(Number)": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.deleteFirst(String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyClosed.changeStateAndStartNewCheckInterval(State)": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.InitStripAccents.splitByWholeSeparatorWorker(String,String,int,boolean)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.getPattern()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.JsonToStringStyle()": ": add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyOpen.incrementAndCheckState()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.format(Calendar)": "fastdateformat apis that use a stringbuilderapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.applyRules(Calendar,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: resurrect applyrules(java.util.calendar, java.lang.stringbuffer) for binary compatibilityadd final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.Pair.getTimeInstance(int,TimeZone)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.appendTo(Appendable,int)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java@org.apache.commons.lang3.builder.DiffBuilder.getLeft()": ": there should be a differencebuilder with a reflectiondifferencebuilder implementation",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.setSummaryObjectEndText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/tuple/ImmutableTriple.java@org.apache.commons.lang3.tuple.ImmutableTriple.getRight()": "adding henning's github pull request with a triple implementation. 675",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.TimeZoneStrategy(Locale)": "refactor \"gmt\" magic string.add a default case to switch to appease findbugs: nullpointerexception in fastdateparser$timezonestrategy ()replicate the fix for 1186add final modifier to local variables.remove redundant type arguments. fastdateparser_timezonestrategytesttesttimezonestrategypattern fails on windows with german localereimplementing 1107 fix parsing edge cases in fastdateparserrevert muddled commit - number percentage formatting with fractional digits fastdateparser error - timezones not handled correctlyuse final consistently. : test failure in fastdateparsertest and fastdateformat_parsertest when building with jdk8. thanks to bruno p. kinoshita and henri yandell for their help in fixing this issue.add final modifier to local variables.trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TzInfo.FastDateParser(String,TimeZone,Locale,Date)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.make sure placement of curly braces is consistent",
  "src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java@org.apache.commons.lang3.text.ExtendedMessageFormat.getQuotedString(String,ParsePosition)": ": exception while using extendedmessageformat and escaping braces. this fixes  from github. thanks to andrey khobnya.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.append(StringBuffer,String,byte,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.count(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.append(char)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.getPattern()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.TimeZoneStrategy(Calendar,Locale)": ": fastdateformat doesn't respect summer daylight in some localized stringsmerge branch 'master' of https://github.com/nickmanley/commons-langthis  fix nullpointerexception in fastdateparser$timezonestrategyfix nullpointerexception in fastdateparser$timezonestrategyrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java@org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(Object,Object,boolean,Class)": "fix brace positionsfixing the pass along of comparetransients to the reflectioncompare method as identified by robert radkiewicz in 635",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.toString()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.abbreviate(String,String,int,int)": "sort members.: stringutilsabbreviate should support 'custom ellipses' parameter ()",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.equals(StrBuilder)": ": strbuilder.equals(strbuilder) doesn't check for null inputsadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/event/EventUtils.java@org.apache.commons.lang3.event.EventUtils.EventBindingInvocationHandler(Object,String,String)": "remove redundant type arguments.changing eol-style to native.misc. event utils.",
  "src/main/java/org/apache/commons/lang3/exception/ContextedException.java@org.apache.commons.lang3.exception.ContextedException.addContextValue(Pair)": "refactor exceptioncontext and derived. context contract stipulates a sequence of label-value entries with support for multiple entries for the same label.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.CharacterLiteral(char)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/SystemUtils.java@org.apache.commons.lang3.SystemUtils.isOSVersionMatch(String,String)": "add final modifier to local variables.: make logic for comparing os versions in systemutils smarter",
  "src/main/java/org/apache/commons/lang3/CharUtils.java@org.apache.commons.lang3.CharUtils.isAsciiAlphanumeric(char)": " - add issorted() to arrayutils. patch supplied by james sawle.  in github.",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.EventListenerSupport.addListener(L,boolean)": "allowduplicates will always be false at that pointadded new addlistener() method that takes a boolean for if duplicates are allowed.added test method to make sure that duplicate listeners are not added.",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.noNullElements(T)": ": added validstate()",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.getRule(int)": "removes unnecessary class reference of static method calls which are declared in the same classmake sure lines in files don't have trailing white spaces and remove all trailing white spacesreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toDouble(byte)": ": please add number to byte[] methods. suggested by lilianne e. blaze. final patch from vincent ricard (with thanks to henri yandell).",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.appendDigits(Appendable,int)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.max(float,float,float)": "fixing crlfsstatement unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java@org.apache.commons.lang3.CsvEscaper.escapeHtml3(String)": "remove unnecessary white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.addNamesToKeyValues(List,Map)": ": fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java@org.apache.commons.lang3.reflect.FieldUtils.readDeclaredStaticField(Class,String,boolean)": "a bit of dog food and a lot of javadoc tweakage[] add fieldutils getdeclaredfields() to return all the fields defined in the given class and super classes.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.createInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeElements(T,T)": "add @safevarargs to some methods with vararg parameters to suppress \"type safety: potential heap pollution via varargs parameter array\" warningsremove redundant type arguments. simplify arrayutils removeelements by using newdecrementandget() method: improve arrayutils removeelements time complexity to o(n) ()based on patch submitted by jeffery yuancrlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables. arrayutils removeelements methods use unnecessary hashseteliminate conversion of bitset to int[] arrayutils removeelements methods use unnecessary hashsetreplace hashset with bitset (less memory; faster) arrayutils removeelements methods clone temporary index arrays unnecessarilyreduce number of created arrays[] complement arrayutils.addall() variants with by-index and by-value removal methods",
  "src/main/java/org/apache/commons/lang3/time/GmtTimeZone.java@org.apache.commons.lang3.time.GmtTimeZone.equals(Object)": "no need to nest.[] timezone.gettimezone() in fastdateparser causes resourcecontention</action>. this .",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shift(long,int,int,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.crlf -> lfjavadoc: fix typo but working is still awkward.merge branch '': inconsistent behavior of swap for malformed inputs. thanksto adrian ber.new test caseexplanations about algorithmtabs replaced by spacesnew tests addedswap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.estimateLength()": " fastdateparser and fastdateprinter support 'x' formatapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java@org.apache.commons.lang3.text.translate.EntityArrays.APOS_UNESCAPE()": "make sure placement of curly braces is consistent",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.getLocaleSpecificStrategy(int,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove unused constructor parameterformat.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display namesrename textstrategy to caseinsensitivetextstrategy per sebb's suggestion[] use the cache in fastdateparser correctly.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/event/EventUtils.java@org.apache.commons.lang3.event.EventBindingInvocationHandler.hasMatchingParametersMethod(Method)": "changing eol-style to native.misc. event utils.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.increment(int)": "flips the order of conditional expressions and 'if' statements whose conditions were negated: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.notNaN(double,String,Object)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.DayInWeekField.format(long,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateprinter generates date objects wastefully168",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.setCalendar(FastDateParser,Calendar,String)": "[] timezone.gettimezone() in fastdateparser causes resourcecontention</action>. this .utc and gmt are the same, so simplify.refactor \"gmt\" magic string.make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.getMaxLengthEstimate()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.getNextStrategy()": "add final modifier to local variables.format.statement unnecessarily nested within else clause.\\refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.greaterOrEqual(long,long,String,Object)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.appendTo(Appendable,int)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.appendTo(StringBuffer,Calendar)": "zz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.newCalendar()": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.TimeZoneStrategy(Locale)": "refactor \"gmt\" magic string.add a default case to switch to appease findbugs: nullpointerexception in fastdateparser$timezonestrategy ()replicate the fix for 1186add final modifier to local variables.remove redundant type arguments. fastdateparser_timezonestrategytesttesttimezonestrategypattern fails on windows with german localereimplementing 1107 fix parsing edge cases in fastdateparserrevert muddled commit - number percentage formatting with fractional digits fastdateparser error - timezones not handled correctlyuse final consistently. ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.append(CharBuffer)": ": avoid string allocation in strbuilder.append(charsequence). this fixes  from github. thanks to mikhail mazurskiy and fabian lange.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.CheckIntervalData.EventCountCircuitBreaker(int,long,TimeUnit)": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.isNextNumber()": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromSuperclass(Class,String,Class)": "add final modifier to local variables.add final modifier to method parameters.moving most of the methods over to varargs. a couple can't change because they are object[], class[] with both end parameters ideally wanting to be vararg. 396",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.hexToShort(String,int,short,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesscope of local variabel shift can be narrowerformat to 120 line length.add final modifier to local variables.use better method names. document possible arrayindexoutofboundsexception and stringindexoutofboundsexception.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.toString()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.appendDigits(StringBuffer,int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.appendSeparator(String,String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/StopWatch.java@org.apache.commons.lang3.time.StopWatch.getTime()": "sort methods.: add stopwatchgettime(timeunit) ()",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.getTimeInstance(int,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.applyRules(Calendar,StringBuffer)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.estimateLength()": " fastdateparser and fastdateprinter support 'x' formatapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java@org.apache.commons.lang3.builder.DiffBuilder.append(String,boolean,boolean)": "use validateistrue to validate arguments: there should be a differencebuilder with a reflectiondifferencebuilder implementation",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.addNamesToKeyValues(List,Map)": ": fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.genericArrayType(Type)": "validation[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.hashCode()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.isAllEmpty(CharSequence)": "sort members.revert \": add stringutilsisanynotempty and isanynotblank\" and add \": add stringutilsisallempty and isallblank methods\" instead: add stringutilsisallempty and isallblank methods",
  "src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java@org.apache.commons.lang3.mutable.MutableDouble.incrementAndGet()": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.replaceFirst(String,String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.setFieldNameValueSeparator(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyClosed.isCheckIntervalFinished(EventCountCircuitBreaker,CheckIntervalData,long)": "add final modifier to method parameters.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java@org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(T,ToStringStyle,boolean,boolean,Class)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesmerge branch '' of https://github.com/markdacek/commons-lang: added isexcludenullvalues to reflectiontostringbuilder and testadd final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.repeat(String,int)": "sort members.add final modifier to local variables.renaming the newly public pad(int, char) method to repeat(char, int) [note the swap of param order]. i've also pulled the faster implementation out of repeat(string, int). make the pad method public. i can use this now :) ! the method used to be private and named padding. it is used internally and covered by unit tests through leftpad(), rightpad() and repeat().",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.WeekYear.format(Date)": ": fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.withUpperBounds(Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.applyRulesToString(Calendar)": "4fastdateformat apis that use a stringbuilderrefactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/text/StrTokenizer.java@org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char,int,int,StrBuilder,List,int,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesit's confusing to re-use field names locallyadd final modifier to local variables.add final modifier to method parameters.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)fix pmd issues: \"these nested if statements could be combined\"fix brace positions",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(Date,Date,int)": "add final modifier to local variables.javadoc: add truncatedequals and truncatedcompareto",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.DayInWeekField(NumberRule)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.compare(Map,Map)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long)": ": validate: add inclusivebetween and exclusivebetween overloads for primitives types. initial patch provided by sebb.",
  "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java@org.apache.commons.lang3.time.Token.paddedValue(long,boolean,int)": " durationformatutils does not handle large durations correctly",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.format(long,B)": ": fastdateprinter generates date objects wastefullyfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/mutable/MutableByte.java@org.apache.commons.lang3.mutable.MutableByte.getAndIncrement()": "add final modifier to local variables. addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.readResolve()": "removes unnecessary class reference of static method calls which are declared in the same class: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.swap(Object,int,int,int)": "add final modifier to local variables.crlf -> lfjavadoc: fix typo but working is still awkward.merge branch '': inconsistent behavior of swap for malformed inputs. thanksto adrian ber.consistent treatment for negative indices for swap methodtabs replaced by spacesnew tests addedswap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.getClassName(Object)": "[] add methods to objectutils to get various forms of classnames in a null-safe manner",
  "src/main/java/org/apache/commons/lang3/RandomUtils.java@org.apache.commons.lang3.RandomUtils.nextInt()": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd sugar to randomiutils",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.remove()": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces[] retrieve class hierarchy",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.hashCode()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.applyRules(Calendar,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: resurrect applyrules(java.util.calendar, java.lang.stringbuffer) for binary compatibilityadd final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/WordUtils.java@org.apache.commons.lang3.text.WordUtils.wrap(String,int,String,boolean,String)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.[] wordutils.wrap throws stringindexoutofboundsexception whenwraplength is integer.max_value.use stringbuilderappend(charsequence, int, int) were possible to improve performance(similar to , thanks to stephane landelle for the suggestion)make code more readable with less nesting (move block out of elseclause).deprecate systemutilsline_separator in favor of java.lang.systemlineseparatorfixes : wordutils.wrap throws stringindexoutofboundsexceptionadd final modifier to local variables.merge branch ''wordutils.wrap: customizable breakable characters (not just space/whitespace)changed wrap method to use regex pattern to find breakable characters rather than only spaces. added a few basic tests for \"regex wrap\"",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.parse(String,ParsePosition,Calendar)": "lvar should not hide ivar.add final modifier to local variables.format.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.FastDatePrinter(String,TimeZone,Locale)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.applyRulesToString(Calendar)": "4fastdateformat apis that use a stringbuilderrefactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.TwoDigitMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.allNotNull(Object)": ": added methods to objectutils class to check for null elements in the array ()",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.getFragment(Calendar,int,TimeUnit)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.make sure lines in files don't have trailing white spaces and remove all trailing white spacesuse final consistently. make use of existing timeunit class to manage time units.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.PaddedNumberField(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.getCheckIntervalStart()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.modify(int)": " fastdateparser does not handle excess hours as per simpledateformattrailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.letterPattern(char)": "add final modifier to local variables.format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.NamePredicate.ThreadIdPredicate(long)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.ProxyInvocationHandler.writeObject(ObjectOutputStream)": "remove redundant type arguments.add final modifier to local variables.add serialization support to eventlistenersupport",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyOpen.getCheckIntervalStart()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.SimpleDateFormatStrategy.setCalendar(FastDateParser,Calendar,String)": " fastdateparser does not handle non-gregorian calendars properly ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.DayInWeekField(NumberRule)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/concurrent/Memoizer.java@org.apache.commons.lang3.concurrent.Memoizer.launderException(Throwable)": ": implementation of a memomizer ()changes suggested in https://github.com/apache/commons-lang/pull/80:- tabs to spaces- use @override- remove unused variables- other minimal clean-ups: implementation of a memomizer ()",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.StrategyAndWidth(Strategy,int)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(String,int,RoundingMode)": ": rounding utilities for converting to bigdecimal",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.appendTo(StringBuffer,Calendar)": "zz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/translate/OctalUnescaper.java@org.apache.commons.lang3.text.translate.OctalUnescaper.translate(CharSequence,int,Writer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.use final consistently. rewriting octalunescaper as a hand rolled parser (all of 4 characters), instead of trying to handle the conversion via repeated attempts to convert the numbers. this fixes bugs, see , and also changes the behaviour for 'illegal' octals such as \\999. instead of throwing numberformatexception, it will now ignore them. this seems the better behaviour. applying github pull request https://github.com/apache/commons-lang/pull/5, linked as , fixing a bug in octalescaper trying to parse octal numbers longer than 3 digitsadd final modifier to local variables.adding an octalunescaper to handle java's support of 1->377 octal values. 646",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.appendDisplayNames(Calendar,Locale,int,StringBuilder,Map)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.build()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/SerializationUtils.java@org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream(InputStream,ClassLoader)": "[] serializationutils throws classnotfoundexception when cloning primitive classesapplying sven ludwig's patch from . this modifies the serializationutils.clone method to use the threadcontextloader if it is unable to find a class using the object's current classloader. this should (hopefully) help with weblogic and tomcat situations where lang is outside the web-inf for some reason (likely user error with tomcat, by design for weblogic)",
  "src/main/java/org/apache/commons/lang3/mutable/MutableInt.java@org.apache.commons.lang3.mutable.MutableInt.getAndIncrement()": "add final modifier to local variables. addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java@org.apache.commons.lang3.math.IEEE754rUtils.min(float,float)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.wrap(Class)": "removes unnecessary class reference of static method calls which are declared in the same classprevent redundant modifiersadd typesafe wrap variant for classes",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.appendArray(Object,Object)": "make sure placement of curly braces is consistent[] equalsbuilder.append(object,object) is too big to beinlined, which prevents whole builder to be scalarized. .",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(Type,Class,Type)": "removes unnecessary class reference of static method calls which are declared in the same classapply patch contributed by bruno p. kinoshitavalidation[] new type util features",
  "src/main/java/org/apache/commons/lang3/RandomStringUtils.java@org.apache.commons.lang3.RandomStringUtils.randomAlphabetic(int,int)": ": extend randomstringutils with methods that generate strings between a min and max length (, )",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.replace(StringBuffer,int,int)": "[] strsubstitutor now supports the declaration of default values for the variables to be replaced. thanks to woonsan ko for the patch. strsubstitutor does not support stringbuilder or charsequenceadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.appendDisplayNames(Calendar,Locale,int,StringBuilder)": "add final modifier to local variables.remove redundant type arguments.: fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.TimeZoneDisplayKey(TimeZone,boolean,int,Locale)": "don't mutate parametersadd final modifier to method parameters.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/mutable/MutableByte.java@org.apache.commons.lang3.mutable.MutableByte.subtract(Number)": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.join(int,char,int,int)": "sort members.extract method.add final modifier to local variables.[] stringutils join apis for primitives.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.swap(Object,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.merge branch '': inconsistent behavior of swap for malformed inputs. thanksto adrian ber.consistent treatment for negative indices for swap methodswap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.addAll(T,T)": "add @safevarargs to some methods with vararg parameters to suppress \"type safety: potential heap pollution via varargs parameter array\" warningsformatting fixes perhttps://patch-diff.githubusercontent.com/raw/apache/commons-lang/pull/128.diffcrlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.appendDetail(StringBuffer,String,char)": "fix the jsontostringstyle:except number types and boolean type, all other types in java should be 'appendasstring'",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.format(long,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateprinter generates date objects wastefullyapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.containsNone(CharSequence,CharSequence)": "moving lastindexof, contains, containswhitespace, indexofany, containsany, indexofanybut, containsonly, containsnone and substring over to using charsequences for parameters. 687",
  "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java@org.apache.commons.lang3.concurrent.TimedSemaphore.getAvailablePermits()": "[] added timedsemaphore class to concurrent package.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.isJsonObject(String)": "extract logic for checking string representation of objects into separate methods",
  "src/main/java/org/apache/commons/lang3/math/Fraction.java@org.apache.commons.lang3.math.Fraction.hashCode()": "when writing about the hash code, use 'hash code', the compound 'hashcode' is not a work in english. the text 'hashcode()' is left as in of course.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.determineTypeArguments(Class,ParameterizedType)": "validationadd final modifier to local variables.add final modifier to method parameters.[] vastly expanded typeutils",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.parameterizedTypeToString(ParameterizedType)": " - stackoverflowerror on typeutils.tostring(...) for a generic return type of enum.valueof ()[] new type util features",
  "src/main/java/org/apache/commons/lang3/builder/DiffResult.java@org.apache.commons.lang3.builder.DiffResult.DiffResult(Object,Object,List,ToStringStyle)": "use validateistrue to validate arguments",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.applyRules(Calendar,StringBuffer)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.appendTo(StringBuffer,Calendar)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.NamePredicate.findThreadsByName(String)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.getPattern()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.join(double,char)": "sort members.[] stringutils join apis for primitives.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.appendDetail(StringBuffer,String,Object)": "extract logic for checking string representation of objects into separate methodsformat source codevariable names should follow naming conventionsmodified appenddetail method for object value in jsontostringstyle classfix the jsontostringstyle:except number types and boolean type, all other types in java should be 'appendasstring': add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.hashCode()": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java@org.apache.commons.lang3.CsvEscaper.unescapeEcmaScript(String)": "added escape/unescapejson methods per maurizio cucchiara's patch in 797",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.appendDigits(Appendable,int)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.appendTo(Appendable)": ": add zero copy write method to strbuilder; : add zero copy read method to strbuilder. thanks to mikhail mazursky.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.CONST_SHORT(int)": " - followup incorporating ggregory's doc suggestion, some doc fixes, addition of const_byte() and const_short(), and junit improvements to test doc examples and make sure const_byte() and const_short() throw illegalargumentexception as required.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.nullToEmpty(Byte)": "crlf -> lfjavadoc: fix typo but working is still awkward.use isempty() where possible. thanks to james sawle for pointing this out.minor code simplificationadding nulltoempty methods to arrayutils per  and levon karayan's patch. ",
  "src/main/java/org/apache/commons/lang3/RandomUtils.java@org.apache.commons.lang3.RandomUtils.nextLong()": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd sugar to randomiutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.format(long,B)": ": fastdateprinter generates date objects wastefullyfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.open()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(Class,Class,Class)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java@org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.isSuccessful()": "added a new issuccessful() method to the result object of multibackgroundinitializer.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.appendDigits(StringBuffer,int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.Builder.newThread(Runnable)": "don't use single letter variable names.add final modifier to local variables.adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/math/Fraction.java@org.apache.commons.lang3.math.Fraction.equals(Object)": "[github] commons-lang pull request : intellij idea refactorings..format to 120 line length.add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/concurrent/ThresholdCircuitBreaker.java@org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker.getThreshold()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/RegExUtils.java@org.apache.commons.lang3.RegExUtils.replaceFirst(String,String,String)": "[] add regexutils class instead of overloadinh methods instringutils that take a regex to take precompiled pattern. sort methods.[] add regexutils class instead of overloadinh methods instringutils that take a regex to take precompiled pattern.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.leftString(int)": "reuse",
  "src/main/java/org/apache/commons/lang3/text/StrTokenizer.java@org.apache.commons.lang3.text.StrTokenizer.checkTokenized()": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shift(double,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.swap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.getRawType()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.WildcardTypeImpl(Type,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.appendDetail(StringBuffer,String,Object)": "extract logic for checking string representation of objects into separate methodsformat source codevariable names should follow naming conventionsmodified appenddetail method for object value in jsontostringstyle classfix the jsontostringstyle:except number types and boolean type, all other types in java should be 'appendasstring': add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.format(Object)": "fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/StopWatch.java@org.apache.commons.lang3.time.StopWatch.getStartTime()": "applying sebb's patch from  - adding isstarted, issuspended and isstopped to stopwatch",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.iterator(Object,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java@org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(CharSequence,Writer)": "add final modifier to local variables.: performance improvements for stringescapeutils. this fixes  from github. thanks to fabian lange.: numericentityescaper incorrectly encodes supplementary characters. thanks to chris karcher.add final modifier to local variables.[] stringindexoutofboundsexception in charsequencetranslator.[] stringescapeutils.escapexml(input) outputs wrong results when an input contains characters in supplementary planes.  also rewrite method to avoid modification of counter variable in for loopformatting/wsbreaking 120+ line in half",
  "src/main/java/org/apache/commons/lang3/mutable/MutableBoolean.java@org.apache.commons.lang3.mutable.MutableBoolean.isTrue()": "[github] commons-lang pull request : intellij idea refactorings..",
  "src/main/java/org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.java@org.apache.commons.lang3.concurrent.ConcurrentRuntimeException.ConcurrentRuntimeException(String,Throwable)": "[] introduced concurrentruntimeexception and extended the exception handling methods of concurrentutils to support runtime exceptions, too.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.equals(GenericArrayType,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.parse(String,ParsePosition)": "format.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names: dateutilstest.testlang530 fails for some timezonesadd final modifier to local variables.trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.indexOf(CharSequence,int,int)": "sort members.moving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils classreplacing some of the older code. when performing a mutation operation (even if it's on an immutable by returning a new instance), string should go in and string should come out. when performing a non-mutation operation, charsequence should be passed in. 687moving indexof(string, int) and indexof(string, int, int) over to charsequence. . this, plus the same happening for the string, string, int variant will open up a lot of methods. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.ISO8601TimeZoneStrategy(String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display namesreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/CharSequenceUtils.java@org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(CharSequence,int,int)": "use final.: merged rob's javadoc comments and updated to use code units instead of code points: changed charsequence lastindexof for supplementary characters: fixed charsequenceutils indexof for supplementary chars: fixed formatting on charsequenceutils.javafixed charsequenceutils to check for supplementary charschanged charsequence lastindexof to handle supplementary charactersrefactor magic number into constant.statement unnecessarily nested within else clause.add final modifier to local variables.formattingmoving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils class",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.append(CharSequence)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: avoid string allocation in strbuilder.append(charsequence). this fixes  from github. thanks to mikhail mazurskiy and fabian lange.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(WildcardType)": "validationadd final modifier to local variables.[] vastly expanded typeutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.WeekYear(NumberRule)": ": fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.isNumber()": " fastdateparser does not handle non-gregorian calendars properly applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.StrategyParser(String,Calendar)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.modify(Calendar,int,int)": "add explict default caseadd final modifier to local variables.convert to java 5 enhanced for loops. convert to java 5 enhanced loops. ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.ensureCapacity(int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/RecursiveToStringStyle.java@org.apache.commons.lang3.builder.RecursiveToStringStyle.appendDetail(StringBuffer,String,Object)": ": reflectiontostringbuilder.tostring does not debug 3rd party object fields within 3rd party object. suggested by philip hodges. final patch from thomas neidhart.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.appendDigits(Appendable,int)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.parseDate(String,String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces - dateutilsparsedate uses default locale; add locale support",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.join(char,char,int,int)": "sort members.extract method.add final modifier to local variables.[] stringutils join apis for primitives.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.replaceImpl(int,int,int,String,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/math/Fraction.java@org.apache.commons.lang3.math.Fraction.compareTo(Fraction)": "use build in methods for comparing numerical valuesformat to 120 line length.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.format(Date)": "change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. applying my fix to , and mikael's test case; fixing the fastdateformat to properly include the locale when formatting a date",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.applyRules(Calendar,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: resurrect applyrules(java.util.calendar, java.lang.stringbuffer) for binary compatibilityadd final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.parse(String)": "add final modifier to local variables.format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(Object,Object,Collection)": "more varargs-related updates",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toByte(String,byte)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.fixing crlfsstatement unnecessarily nested within else clause.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/RandomUtils.java@org.apache.commons.lang3.RandomUtils.RandomUtils()": ": new randumutils class. thanks to duncan jones",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.isAllUpperCase(CharSequence)": "sort members.[github] commons-lang pull request : intellij idea refactorings..add final modifier to local variables.change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.appendTo(StringBuffer,Calendar)": "zz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.replace(String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.add(short,int,short)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java@org.apache.commons.lang3.text.ExtendedMessageFormat.getQuotedString(String,ParsePosition,boolean)": "add final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.getDateTimeInstance(int,int,TimeZone)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.TimeZoneNumberRule(boolean,boolean)": "added missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.toBooleanObject(Integer)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.ws",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.MemberUtils.isMatchingMethod(Method,Class)": "removes unnecessary class reference of static method calls which are declared in the same class: add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.appendDigits(StringBuffer,int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java@org.apache.commons.lang3.builder.DiffBuilder.append(String,int,int)": "use validateistrue to validate arguments: there should be a differencebuilder with a reflectiondifferencebuilder implementation",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.append(StringBuffer,String,Object,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/builder/ReflectionDiffBuilder.java@org.apache.commons.lang3.builder.ReflectionDiffBuilder.ReflectionDiffBuilder(T,T,ToStringStyle)": ": add a reflection-based variant of diffbuilder",
  "src/main/java/org/apache/commons/lang3/time/GmtTimeZone.java@org.apache.commons.lang3.time.GmtTimeZone.twoDigits(StringBuilder,int)": "[] timezone.gettimezone() in fastdateparser causes resourcecontention</action>. this .",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.parse(String)": "add final modifier to local variables.format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.format(Calendar,StringBuffer)": "fastdateformat apis that use a stringbuilder: dateformatutils.format does not correctly change calendar timezone in certain situations: unit test fastdateprintertimezonestest needs a timezone setapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.ISO8601TimeZoneStrategy(String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display namesreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.setCalendar(FastDateParser,Calendar,String)": "[] timezone.gettimezone() in fastdateparser causes resourcecontention</action>. this .utc and gmt are the same, so simplify.refactor \"gmt\" magic string.make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.get(Object,int,Object)": ": added get methods to arrayutils",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.append(String,int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/text/StrTokenizer.java@org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(char)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.getDateInstance(int,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.chop(String)": "sort members.add final modifier to local variables.fix pmd issues: \"these nested if statements could be combined\"",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.estimateLength()": " fastdateparser and fastdateprinter support 'x' formatapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/StopWatch.java@org.apache.commons.lang3.time.StopWatch.getNanoTime()": "applying sebb's patch from  - adding isstarted, issuspended and isstopped to stopwatch[] spelling fixes.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.DayInWeekField.appendDigits(Appendable,int)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.equals(Object)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.parseToken(String,int)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java@org.apache.commons.lang3.reflect.FieldUtils.readDeclaredField(Object,String,boolean)": "[] org.apache.commons.lang3.reflect.fieldutils.removefinalmodifier(field) does not clean up after itself.make the readdeclaredfield(final object target, final string fieldname, final boolean forceaccess) impl match its in-line comment and not rely on the default behavior of readfield(field, object).a bit of dog food and a lot of javadoc tweakage[] add fieldutils getdeclaredfields() to return all the fields defined in the given class and super classes.add final modifier to local variables.checkstyle",
  "src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java@org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(int,int,Object,boolean)": "add final modifier to method parameters.more varargs-related updates",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(Object,Object)": ": add bypass option for classes to recursive and reflective equalsbuilderpatch supplied by yathos ug: add support for recursive comparison to equalsbuilderreflectionequals ()minimal clean-ups: remove getter methods, improve javadoc, add unit test for reflectionappend: recursive and reflective equalsbuilder ()patch by yathos ug",
  "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java@org.apache.commons.lang3.StringEscapeUtils.escapeXml11(String)": ": add methods for removing all invalid characters according to xml 1.0 and xml 1.1 in an input string to stringescapeutils. thanks to adam hooper",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.createInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.init()": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.nullToEmpty(String)": "crlf -> lfjavadoc: fix typo but working is still awkward.use isempty() where possible. thanks to james sawle for pointing this out.minor code simplificationadding nulltoempty methods to arrayutils per  and levon karayan's patch. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.setCalendar(FastDateParser,Calendar,String)": "[] timezone.gettimezone() in fastdateparser causes resourcecontention</action>. this .utc and gmt are the same, so simplify.refactor \"gmt\" magic string.make sure lines in files don't have trailing white spaces and remove all trailing white spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .trailing spaces fastdateparser does not handle non-gregorian calendars properly unnecessary ;applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.JsonToStringStyle()": ": add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/text/translate/JavaUnicodeEscaper.java@org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.outsideOf(int,int)": "<action issue=\"\" type=\"fix\">stringescapeutils.escapejava() and escapeecmascript() do not output the escaped surrogate pairs that are java parsable</action>",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.format(Date)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.append(String,Object)": ": avoid string allocation in strbuilder.append(charsequence). this fixes  from github. thanks to mikhail mazurskiy and fabian lange.[] create strbuilder apis similar to string.format(string, object...)",
  "src/main/java/org/apache/commons/lang3/math/Fraction.java@org.apache.commons.lang3.math.Fraction.divideBy(Fraction)": "use validateistrue to validate arguments",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.startsWith(CharSequence,CharSequence)": "sort members.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.init()": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.equals(ParameterizedType,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.format(Date,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.append(StringBuffer,String,int,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.appendIfMissing(String,CharSequence,boolean,CharSequence)": "sort members.applying joanne's subsequent patch from  making appendifmissing use the same logic for null as endswith (by reusing endswith). applying joanne polsky's patch adding appendifmissing/prependifmissing methods to stringutils []",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.DayInWeekField(NumberRule)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.isNumeric(CharSequence)": "sort members.simplify boolean expressioneat own dog food: use stringutils.isempty().add final modifier to local variables.resolving  - changing stringutils.isalpha, isalphanumeric and isnumeric to return false when passed an empty string. documenting this in the changes report and in the upgrade article. also fixing a javadoc c+p error in isnumericspace and isalphanumericspace. change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.WeekYear.newCalendar()": ": fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.lastIndexOf(int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.simpleQuote(StringBuilder,String)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateparser too strict on abbreviated short month symbolsadd final modifier to local variables.format. fastdateparser_timezonestrategytesttesttimezonestrategypattern fails on windows with german localereimplementing 1107",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.getRule(int)": "removes unnecessary class reference of static method calls which are declared in the same classmake sure lines in files don't have trailing white spaces and remove all trailing white spacesreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.setSummaryObjectEndText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.createPattern(StringBuilder)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.estimateLength()": " fastdateparser and fastdateprinter support 'x' formatapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.format(Date)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.stateStrategy(State)": "[github] commons-lang pull request : intellij idea refactorings..add final modifier to local variables.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.WeekYear(NumberRule)": ": fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.parse(String,ParsePosition,Calendar)": "lvar should not hide ivar.add final modifier to local variables.format.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.CopyQuotedStrategy(String)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.getLocaleSpecificStrategy(int,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove unused constructor parameterformat.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display namesrename textstrategy to caseinsensitivetextstrategy per sebb's suggestion[] use the cache in fastdateparser correctly.add final modifier to local variables.tab police fastdateparser could use calendar.getdisplaynames for all text fieldsremove unnecessary keyvalue instances: fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.getOverrideHierarchy(Method,Interfaces)": "remove redundant type arguments.[] get method override hierarchy",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.createPattern(StringBuilder)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.createDouble(String)": "fixing crlfsstatement unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.reverse(float,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.[] add arrayutils.reverse(array, from, to) methods.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategy.getClosingInterval()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/concurrent/Memoizer.java@org.apache.commons.lang3.concurrent.Memoizer.compute(I)": "add final modifier to local variables.: implementation of a memomizer ()changes suggested in https://github.com/apache/commons-lang/pull/80:- tabs to spaces- use @override- remove unused variables- other minimal clean-ups",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.appendValueAsString(StringBuffer,String)": " - jsontostringstyle does not escape double quote in a stringvalue[github] commons-lang pull request : intellij idea refactorings..: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.createPattern(StringBuilder)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java@org.apache.commons.lang3.exception.DefaultExceptionContext.getContextLabels()": "remove redundant type arguments.refactor exceptioncontext and derived. context contract stipulates a sequence of label-value entries with support for multiple entries for the same label.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.format(Date,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isSameLength(short,short)": "crlf -> lfjavadoc: fix typo but working is still awkward.simplify issamelenght implementations by reusing getlength. this also fixes a lot of the useless paranthesis warnings generated by pmd.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.getRule(int)": "removes unnecessary class reference of static method calls which are declared in the same classmake sure lines in files don't have trailing white spaces and remove all trailing white spacesreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.DayInWeekField.format(Calendar,B)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.indexOf(Object,Object)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.appendTo(StringBuffer,Calendar)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/ArchUtils.java@org.apache.commons.lang3.ArchUtils.init_X86_64Bit()": "use final.: add archutils - an utility class for the \"os.arch\" system property ()",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.setFieldNameValueSeparator(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.copy(KeyValue,int,String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/GmtTimeZone.java@org.apache.commons.lang3.time.GmtTimeZone.getRawOffset()": "[] timezone.gettimezone() in fastdateparser causes resourcecontention</action>. this .",
  "src/main/java/org/apache/commons/lang3/text/StrLookup.java@org.apache.commons.lang3.text.MapStrLookup.mapLookup(Map)": "remove redundant type arguments.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.hashCode()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/tuple/MutableTriple.java@org.apache.commons.lang3.tuple.MutableTriple.MutableTriple(L,M,R)": "adding henning's github pull request with a triple implementation. 675",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.parse(FastDateParser,Calendar,String,ParsePosition,int)": "add final modifier to local variables.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.newCalendar()": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shift(char,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.swap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.CheckIntervalData.increment(int)": "flips the order of conditional expressions and 'if' statements whose conditions were negated: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toInt(byte)": ": please add number to byte[] methods. suggested by lilianne e. blaze. final patch from vincent ricard (with thanks to henri yandell).",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.compare(String,String)": ": fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isArrayIndexValid(T,int)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.refactored to generics and added isarrayindexvalid",
  "src/main/java/org/apache/commons/lang3/builder/RecursiveToStringStyle.java@org.apache.commons.lang3.builder.RecursiveToStringStyle.RecursiveToStringStyle()": ": reflectiontostringbuilder.tostring does not debug 3rd party object fields within 3rd party object. suggested by philip hodges. final patch from thomas neidhart.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.getJaroWinklerSimilarity(CharSequence,CharSequence)": "add final modifier to local variables.: wrong name or result of stringutilsgetjarowinklerdistance ()deprecate stringutilsgetjarowinklerdistance and add stringutilsgetjarowinklersimilarity instead",
  "src/main/java/org/apache/commons/lang3/event/EventUtils.java@org.apache.commons.lang3.event.EventUtils.hasMatchingParametersMethod(Method)": "changing eol-style to native.misc. event utils.",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.toInteger(Boolean,int,int,int)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.ws",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeElement(boolean,boolean)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.getInstance(String,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/test/java/org/apache/commons/lang3/test/NotVisibleExceptionFactory.java@org.apache.commons.lang3.test.NotVisibleExceptionFactory.createException(Throwable)": "[] prefer throwable.getcause() in exceptionutils.getcause() ()",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.getDateTimeInstance(int,int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.UnpaddedNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.reverse(boolean,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.[] add arrayutils.reverse(array, from, to) methods.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.parse(FastDateParser,Calendar,String,ParsePosition,int)": "add final modifier to local variables.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.setSummaryObjectEndText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.format(Date,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java@org.apache.commons.lang3.concurrent.InitializationTask.get()": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.append(StringBuffer,String,short,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.throwableOfType(Throwable,Class)": "sort by method name.[] add exceptionutils.throwableoftype(throwable, class) andfriends.",
  "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java@org.apache.commons.lang3.StringEscapeUtils.translate(CharSequence,int,Writer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: numericentityescaper incorrectly encodes supplementary characters. thanks to chris karcher.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.lastIndexOf(double,double,int,double)": "removes unnecessary class reference of static method calls which are declared in the same classcrlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.Iso8601_Rule(int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java@org.apache.commons.lang3.concurrent.BackgroundInitializer.get()": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.format(Date,B)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.parseObject(String,ParsePosition)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesscope of local variabel shift can be narrowerpmd: useless parenthesesformat to 120 line length.removed unnecessary multiplication by one.add final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.appendTo(Appendable,int)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/test/java/org/apache/commons/lang3/CharUtilsPerfRun.java@org.apache.commons.lang3.CharUtilsPerfRun.run()": "fix non-critical typos in comments and javadocfix typos in several local variables",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.append(CharBuffer,int,int)": ": avoid string allocation in strbuilder.append(charsequence). this fixes  from github. thanks to mikhail mazurskiy and fabian lange.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle()": ": add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadIdPredicate.findThreads(ThreadPredicate)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/Functions.java@org.apache.commons.lang3.Functions.run(FailableRunnable)": "functions.java whitspacesreplace tabs with four spaces, as per the project's checkstyle rules.adding the functions class as a helper for dealing with java 8 lambdas.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.removeLastFieldSeparator(StringBuffer)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toPrimitive(Byte,byte)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.getTimeInstance(int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.format(Date,B)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.TimeZoneNameRule(TimeZone,Locale,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.format(long,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateprinter generates date objects wastefullyapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.appendValueAsString(StringBuffer,String)": " - jsontostringstyle does not escape double quote in a stringvalue[github] commons-lang pull request : intellij idea refactorings..: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(ParameterizedType,Class,Map)": "explicit type parameters can be removedremove redundant type arguments.add final modifier to local variables.add final modifier to method parameters.[] vastly expanded typeutils",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.min(byte)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesfixing crlfsstatement unnecessarily nested within else clause. code refactoring in numberutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.equals(Object)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.min(long)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesfixing crlfsstatement unnecessarily nested within else clause. code refactoring in numberutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.getLocale()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadIdPredicate.findThreadsByName(String)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.FastDateFormat(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.printRootCauseStackTrace(Throwable,PrintWriter)": "sort by method name.use validateistrue to validate argumentsadd final modifier to local variables.convert to java 5 enhanced loops. ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.replace(StrMatcher,String,int,int,int)": "add final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.JsonToStringStyle()": ": add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.TwentyFourHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java@org.apache.commons.lang3.time.DateFormatUtils.formatUTC(Date,String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesuse private utc constant to avoid corruption of mutable constant",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shuffle(int)": ": added shuffle methods to arrayutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.DayInWeekField(NumberRule)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.reverse()": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.parseDateStrictly(String,String)": " - dateutilsparsedate uses default locale; add locale supportjavadoc correction",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.append(String,Object)": ": avoid string allocation in strbuilder.append(charsequence). this fixes  from github. thanks to mikhail mazurskiy and fabian lange.[] create strbuilder apis similar to string.format(string, object...)",
  "src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java@org.apache.commons.lang3.concurrent.ConstantInitializer.getObject()": "[] added constantinitializer class",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.hashCode()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java@org.apache.commons.lang3.builder.CompareToBuilder.append(Object,Object,Comparator)": "removes redundant '+' signpmd: remove useless parentheses",
  "src/main/java/org/apache/commons/lang3/ClassPathUtils.java@org.apache.commons.lang3.ClassPathUtils.ClassPathUtils()": ": new class classpathutils with methods for turning fqn into resource path",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.appendln(String,Object)": "[] create strbuilder apis similar to string.format(string, object...)",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.insert(int,float,float)": "use final.remove trailing white spacesadded new vararg methods to insert values into an array at an index.this implements . this commit also deprecates the add() methodsthat inserted a single value into an array at an index.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.parsePattern()": "adjust fastdateformat for java 7 behavior regarding format of the year pattern ().refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.wildcardType()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.PaddedNumberField(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.getInstance(String)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle.java@org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(StringBuffer,String,char)": "multilinerecursivetostringstyle: made private field indent static: multiline recursive to string style. this fixes  from github. thanks to jan mat\u00e8rne.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.compare(String,String)": ": fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.TzInfo(TimeZone,boolean)": ": fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.isJsonObject(String)": "extract logic for checking string representation of objects into separate methods",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.selectNumberRule(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.startsWith(String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.append(CharSequence)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: avoid string allocation in strbuilder.append(charsequence). this fixes  from github. thanks to mikhail mazurskiy and fabian lange.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.insert(int,boolean,boolean)": "use final.remove trailing white spacesadded new vararg methods to insert values into an array at an index.this implements . this commit also deprecates the add() methodsthat inserted a single value into an array at an index.",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toDouble(String,double)": ": add todouble(bigdecimal), todouble(bigdecimal, double)fixing crlfsstatement unnecessarily nested within else clause.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.Range.isOverlappedBy(Range)": "refactor range with lots of new methods",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.readObject(ObjectInputStream)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.FastDateFormat(String,TimeZone,Locale,Date)": " and ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.setArrayEnd(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.createInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.estimateLength()": " fastdateparser and fastdateprinter support 'x' formatapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(Object,int,char)": "reuseadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.WeekYear(NumberRule)": ": fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.ComparableComparator.elementBefore(T)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.abbreviateMiddle(String,String,int)": "sort members.[github] commons-lang pull request : intellij idea refactorings..add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687tab police (and trailing spaces) rename method from truncatemiddle() to abbreviatemiddle()",
  "src/main/java/org/apache/commons/lang3/LocaleUtils.java@org.apache.commons.lang3.SyncAvoid.toLocale(String)": "extract some helper methods to make the code better readableextract method for parsing locales from stringbetter local variable names: localeutilstolocale does not support language followed by un m.49 numeric-3 area code ()pmd: remove useless parenthesesreusestatement unnecessarily nested within else clause.statement unnecessarily nested within else clause.use final consistently. fall through is intentional: wrong locale handling in localeutils.tolocale(). thanks to sergio fern\u00e1ndez: test failure in localeutilstest when building with jdk 8: test failure in localeutilstest when building with jdk 8 - make problem more explicit by checking for empty stringsstatement unnecessarily nested within else clause. localeutils test fails with new locale \"ja_jp_jp_u-ca-japanese\" of jdk7[] localeutils.tolocale does not parse strings starting with an underscore.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.CONST(T)": "make sure placement of curly braces is consistent[] introduce const() methods to prevent javac from inlining constants",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.init()": "add final modifier to local variables.tab police: fastdateparser could use calendar.getdisplaynames for all text fieldsshow where the parsing failed fastdateparser does not handle unterminated quotes correctlytrailing spaces fastdateparser does not handle non-gregorian calendars properlyfix bug in java 7 (locale.tostring() format has changed) fastdateparser does not handle non-gregorian calendars properly applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/CharSequenceUtils.java@org.apache.commons.lang3.CharSequenceUtils.CharSequenceUtils()": "moving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils classjavadoc; move @since; add documented constructor",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.lastIndexOf(StrMatcher,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.getStackTrace(Throwable)": "sort by method name.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.addNamesToKeyValues(List,Map)": ": fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadUtils.findThreads(ThreadGroup,boolean,ThreadPredicate)": "use validateistrue to validate argumentsremove redundant type arguments.fixing crlfsstatement unnecessarily nested within else clause.incorporated feedback from fabian, formatting adjusted, count >> 1 replaced with count / 2incorporated feedback from peteradd threadutils",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.typeVariableToString(TypeVariable)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.strip(String,String)": "sort members.make sure lines in files don't have trailing white spaces and remove all trailing white spaces: add wrap (with string or char) to stringutils. this closes pr  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.getUpperBounds()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.addRegex(FastDateParser,StringBuilder)": " fastdateparser does not handle non-gregorian calendars properly applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.isNumber()": " fastdateparser does not handle non-gregorian calendars properly applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java@org.apache.commons.lang3.concurrent.TimedSemaphore.shutdown()": "[] added timedsemaphore class to concurrent package.",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.boolArrayToShort(boolean,int,short,int,int)": "use better method names. document possible arrayindexoutofboundsexception and stringindexoutofboundsexception.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.isNumber()": " fastdateparser does not handle non-gregorian calendars properly applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.setSizeEndText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.contains(CharSequence,int)": "sort members.moving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils classreplacing some of the older code. when performing a mutation operation (even if it's on an immutable by returning a new instance), string should go in and string should come out. when performing a non-mutation operation, charsequence should be passed in. 687moving contains(string, int) over to charsequence. 687",
  "src/main/java/org/apache/commons/lang3/text/CompositeFormat.java@org.apache.commons.lang3.text.CompositeFormat.format(Object,StringBuffer,FieldPosition)": "add final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.appendDigits(StringBuffer,int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.max(short,short,short)": "fixing crlfsstatement unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.estimateLength()": " fastdateparser and fastdateprinter support 'x' formatapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.getDateTimeInstance(int,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.getImplicitUpperBounds(WildcardType)": "validation",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.getStrategy(String)": "document intentional drop-thruapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.PaddedNumberField(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.copy(KeyValue,int,String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeAll(T,int)": ": arrayutils.removeall(object array, int... indices) should do the clone, not its callers ()crlf -> lfjavadoc: fix typo but working is still awkward.[] complement arrayutils.addall() variants with by-index and by-value removal methods",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.append(StrBuilder)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.getInstance(String,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.appendAll(Object)": "convert to java 5 enhanced loops. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.parse(String,ParsePosition)": "format.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TzInfo.getCache(int)": "remove redundant type arguments.",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.ProxyInvocationHandler.EventListenerSupport(Class)": "changing eol-style to native.misc. event utils.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.append(StrBuilder)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.nullToEmpty(Boolean)": "crlf -> lfjavadoc: fix typo but working is still awkward.use isempty() where possible. thanks to james sawle for pointing this out.minor code simplificationadding nulltoempty methods to arrayutils per  and levon karayan's patch. ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.ArrayUtils()": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.Executable.getObjectTransformationCost(Class,Class)": ": add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.modify(int)": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.InitStripAccents.stripAccents(String)": " use iod for stripaccent init",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.CharacterLiteral(char)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.getMethodsWithAnnotation(Class,Class)": ": adds methodutilsfindannotation and extend methodutilsgetmethodswithannotation for non-public, super-class and interface methods (): provide methods to retrieve all fields/methods annotated with a specific type. thanks to alexander m\u00fcller.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.format(Date,B)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.setSizeStartText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TzInfo.literal()": "add final modifier to local variables.pmd: these nested if statements could be combined",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.getTimeInstance(int,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.getTimeInstance(int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.reflectionAppendArrayDetail(StringBuffer,String,Object)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.MultiLineToStringStyle()": "deprecate systemutilsline_separator in favor of java.lang.systemlineseparator",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java@org.apache.commons.lang3.builder.HashCodeBuilder.isRegistered(Object)": "add final modifier to local variables.[] clear threadlocal for hashcodebuilder as well",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.createPattern(String)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.CopyQuotedStrategy(String)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display namesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.modify(Calendar,int,ModifyType)": "removes unnecessary class reference of static method calls which are declared in the same classmake sure lines in files don't have trailing white spaces and remove all trailing white spacespmd: useless parenthesesreplaced private integer constants with private static enum.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.TzInfo(TimeZone,boolean)": ": fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.TimeZoneNumberRule(boolean)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.isCheckIntervalFinished(EventCountCircuitBreaker,CheckIntervalData,long)": "add final modifier to method parameters.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.lastIndexOf(char,char,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.equals(Object)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java@org.apache.commons.lang3.reflect.FieldUtils.writeField(Object,String,Object,boolean)": "make the write*field impl match its in-line comment and not rely on the default behavior of writefield(field,target,value).a bit of dog food and a lot of javadoc tweakage[] add fieldutils getdeclaredfields() to return all the fields defined in the given class and super classes.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableShort.java@org.apache.commons.lang3.mutable.MutableShort.incrementAndGet()": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.isInstanceOf(Class,Object)": "[github] commons-lang pull request : intellij idea refactorings..add todos[] include the actual type in the validate.isinstance and isassignablefrom exception messages.javadocfix brace positionsapplying valentin rocher's patch from , adding isinstanceof and isassignablefrom methods. ",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.notNaN(double)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/text/StrMatcher.java@org.apache.commons.lang3.text.TrimMatcher.stringMatcher(String)": "eat own dog food: call stringutils.isempty().",
  "src/main/java/org/apache/commons/lang3/math/Fraction.java@org.apache.commons.lang3.math.Fraction.getFraction(double)": "format to 120 line length.add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.getNextStrategy()": "add final modifier to local variables.format.statement unnecessarily nested within else clause.\\refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.CheckIntervalData.nextCheckIntervalData(int,CheckIntervalData,State,long)": "add final modifier to method parameters.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.readObject(ObjectInputStream)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.AlwaysTruePredicate.findThreadGroups(ThreadGroupPredicate)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.splitWorker(String,char,boolean)": "sort members.remove redundant type arguments.add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java@org.apache.commons.lang3.builder.CompareToBuilder.append(float,float)": "removes redundant '+' signpmd: remove useless parentheses",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.getFragmentInMinutes(Date,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesmake use of existing timeunit class to manage time units.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.PaddedNumberField(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.readObject(ObjectInputStream)": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.isSameDay(Date,Date)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.appendWithSeparators(Iterable,String)": ": update java requirement from java 6 to 7replace usage of deprecated objectutilstostring with objectstostring: fix deprecation warningsadd final modifier to local variables.eat own dog food: separator == null ? \"\" : separator->objectutils.tostring(separator)remove superfluous parens.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.CharacterLiteral(char)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyClosed.incrementAndCheckState()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.validIndex(T,int,String,Object)": "removes unnecessary class reference of static method calls which are declared in the same class",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.lastIndexOf(String,char)": "use index_not_found instead of magic number.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.format(long)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.[] fastdateformat generates date objects wastefully.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.right(String,int)": "sort members.rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.append(CharBuffer)": ": avoid string allocation in strbuilder.append(charsequence). this fixes  from github. thanks to mikhail mazurskiy and fabian lange.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableLong.java@org.apache.commons.lang3.mutable.MutableLong.addAndGet(long)": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.CONST(char)": "make sure placement of curly braces is consistent[] introduce const() methods to prevent javac from inlining constants",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.getPattern()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.isEquals()": "checkstyle and trailing spaces.adding builder interface, and refactoring the builder classes and basicthreadfactory to implement this interface. patch from michael wooten in 601",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.getRootCause(Throwable)": "sort by method name.: exceptionutilsgetrootcause(throwable t) should return t if no lower level cause existsthis makes the behavior of getrootcause consistent with getrootcausemessage and getrootcausestacktrace.remove redundant casts ()remove redundant casts throughout the codebase to make it cleaner and easier to read.add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/exception/ContextedException.java@org.apache.commons.lang3.exception.ContextedException.addContextValue(String,Object)": "refactor exceptioncontext and derived. context contract stipulates a sequence of label-value entries with support for multiple entries for the same label.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,int,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.append(StringBuffer,String,byte,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.readObject(ObjectInputStream)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.isAssignable(Type,ParameterizedType,Map)": ": typeutils.isassignable throws nullpointerexception when fromtype has type variables and totype generic superclass specifies type variable ()",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.getMaxLengthEstimate()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.estimateLength()": " fastdateparser and fastdateprinter support 'x' formatapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(Object,Object,boolean)": "more varargs-related updates",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.toString()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/builder/RecursiveToStringStyle.java@org.apache.commons.lang3.builder.RecursiveToStringStyle.appendDetail(StringBuffer,String,Collection)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: reflectiontostringbuilder.tostring does not debug 3rd party object fields within 3rd party object. suggested by philip hodges. final patch from thomas neidhart.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.hashCode(Object)": "crlf -> lfjavadoc: fix typo but working is still awkward.[] revert deletion of arrayutils.hashcode()",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.Builder.BasicThreadFactory(Builder)": "don't need internal ivar name for a boolean to carry a \"flag\" postfix.don't need internal ivar name for a boolean to carry a \"flag\" postfix.adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.getDateTimeInstance(int,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.format(Calendar,StringBuffer)": "4fastdateformat apis that use a stringbuilder: dateformatutils.format does not correctly change calendar timezone in certain situations: unit test fastdateprintertimezonestest needs a timezone setapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.EventCountCircuitBreaker(int,long,TimeUnit)": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.parsePattern()": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove redundant type arguments.: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y') partial: implement format 'u' for fastdateformat, day number of weekzz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.EventListenerSupport.initializeTransientFields(Class,ClassLoader)": "add final modifier to local variables.document some @suppresswarning annotationsallow subclass custom invocation handlingadd serialization support to eventlistenersupport",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.estimateLength()": " fastdateparser and fastdateprinter support 'x' formatapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.TwoDigitMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.getPattern()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java@org.apache.commons.lang3.reflect.FieldUtils.writeDeclaredStaticField(Class,String,Object,boolean)": "make the write*field impl match its in-line comment and not rely on the default behavior of writefield(field,target,value).a bit of dog food and a lot of javadoc tweakage[] add fieldutils getdeclaredfields() to return all the fields defined in the given class and super classes.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.WildcardTypeImpl(Type,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.StringLiteral(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isSameLength(double,double)": "crlf -> lfjavadoc: fix typo but working is still awkward.simplify issamelenght implementations by reusing getlength. this also fixes a lot of the useless paranthesis warnings generated by pmd.",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.byteToHex(byte,int,String,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesscope of local variabel shift can be narrowerformat to 120 line length.add final modifier to local variables.use better method names. document possible arrayindexoutofboundsexception and stringindexoutofboundsexception.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.readObject(ObjectInputStream)": " and trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.getTimeInstance(int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.changeStateAndStartNewCheckInterval(State)": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.getDateInstance(int,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyOpen.open()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.Builder.initializeThread(Thread)": "rename parameter 't' to 'thread'.add final modifier to local variables.explicit boxingadding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.CONST(char)": "make sure placement of curly braces is consistent[] introduce const() methods to prevent javac from inlining constants",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.readObject(ObjectInputStream)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toString(Object,String)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java@org.apache.commons.lang3.text.translate.EntityArrays.ISO8859_1_ESCAPE()": "make sure placement of curly braces is consistent",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.defaultString(String)": "sort members.: defaultstring(str) reuses defaultstring(str, defaultstr)",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.boolsToByte(boolean,int,byte,int,int)": "code clean-up for checkstyle.simplify expressions again.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.abbreviate(String,int)": "sort members.: stringutilsabbreviate should support 'custom ellipses' parameter ()rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.append(StringBuilder,int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.format(long,B)": ": fastdateprinter generates date objects wastefullyfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.format(Date,StringBuffer)": "change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.append(StringBuffer,String,float,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.max(double,double,double)": "fixing crlfsstatement unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.applyRulesToString(Calendar)": "fastdateformat apis that use a stringbuilderrefactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.join(Iterator,char)": "sort members.[] stringutils.join() with support for list<?> withconfigurable start/end indices. extract constant.[] stringutils.join() with support for list<?> withconfigurable start/end indices. reuse constant.[github] commons-lang pull request : intellij idea refactorings..: update java requirement from java 6 to 7replace usage of deprecated objectutilstostring with objectstostringuse final consistently. : fix deprecation warningsadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.toStringBuilder()": "strbuilder implements builder; provide tostringbuilder as tostringbuffer",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.getInstance()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.format(Date,B)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.getMaxLengthEstimate()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.toStringOnOff(Boolean)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.ws",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.containsVariableTypeSameParametrizedTypeBound(TypeVariable,ParameterizedType)": " - stackoverflowerror on typeutils.tostring(...) for a generic return type of enum.valueof ()",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.applyRules(Calendar,StringBuffer)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.toString()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.replace(String,int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.Iso8601_Rule.getRule(int)": "removes unnecessary class reference of static method calls which are declared in the same classmake sure lines in files don't have trailing white spaces and remove all trailing white spacesreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.FastDateParser(String,TimeZone,Locale,Date)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.make sure placement of curly braces is consistent",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.InitStripAccents.join(Object,char,int,int)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.replace(String,String,String,int,boolean)": ": improve stringutilsreplace throughput ()motivation:`stringutilsreplace` uses `substring` to append a string region into astringbuilder. this causes useless copies, as `stringbuilderappend`can take start and end indexes.modification:use proper `stringbuilderappend` [overload](https://docs.oracle.com/javase/8/docs/api/java/lang/stringbuilder.htmlappend-java.lang.charsequence-int-int-).result:based on benchmark from [jooq\u2019s post](https://blog.jooq.org/2017/10/11/benchmarking-jdk-string-replace-vs-apache-commons-stringutils-replace):benchmark mode cnt score error unitsstringreplacebenchmark.testfaststringreplacelongstringonematch thrpt 217546534,219 \u00b1 145523,962 ops/sstringreplacebenchmark.teststringutilsreplacelongstringonematch thrpt21 7353512,552 \u00b1 124498,228 ops/sstringreplacebenchmark.testfaststringreplacelongstringseveralmatchesthrpt 21 5077255,810 \u00b1 62358,937 ops/sstringreplacebenchmark.teststringutilsreplacelongstringseveralmatchesthrpt 21 4108357,612 \u00b1 92909,038 ops/sstringreplacebenchmark.testfaststringreplaceshortstringonematch thrpt21 15911221,949 \u00b1 541064,693 ops/sstringreplacebenchmark.teststringutilsreplaceshortstringonematch thrpt21 10677897,475 \u00b1 491091,973 ops/sstringreplacebenchmark.testfaststringreplaceshortstringseveralmatchesthrpt 21 9271742,251 \u00b1 220150,121 ops/sstringreplacebenchmark.teststringutilsreplaceshortstringseveralmatchesthrpt 21 6158829,188 \u00b1 99637,607 ops/smerge branch '': add stringutilsremoveignorecasepatch by gokul nanthakumar c",
  "src/main/java/org/apache/commons/lang3/concurrent/AtomicInitializer.java@org.apache.commons.lang3.concurrent.AtomicInitializer.get()": ": added atomicinitializer class. introduced new concurrentinitializer interface which is now implemented by all all initializer classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.parsePattern()": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove redundant type arguments.: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y') partial: implement format 'u' for fastdateformat, day number of weekzz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/SystemUtils.java@org.apache.commons.lang3.SystemUtils.isOSMatch(String,String,String,String)": ": make logic for comparing os versions in systemutils smarterreuse isosnamematch- fix () systemutils.getjavaversionasfloat throws stringindexoutofboundsexception on android runtime/dalvik vm- refactor for unit testing.- remove odd test code which is copy and pasted from systemutils, which therefore does not test anything.",
  "src/main/java/org/apache/commons/lang3/CharUtils.java@org.apache.commons.lang3.CharUtils.isAsciiNumeric(char)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.TwoDigitYearField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.readObject(ObjectInputStream)": " and trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shuffle(Object)": ": added shuffle methods to arrayutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.format(Calendar)": "fastdateformat apis that use a stringbuilderapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toObject(double)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.trim()": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.format(Date,StringBuffer)": "change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.swap(byte,int,int,int)": "add final modifier to local variables.better javadoc for arrayutils.swap variantscrlf -> lfjavadoc: fix typo but working is still awkward.merge branch '': inconsistent behavior of swap for malformed inputs. thanksto adrian ber.consistent treatment for negative indices for swap methodexamples added in javadoctabs replaced by spacesnew tests addedswap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.setFieldSeparator(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.register(Object)": "remove redundant type arguments.add final modifier to local variables.promote uniformity between branches by using registry accessorunused imports + uh, why would you synchronize access to a threadlocal?  :p[] clear threadlocal recursion registry (compatibly with existing tests, first pass)",
  "src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java@org.apache.commons.lang3.mutable.MutableDouble.getValue()": "use internal java's number caches instead creating new objects:- use more efficient integer cache: use \"integer.valueof(int)\" instead of \"new integer(int)\".- use more efficient long cache: use \"long.valueof(int)\" instead of \"new long(long)\".- use more efficient short cache: use \"short.valueof(int)\" instead of \"new short(short)\".in java version 1.6.0_24 (vendor: sun microsystems inc.), float and double do not implement caches, but i've made the same changes for consistency and future proofing.- use \"double.valueof(int)\" instead of \"new double(double)\".- use \"float.valueof(int)\" instead of \"new float(float)\".",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shuffle(int,Random)": ": added shuffle methods to arrayutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.selectNumberRule(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.indexOf(char,char)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.createKeyValues(List)": ": fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.abbreviate(CharSequence,int)": "moving abbreviate + abbreviatemiddle to charsequences",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.createPattern(StringBuilder)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.createPattern(String)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyClosed.increment(int)": "flips the order of conditional expressions and 'if' statements whose conditions were negated: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(StringBuilder,String,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.append(boolean,boolean)": "use not bool instead of bool == false",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toObject(short)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/text/StrMatcher.java@org.apache.commons.lang3.text.NoMatcher.stringMatcher(String)": "eat own dog food: call stringutils.isempty().",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.ordinalIndexOf(CharSequence,CharSequence,int)": "sort members.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.parsePattern()": "adjust fastdateformat for java 7 behavior regarding format of the year pattern ().refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java@org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(int,int,Object)": "more varargs-related updates",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.init()": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.lastIndexOf(long,long,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.setArrayEnd(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.CharacterLiteral(char)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.getCanonicalName(Object)": "[] add methods to classutils to get various forms of classnames in a null-safe manner",
  "src/main/java/org/apache/commons/lang3/tuple/MutablePair.java@org.apache.commons.lang3.tuple.MutablePair.emptyArray()": "[] add empty_array constants to classes inorg.apache.commons.lang3.tuple",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.printRootCauseStackTrace(Throwable,PrintStream)": "sort by method name.use validateistrue to validate argumentsadd final modifier to local variables.convert to java 5 enhanced loops. ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.setSummaryObjectStartText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.format(Date,StringBuffer)": "change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategy.EventCountCircuitBreaker(int,long,TimeUnit,int,long,TimeUnit)": "add final modifier to method parameters.remove redundant type arguments.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.typeVariableToString(TypeVariable)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.setContentStart(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.addAll(short,short)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.getStackFrames(Throwable)": "sort by method name.",
  "src/main/java/org/apache/commons/lang3/LocaleUtils.java@org.apache.commons.lang3.LocaleUtils.toLocale(String)": "extract some helper methods to make the code better readableextract method for parsing locales from stringbetter local variable names: localeutilstolocale does not support language followed by un m.49 numeric-3 area code ()pmd: remove useless parenthesesreusestatement unnecessarily nested within else clause.statement unnecessarily nested within else clause.use final consistently. fall through is intentional: wrong locale handling in localeutils.tolocale(). thanks to sergio fern\u00e1ndez: test failure in localeutilstest when building with jdk 8: test failure in localeutilstest when building with jdk 8 - make problem more explicit by checking for empty stringsstatement unnecessarily nested within else clause. localeutils test fails with new locale \"ja_jp_jp_u-ca-japanese\" of jdk7[] localeutils.tolocale does not parse strings starting with an underscore.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.FastDateParser(String,TimeZone,Locale)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/event/EventUtils.java@org.apache.commons.lang3.event.EventBindingInvocationHandler.addEventListener(Object,Class,L)": "add final modifier to local variables.checkstylefix brace positionscompiler/generics warnings & a typoimproving test coverage.changing eol-style to native.misc. event utils.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.toCharArray()": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.StrategyParser(String,Calendar)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isEmpty(Object)": "crlf -> lfjavadoc: fix typo but working is still awkward.simplify isempty be reusing getlengths/if (foo) { return true; } return false;/return foo;/g",
  "src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java@org.apache.commons.lang3.time.DateFormatUtils.formatUTC(Date,String,Locale)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesuse private utc constant to avoid corruption of mutable constant",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shift(float,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.swap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.FastDateParser(String,TimeZone,Locale)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names: dateutilstest.testlang530 fails for some timezonesrestore binary compartibilitytrailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.identityToString(Appendable,Object)": "refactor magic char.better exception message.use validatenotnull instead of \"throw new nullpointerexception\" add objectutils.toidentitystring methods that support stringbuilder, strbuilder, and appendable",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.firstNonNull(T)": ": added methods to objectutils class to check for null elements in the array ()add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.getInstance(String,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.TwentyFourHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/CharUtils.java@org.apache.commons.lang3.CharUtils.toIntValue(Character,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule(TimeZone,Locale,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces fastdateformat's \"z\" pattern does not respect timezone of calendar instances passed to format()applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeAll(double,int)": ": arrayutils.removeall(object array, int... indices) should do the clone, not its callers ()crlf -> lfjavadoc: fix typo but working is still awkward.[] complement arrayutils.addall() variants with by-index and by-value removal methods",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.AlwaysTruePredicate.findThreadGroupsByName(String)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.WeekYear.format(Date,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.splitByCharacterType(String)": "sort members.",
  "src/main/java/org/apache/commons/lang3/Functions.java@org.apache.commons.lang3.Functions.test()": "adding the functions class as a helper for dealing with java 8 lambdas.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.removeLastFieldSeparator(StringBuffer)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shuffle(short)": ": added shuffle methods to arrayutils",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.appendSuper(boolean)": "use not bool instead of bool == false",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.InitStripAccents.substringAfterLast(String,String)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.equals(Object)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.applyRules(Calendar,StringBuffer)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.appendFixedWidthPadRight(Object,int,char)": "reuseadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.setContentEnd(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toByteArray(int)": ": please add number to byte[] methods. suggested by lilianne e. blaze. final patch from vincent ricard (with thanks to henri yandell).",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.setContentStart(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.setValueDelimiter(String)": "eat own dog food: use stringutils.isempty().[] strsubstitutor now supports the declaration of default values for the variables to be replaced. thanks to woonsan ko for the patch.",
  "src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java@org.apache.commons.lang3.reflect.FieldUtils.readField(Object,String,boolean)": "[] org.apache.commons.lang3.reflect.fieldutils.removefinalmodifier(field) does not clean up after itself.make the readdeclaredfield(final object target, final string fieldname, final boolean forceaccess) impl match its in-line comment and not rely on the default behavior of readfield(field, object).a bit of dog food and a lot of javadoc tweakage[] add fieldutils getdeclaredfields() to return all the fields defined in the given class and super classes.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.indexOfThrowable(Throwable,Class)": "sort by method name.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.equals(Type,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.readObject(ObjectInputStream)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.getInstance()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.format(long,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateprinter generates date objects wastefullyapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/Diff.java@org.apache.commons.lang3.builder.Diff.toString()": ": there should be a differencebuilder with a reflectiondifferencebuilder implementation",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.DayInWeekField(NumberRule)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.clone(T)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/EnumUtils.java@org.apache.commons.lang3.EnumUtils.getEnumMap(Class)": "remove redundant type arguments.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isSorted(long)": "formatting fixes perhttps://patch-diff.githubusercontent.com/raw/apache/commons-lang/pull/128.diffcrlf -> lfjavadoc: fix typo but working is still awkward. - add issorted() to arrayutils. patch supplied by james sawle.  in github.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.FastDateParser(String,TimeZone,Locale,Date)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.make sure placement of curly braces is consistent: dateutilstest.testlang530 fails for some timezonesreplace tabs with whitespaces and ",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object,boolean,String)": "fix whitespaces, add missing @since tag: enhance methodutils to allow invocation of private methods ()",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.AlwaysTruePredicate.NamePredicate(String)": "use validateistrue to validate argumentsfixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.count(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.createKeyValues(List)": ": fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/arch/Processor.java@org.apache.commons.lang3.arch.Processor.is64Bit()": ": add archutils - an utility class for the \"os.arch\" system property ()",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TzInfo.compare(String,String)": ": fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.FastDateParser(String,TimeZone,Locale)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java@org.apache.commons.lang3.concurrent.ConcurrentUtils.createIfAbsent(ConcurrentMap,K,ConcurrentInitializer)": "add final modifier to local variables.add final modifier to method parameters.[] added support for concurrentmap.putifabsent() to concurrentutils.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.equals(Object)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.appendSeparator(String,String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.readObject(ObjectInputStream)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.getLocale()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.format(long)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.[] fastdateformat generates date objects wastefully.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.appendWithSeparators(Iterator,String)": ": update java requirement from java 6 to 7replace usage of deprecated objectutilstostring with objectstostring: fix deprecation warningseat own dog food: separator == null ? \"\" : separator->objectutils.tostring(separator)remove superfluous parens.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.appendAll(Iterable)": "add final modifier to local variables.support varargs in strbuilder.appendall(); also convert iterable form of method to use enhanced for loop",
  "src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java@org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(Object,Object,Class,CompareToBuilder,boolean,String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacespmd: remove useless parenthesesuse not string.contains instead of indexof == -1add final modifier to local variables.add final modifier to method parameters.replacing the creation of a list in the core of each builder class to test contains on the excludefields with a call to arrayutils.contains. reported by anthony whitford in 575",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.appendFieldStart(StringBuffer,String)": " - jsontostringstyle does not escape string namesjsontostringstyle: improve private constant name and remove wrong comment: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.appendEnd(StringBuffer,Object)": "[github] commons-lang pull request : intellij idea refactorings..",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.splitPreserveAllTokens(String,String,int)": "sort members.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.format(long,B)": ": fastdateprinter generates date objects wastefullyfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle.java@org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.spacer(int)": "add final modifier to local variables.: multiline recursive to string style. this fixes  from github. thanks to jan mat\u00e8rne.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.getFieldWidth()": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java@org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.getTaskCount()": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.format(long)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.[] fastdateformat generates date objects wastefully.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.getClass(String,boolean)": "add final modifier to local variables.remove dead space.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.applyRules(Calendar,B)": "add final modifier to local variables.1154fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.isRegistered(Object)": "add final modifier to local variables.[] part 2: refactor tostringstyle and tostringbuildertest to verify that we are unsetting the registry when no longer needed",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.appendEnd(StringBuffer,Object)": "[github] commons-lang pull request : intellij idea refactorings..",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.StrategyParser(String,Calendar)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.NumberUtils()": "fixing crlfsstatement unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.indexOfType(Throwable,Class)": "sort by method name.",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.intToBytes(int,int,byte,int,int)": "code clean-up for checkstyle.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java@org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(T,ToStringStyle,boolean,boolean,boolean,Class)": "use final.: add null filter to reflectiontostringbuilderfix/add since javadoc tags, fix checkstyle violations and do other small clean-ups.merge branch '' of https://github.com/markdacek/commons-lang: added isexcludenullvalues to reflectiontostringbuilder and test",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char)": "restore previous behavior that allows function results (arrays of booleans) to be modified.format to 120 line length.refactor commons constants (no need to generate new arrays on every call).",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.appendTo(Appendable,int)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.setContentStart(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/Functions.java@org.apache.commons.lang3.Functions.rethrow(Throwable)": "functions.java whitspacesreplace tabs with four spaces, as per the project's checkstyle rules.adding the functions class as a helper for dealing with java 8 lambdas.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.TzInfo(TimeZone,boolean)": ": fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.build()": "strbuilder implements builder; provide tostringbuilder as tostringbuffer",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyClosed.CheckIntervalData(int,long)": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.applyRules(Calendar,StringBuffer)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.replaceFirst(String,String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.getTimeInstance(int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.EqualsBuilder()": "redundant specification of type arguments.: add bypass option for classes to recursive and reflective equalsbuilderpatch supplied by yathos ug",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.newCalendar()": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.add(double,int,double)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.remove(int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/CharUtils.java@org.apache.commons.lang3.CharUtils.toString(Character)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toObject(char)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.parsePattern()": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove redundant type arguments.: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y') partial: implement format 'u' for fastdateformat, day number of weekzz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.getFragment(Calendar,int,int)": ": dateutils.getfragmentindays(date, calendar.month) returns wrong days, reported by jay xu.add explict default case: fragments are wrong by 1 day when using fragment year or month - applying patch provided by sebastian g\u00f6tz, several tests now fail because of wrong assertions, will fix them in a separate commitadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java@org.apache.commons.lang3.builder.DiffBuilder.validateFieldNameNotNull(String)": "use validateistrue to validate arguments",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.getLocaleSpecificStrategy(int,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove unused constructor parameterformat.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.getTimeInstance(int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/LocaleUtils.java@org.apache.commons.lang3.LocaleUtils.localeLookupList(Locale,Locale)": "replaces 'size() == 0' and 'length() == 0' with 'isempty()'[github] commons-lang pull request : intellij idea refactorings..remove redundant type arguments.reuseadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.greater(long,long,String,Object)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java@org.apache.commons.lang3.time.DateFormatUtils.formatUTC(long,String)": "use private utc constant to avoid corruption of mutable constant",
  "src/main/java/org/apache/commons/lang3/mutable/MutableBoolean.java@org.apache.commons.lang3.mutable.MutableBoolean.compareTo(MutableBoolean)": "pmd: useless parentheses.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.containsAny(String,char)": "https://issues.apache.org/jira/browse/ stringutils methods do not handle unicode 2.0+ supplementary characters correctly.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.compare(String,String)": "merge branch 'fix-': add compare methods in stringutilsthis  from github. add null safe compare methods in stringutils :  - stringutils.compare(string str1, string str2);  - stringutils.compare(string str1, string str2, boolean nullisless);  - stringutils.compareignorecase(string str1, string str2);  - stringutils.compareignorecase(string str1, string str2, boolean nullisless);",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.upperCase(String)": "sort members.rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.reverse(float)": "crlf -> lfjavadoc: fix typo but working is still awkward.[] add arrayutils.reverse(array, from, to) methods.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.appendTo(StringBuffer,Calendar)": "zz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.join(short,char,int,int)": "sort members.extract method.add final modifier to local variables.[] stringutils join apis for primitives.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.WeekYear.getRule(int)": "removes unnecessary class reference of static method calls which are declared in the same classmake sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.parsePattern()": "adjust fastdateformat for java 7 behavior regarding format of the year pattern ().refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.matchesPattern(CharSequence,String)": "[github] commons-lang pull request : intellij idea refactorings..add todosjavadocfix brace positionsapplying valentin rocher's patch to , adding new regexp and in range methods to validate",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.rightString(int)": "reuse",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.containsTypeVariables(Type)": "removes unnecessary class reference of static method calls which are declared in the same classuse final consistently. [] new type util features",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(Class,Class)": ": add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.beanutils-381 getmatchingaccessiblemethod does not correctly handle inheritance and method overloading - thanks to todd nine for the patchremove pre java 5 workaround",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.replaceIn(StringBuffer,int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.ceiling(Date,int)": "use validateistrue to validate argumentsreplaced private integer constants with private static enum.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.getDateTimeInstance(int,int,TimeZone)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.identityToString(StringBuffer,Object)": "[] objectutils.identitytostring(object) and friends shouldallocate builders and buffers with a sizerefactor magic char.better exception message.use validatenotnull instead of \"throw new nullpointerexception\" add objectutils.toidentitystring methods that support stringbuilder, strbuilder, and appendable",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.appendDisplayNames(Calendar,Locale,int,StringBuilder,Map)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.MultiLineToStringStyle()": "deprecate systemutilsline_separator in favor of java.lang.systemlineseparator",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.greater(double,double,String,Object)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.getDateTimeInstance(int,int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/EnumUtils.java@org.apache.commons.lang3.EnumUtils.isValidEnum(Class,String)": ": enumutils.getenumignorecase and isvalidenumignorecase methods added ()add final modifier to local variables.javadoc and clarify null handling",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.getRule(int)": "removes unnecessary class reference of static method calls which are declared in the same classmake sure lines in files don't have trailing white spaces and remove all trailing white spacesreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.findRecursiveTypes(ParameterizedType)": "deletes redundant 'new' expression in constant array creationuse final. - stackoverflowerror on typeutils.tostring(...) for a generic return type of enum.valueof ()",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.deleteWhitespace(String)": "sort members.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.setLength(int)": ": add nul byte to charutils. thanks to beluga behr.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java@org.apache.commons.lang3.builder.DiffBuilder.DiffBuilder(Object,Object,ToStringStyle)": ": add option to disable the objectstriviallyequal test in diffbuilder. this fixes  from github. thanks to jonathan baker.rename to avoid clashing with parameter names: there should be a differencebuilder with a reflectiondifferencebuilder implementation",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.FastDateFormat(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.hashCode()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.createInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.hexDigitToBools(char)": "revert 1391258 by veto of sebb.use conversion tables for boolean arrays.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TzInfo.ISO8601TimeZoneStrategy(String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.indexOf(float,float,int)": "removes unnecessary class reference of static method calls which are declared in the same classcrlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.getFragment(Date,int,TimeUnit)": "use validateistrue to validate arguments",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.reverse(double,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.[] add arrayutils.reverse(array, from, to) methods.",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.shortToBytes(short,int,byte,int,int)": "code clean-up for checkstyle.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.getInstance(String,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.getFuzzyDistance(CharSequence,CharSequence,Locale)": "sort members.use final consistently. : add fuzzy string matching logic to stringutils. this also  from github. thanks to ben ripkens.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.append(StringBuilder)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.<action issue=\"\" type=\"add\">strbuilder should support stringbuilder as an input parameter</action>",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.appendTo(Appendable,int)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.format(Object)": "fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.endsWith(String)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,TypeVariable,Map)": "add final modifier to local variables.add final modifier to method parameters.[] vastly expanded typeutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.compare(Map,Map)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.applyRules(Calendar,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: resurrect applyrules(java.util.calendar, java.lang.stringbuffer) for binary compatibilityadd final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/mutable/MutableFloat.java@org.apache.commons.lang3.mutable.MutableFloat.compareTo(MutableFloat)": "pmd: useless parentheses.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.append(StringBuffer,String,int,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java@org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(String,ParsePosition)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.split(String,char)": "sort members.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.isJsonArray(String)": ": fix logic in isjsonarray method of jsontostringstyleextract logic for checking string representation of objects into separate methods",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.NoClassNameToStringStyle()": ": add noclassnametostringstyle implementation of tostringstyle. this  from github. thanks to innokenty shuvalov.",
  "src/main/java/org/apache/commons/lang3/CharSequenceUtils.java@org.apache.commons.lang3.CharSequenceUtils.toCharArray(CharSequence)": "statement unnecessarily nested within else clause.add final modifier to local variables.formattingmoving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils class",
  "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java@org.apache.commons.lang3.text.translate.EntityArrays.BASIC_UNESCAPE()": "make sure placement of curly braces is consistent",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.equals(Type,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.min(byte,byte,byte)": "fixing crlfsstatement unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(List,List)": "sort by method name.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.getImplicitLowerBounds(WildcardType)": "validation",
  "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java@org.apache.commons.lang3.text.translate.NumericEntityEscaper.outsideOf(int,int)": "reverting r1090111 - moving the text.translate escapers back from using range to replicating parts of the range api. see the list for details ('unnecessary boxing in stringescapeutils etc'), the move to range was an uncomfortable fit. ",
  "src/main/java/org/apache/commons/lang3/CharUtils.java@org.apache.commons.lang3.CharUtils.isAscii(char)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.readObject(ObjectInputStream)": " and trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.nullToEmpty(Integer)": "crlf -> lfjavadoc: fix typo but working is still awkward.use isempty() where possible. thanks to james sawle for pointing this out.minor code simplificationadding nulltoempty methods to arrayutils per  and levon karayan's patch. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.FastDatePrinter(String,TimeZone,Locale)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.WeekYear(NumberRule)": ": fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.and(boolean)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.add final modifier to local variables.[] add booleanutils.and/or varargs methods to complement xor",
  "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java@org.apache.commons.lang3.text.translate.NumericEntityEscaper.NumericEntityEscaper(int,int,boolean)": "reverting r1090111 - moving the text.translate escapers back from using range to replicating parts of the range api. see the list for details ('unnecessary boxing in stringescapeutils etc'), the move to range was an uncomfortable fit. ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.InitStripAccents.abbreviate(String,int,int)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.TimeZoneNumberRule(boolean,boolean)": "added missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.join(Object,String,int,int)": "extract method.add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)applying ilya's patch from  fixing an npe when tostring returns null",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.TimeZoneNameRule(TimeZone,Locale,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.TwentyFourHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/RandomUtils.java@org.apache.commons.lang3.RandomUtils.nextFloat()": "add sugar to randomiutils",
  "src/main/java/org/apache/commons/lang3/text/StrLookup.java@org.apache.commons.lang3.text.MapStrLookup.systemPropertiesLookup()": "[] strlookup for system properties now sees updated values.the lookup implementation now directly accesses system properties withoutcaching the properties object in any way.: strsubstitutor.replacesystemproperties does not work consistently. this fixes  from github. thanks to jonathan baker.",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.byteArrayToLong(byte,int,long,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesscope of local variabel shift can be narrowerpmd: useless parenthesesformat to 120 line length.add final modifier to local variables.add final modifier to method parameters.use better method names. document possible arrayindexoutofboundsexception and stringindexoutofboundsexception.",
  "src/main/java/org/apache/commons/lang3/SerializationUtils.java@org.apache.commons.lang3.SerializationUtils.deserialize(byte)": "removes unnecessary class reference of static method calls which are declared in the same classprevent redundant modifiersuse validateistrue to validate argumentssimpler (the prefix is still needed as .<t> cannot start a method call)eliminate one unchecked warning; localise and document others[] use generics in serializationutilscheckstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeElements(byte,byte)": "remove redundant type arguments. simplify arrayutils removeelements by using newdecrementandget() method: improve arrayutils removeelements time complexity to o(n) ()based on patch submitted by jeffery yuancrlf -> lfjavadoc: fix typo but working is still awkward. - add issorted() to arrayutils. patch supplied by james sawle.  in github.add final modifier to local variables. arrayutils removeelements methods use unnecessary hashseteliminate conversion of bitset to int[] arrayutils removeelements methods use unnecessary hashsetreplace hashset with bitset (less memory; faster) arrayutils removeelements methods clone temporary index arrays unnecessarilyreduce number of created arrays[] complement arrayutils.addall() variants with by-index and by-value removal methods",
  "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java@org.apache.commons.lang3.time.Token.formatDuration(long,String,boolean)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesusing validate where possible in time package.: durationformatutils are not able to handle negative duration/periods. document new behavior for negative inputs.: durationformatutils are not able to handle negative durations/periods. reported by michael osipov.don't assign parameter; use the work field durationformatutils does not handle large durations correctlyadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.unwrap(String,String)": "sort members.add final modifier to local variables.: add stringutilsunwrapadd more examples and testsfix formattingadd changes.xml entry: add stringutilsunwrap (, )",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(String,StrBuilder,int,int)": "add final modifier to local variables.fix raw types",
  "src/main/java/org/apache/commons/lang3/AnnotationUtils.java@org.apache.commons.lang3.AnnotationUtils.toString(Annotation)": "add final modifier to local variables.avoid throwing checked exceptions from annotationutils.hashcode()use builder apis for annotationutils.tostring()add hashcode and tostring methods to annotationutils, plus tests",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.equals(Type,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/text/StrMatcher.java@org.apache.commons.lang3.text.StrMatcher.stringMatcher(String)": "eat own dog food: call stringutils.isempty().",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.StrSubstitutor(StrLookup,String,String,char)": "add missing since tags for strsubstitutor; wrap lines longer than 80 chars[] strsubstitutor now supports the declaration of default values for the variables to be replaced. thanks to woonsan ko for the patch.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(Map,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.appendWithSeparators(Object,String)": ": update java requirement from java 6 to 7replace usage of deprecated objectutilstostring with objectstostring: fix deprecation warningseat own dog food: separator == null ? \"\" : separator->objectutils.tostring(separator)remove superfluous parens.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.TextStrategy(int,Calendar,Locale)": " - tolowercase should use locale, additional unit tests for case-insensitive matching - fastdateparser should be case insensitive: fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.subarray(long,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.Builder.reset()": "don't need internal ivar name for a boolean to carry a \"flag\" postfix.adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.getDateTimeInstance(int,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.indexOfAnyBut(String,String)": "rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687https://issues.apache.org/jira/browse/ stringutils methods do not handle unicode 2.0+ supplementary characters correctly.use index_not_found instead of magic number.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.isMixedCase(CharSequence)": "sort members.[] stringutils method to check for mixed case in string ()",
  "src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java@org.apache.commons.lang3.builder.ReflectionToStringBuilder.isAppendTransients()": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesmerge branch '' of https://github.com/markdacek/commons-lang: added isexcludenullvalues to reflectiontostringbuilder and test",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.CheckIntervalData.EventCountCircuitBreaker(int,long,TimeUnit,int)": "add final modifier to method parameters.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java@org.apache.commons.lang3.time.Token.equals(Object)": "add final modifier to local variables.stringbuffer => stringbuilder where being used as a local-only buffer",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isSameLength(boolean,boolean)": "crlf -> lfjavadoc: fix typo but working is still awkward.simplify issamelenght implementations by reusing getlength. this also fixes a lot of the useless paranthesis warnings generated by pmd.",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.byteArrayToInt(byte,int,int,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesscope of local variabel shift can be narrowerpmd: useless parenthesesformat to 120 line length.add final modifier to local variables.use better method names. document possible arrayindexoutofboundsexception and stringindexoutofboundsexception.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.appendln(StringBuffer)": "<action issue=\"\" type=\"add\">strbuilder should support stringbuilder as an input parameter</action>",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.CheckIntervalData.getOpeningThreshold()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.CopyQuotedStrategy(String)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display namesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.substringAfter(String,String)": "sort members.add final modifier to local variables.use index_not_found instead of magic number.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.init(Calendar)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.don't need a copy of this field.add final modifier to local variables.remove redundant type arguments.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.setCalendar(FastDateParser,Calendar,String)": "trailing spaces fastdateparser does not handle non-gregorian calendars properly unnecessary ;applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FormatCache.java@org.apache.commons.lang3.time.FormatCache.MultipartKey(Object)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/SerializationUtils.java@org.apache.commons.lang3.SerializationUtils.serialize(Serializable,OutputStream)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.use validateistrue to validate arguments: update java requirement from java 6 to 7use try with resources in serializationutilsadd final modifier to local variables.adding nopmd tags for various empty catch blockscheckstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.clone(char)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.format(Date)": "change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. applying my fix to , and mikael's test case; fixing the fastdateformat to properly include the locale when formatting a date",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.appendDisplayNames(Calendar,Locale,int,StringBuilder,Map)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.append(StringBuffer,String,double,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.ParameterizedTypeImpl(Class,Type,Type)": ": fix typeutils.parameterize to work correctly with narrower-typed varargs array ()fix sonarqube warning: the user-supplied array 'typearguments' is stored directly.[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.format(Calendar,StringBuffer)": "4fastdateformat apis that use a stringbuilder: dateformatutils.format does not correctly change calendar timezone in certain situations: unit test fastdateprintertimezonestest needs a timezone setapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.getInstance(String,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.getCache(int)": "remove redundant type arguments.format.tab police: fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.appendValueAsString(StringBuffer,String)": " - jsontostringstyle does not escape double quote in a stringvalue[github] commons-lang pull request : intellij idea refactorings..: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/CharRange.java@org.apache.commons.lang3.CharacterIterator.hasNext()": "adding vincent ricard's patch to charrange.java providing an iterator that lets you walk the chars in the range. 454",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.getNextStrategy()": "add final modifier to local variables.format.statement unnecessarily nested within else clause.\\refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.CharacterLiteral(char)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.getType()": "provide simple method to wrap a given type to the typed interface",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.getDateInstance(int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadIdPredicate.findThreadById(long,ThreadGroup)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.use validateistrue to validate argumentsfixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.append(StringBuffer,String,Object,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.FastDateFormat(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.remove(char,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.TimeZoneNameRule(TimeZone,Locale,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces fastdateformat's \"z\" pattern does not respect timezone of calendar instances passed to format()applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.compare(String,String)": ": fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.isInstanceOf(Class,Object,String,Object)": "[github] commons-lang pull request : intellij idea refactorings..add todosjavadocfix brace positionsapplying valentin rocher's patch from , adding isinstanceof and isassignablefrom methods. ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.substringsBetween(String,String,String)": "sort members.remove redundant type arguments.add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)tab police (and trailing spaces)",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.format(long,B)": ": fastdateprinter generates date objects wastefullyfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.Null()": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.TimeZoneDisplayKey(TimeZone,boolean,int,Locale)": "don't mutate parametersadd final modifier to method parameters.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.StrategyAndWidth(Strategy,int)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.setValueDelimiterMatcher(StrMatcher)": "[] strsubstitutor now supports the declaration of default values for the variables to be replaced. thanks to woonsan ko for the patch.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.UnpaddedMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java@org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,String,boolean)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesusing validate where possible in time package.: durationformatutils are not able to handle negative duration/periods. document new behavior for negative inputs.: durationformatutils are not able to handle negative durations/periods. reported by michael osipov.don't assign parameter; use the work field durationformatutils does not handle large durations correctlyadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/RegExUtils.java@org.apache.commons.lang3.RegExUtils.removeFirst(String,Pattern)": "[] add regexutils class instead of overloadinh methods instringutils that take a regex to take precompiled pattern.",
  "src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java@org.apache.commons.lang3.text.translate.UnicodeUnescaper.isSet(OPTION)": "rename the parameter everywhere instead of just the method declaration",
  "src/main/java/org/apache/commons/lang3/tuple/Triple.java@org.apache.commons.lang3.tuple.Triple.toString()": "micro optimization: replace stringbuilder with string concatenation so that the compiler can better optimize the codeadding henning's github pull request with a triple implementation. 675",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.appendDigits(StringBuffer,int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java@org.apache.commons.lang3.concurrent.ConcurrentUtils.initialize(ConcurrentInitializer)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo): added atomicinitializer class. introduced new concurrentinitializer interface which is now implemented by all all initializer classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.getInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.DayInWeekField.appendTo(Appendable,int)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.CaseInsensitiveTextStrategy(int,Calendar,Locale)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.: fastdateformat doesn't respect summer daylight in some localized stringsrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/exception/CloneFailedException.java@org.apache.commons.lang3.exception.CloneFailedException.CloneFailedException(String)": "add methods for cloneables to objectutils ().",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.addRegex(FastDateParser,StringBuilder)": " fastdateparser does not handle non-gregorian calendars properly applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java@org.apache.commons.lang3.time.DateFormatUtils.formatUTC(long,String,Locale)": "use private utc constant to avoid corruption of mutable constant",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.getContent()": "statements unnecessarily nested within else clause.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.isNextNumber()": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.Range.equals(Object)": "add final modifier to local variables.refactor range with lots of new methodscheckstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.removeStart(String,String)": "sort members.make whitespace use after tokens consistent and add a checkstyle rule to enforce it.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.readFrom(Readable)": ": add zero copy write method to strbuilder; : add zero copy read method to strbuilder. thanks to mikhail mazursky.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.appendTo(Appendable,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(CharSequence,CharSequence)": "sort members.: wrong name or result of stringutilsgetjarowinklerdistance ()deprecate stringutilsgetjarowinklerdistance and add stringutilsgetjarowinklersimilarity insteadadd final modifier to local variables.: fix implementation of stringutils.getjarowinklerdistance()replace current implementation with jaro-winkler distance implementation taken from apache lucene.use final modifier where possibleremove unnecessary try-catch-blockcorrect indentation: add the jaro-winkler string distance algorithm to stringutils - partially applying the patch by rekha joshi as submitted for further refinement",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.genericArrayTypeToString(GenericArrayType)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategy.changeStateAndStartNewCheckInterval(State)": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.DayInWeekField.applyRules(Calendar,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: resurrect applyrules(java.util.calendar, java.lang.stringbuffer) for binary compatibility",
  "src/main/java/org/apache/commons/lang3/SystemUtils.java@org.apache.commons.lang3.SystemUtils.isJavaVersionAtLeast(float)": "- fix () systemutils.getjavaversionasfloat throws stringindexoutofboundsexception on android runtime/dalvik vm- refactor for unit testing.- remove odd test code which is copy and pasted from systemutils, which therefore does not test anything.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.toLongString(TypeVariable)": "remove redundant casts ()remove redundant casts throughout the codebase to make it cleaner and easier to read.validation[] new type util features",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.longToBools(long,int,boolean,int,int)": "code clean-up for checkstyle.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java@org.apache.commons.lang3.CsvEscaper.escapeXml(String)": ": add methods for removing all invalid characters according to xml 1.0 and xml 1.1 in an input string to stringescapeutils. thanks to adam hooper",
  "src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java@org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(Field,boolean)": ": use isjavaversionatleast in implementation: java 12 final modifier is no longer mutableidentical catch blocks can be combineduse final consistently. [] org.apache.commons.lang3.reflect.fieldutils.removefinalmodifier(field) does not clean up after itself.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.WeekYear.parsePattern()": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove redundant type arguments.: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.readObject(ObjectInputStream)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/mutable/MutableByte.java@org.apache.commons.lang3.mutable.MutableByte.getAndDecrement()": "add final modifier to local variables. addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.hashCode()": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.getDateInstance(int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/SerializationUtils.java@org.apache.commons.lang3.SerializationUtils.serialize(Serializable)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.append(char,char)": "use not bool instead of bool == false",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.center(CharSequence,int)": "moving center, left, leftpad, right, rightpad, mid, uppercase, lowercase and swapcase over to charsequence input. 687",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.isPreserveEscapes()": "strsubstitutor can preserve escapesstrsubstitutor can now optionally preserve the escape character for anescaped reference, which is useful when substitution takes place inmultiple phases and some references are intentionally unresolved.  priorto this change, an unresolved reference `${a}` and an escaped reference`$${a}` may result in the same string `${a}`, making it impossible foran additional substitution phase to distinguish between escapedreferences and non-escaped references.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.insert(int,long,long)": "use final.remove trailing white spacesadded new vararg methods to insert values into an array at an index.this implements . this commit also deprecates the add() methodsthat inserted a single value into an array at an index.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.getLocale()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.TimeZoneDisplayKey(TimeZone,boolean,int,Locale)": "don't mutate parametersadd final modifier to method parameters.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(Class,String,Object,Class)": "a bit of dog food and a lot of javadoc tweakageadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.getShortCanonicalName(String)": "removes unnecessary class reference of static method calls which are declared in the same class",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.JsonToStringStyle()": ": add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.getMaxWidth(ListIterator)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.indexOf(long,long)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java@org.apache.commons.lang3.concurrent.MultiBackgroundInitializerResults.getTaskCount()": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.compare(KeyValue,KeyValue)": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isSorted(float)": "formatting fixes perhttps://patch-diff.githubusercontent.com/raw/apache/commons-lang/pull/128.diffcrlf -> lfjavadoc: fix typo but working is still awkward. - add issorted() to arrayutils. patch supplied by james sawle.  in github.",
  "src/main/java/org/apache/commons/lang3/time/GmtTimeZone.java@org.apache.commons.lang3.time.GmtTimeZone.inDaylightTime(Date)": "[] timezone.gettimezone() in fastdateparser causes resourcecontention</action>. this .",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.appendAll(Object)": "convert to java 5 enhanced loops. ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shuffle(Object,Random)": ": added shuffle methods to arrayutils",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategy.CheckIntervalData(int,long)": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.append(StringBuffer,int,int)": "add final modifier to local variables.<action issue=\"\" type=\"add\">strbuilder should support stringbuilder as an input parameter</action>",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.append(StringBuffer,String,long,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/RandomUtils.java@org.apache.commons.lang3.RandomUtils.nextBytes(int)": "use final consistently. : new randumutils class. thanks to duncan jones",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.getImplicitLowerBounds(WildcardType)": "validation",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy(String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display namesreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl(Class,Type,Type)": ": fix typeutils.parameterize to work correctly with narrower-typed varargs array ()fix sonarqube warning: the user-supplied array 'typearguments' is stored directly.[] new type util features",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.indexOf(boolean,boolean,int)": "removes unnecessary class reference of static method calls which are declared in the same classcrlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/RegExUtils.java@org.apache.commons.lang3.RegExUtils.replacePattern(String,String,String)": "[] add regexutils class instead of overloadinh methods instringutils that take a regex to take precompiled pattern. sort methods.[] add regexutils class instead of overloadinh methods instringutils that take a regex to take precompiled pattern.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.uncapitalize(String)": "sort members.add final modifier to local variables.: stringutils should use toxxxxcase(int) rather than toxxxxcase(char) ()based on patch by sebbadd final modifier to local variables.updates for : stringutils.uncapitalize performance improvement. similar fix also applied to stringutils.capitalize (as mentioned in issue). thanks to leo wang.use final consistently. tabs and trailing spacesshort circuit (un)capitalize if string is already (un)capitalized.rolling capitalize and uncapitalize back from (charsequence) to (string)",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.CONST(float)": "make sure placement of curly braces is consistent[] introduce const() methods to prevent javac from inlining constants",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.FastDateParser(String,TimeZone,Locale,Date,boolean)": ": dateutilstest.testlang530 fails for some timezones",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.normalizeUpperBounds(Type)": "remove redundant type arguments.validation",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategy.nextCheckIntervalData(int,CheckIntervalData,State,long)": "add final modifier to method parameters.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int,TimeZone)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadIdPredicate.findThreadsByName(String,ThreadGroup)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.appendToString(StringBuffer,String)": "use stringbuilderappend(charsequence, int, int) were possible to improve performance(similar to , thanks to stephane landelle for the suggestion)add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.isTestRecursive()": ": recursive and reflective equalsbuilder ()patch by yathos ug",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.indexOf(short,short,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.isJsonArray(String)": ": fix logic in isjsonarray method of jsontostringstyleextract logic for checking string representation of objects into separate methods",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.applyRulesToString(Calendar)": "fastdateformat apis that use a stringbuilderrefactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.FastDateParser(String,TimeZone,Locale)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names: dateutilstest.testlang530 fails for some timezonesrestore binary compartibilitytrailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.init()": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.max(long,long,long)": "fixing crlfsstatement unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.MemberUtils.isVarArgs()": "make sure placement of curly braces is consistent: add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TzInfo.setCalendar(FastDateParser,Calendar,String)": "[] timezone.gettimezone() in fastdateparser causes resourcecontention</action>. this .utc and gmt are the same, so simplify.refactor \"gmt\" magic string.make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.UnpaddedMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.format(long,B)": "4fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.isAssignableFrom(Class,Class)": "[github] commons-lang pull request : intellij idea refactorings..add todos[] include the actual type in the validate.isinstance and isassignablefrom exception messages.javadocfix brace positionsapplying valentin rocher's patch from , adding isinstanceof and isassignablefrom methods. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.format(Object)": "4fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/EnumUtils.java@org.apache.commons.lang3.EnumUtils.generateBitVector(Class,E)": "prevent redundant modifiers[] permit bitvector generation for enums with > 64 values; plus some test correctionsrequire values parameter when generating bit vectors from enums, throwing nullpointerexception if omitted; merge check for type eligibility; add e... generatebitvector() variant; alter generatebitvector(class<e>, enumset<e>) to (class<e>, iterable<e>) by using |= << instead of + to accumulate values; process only specified values",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/SystemUtils.java@org.apache.commons.lang3.SystemUtils.toJavaVersionFloat(String)": "- fix () systemutils.getjavaversionasfloat throws stringindexoutofboundsexception on android runtime/dalvik vm- refactor for unit testing.- remove odd test code which is copy and pasted from systemutils, which therefore does not test anything.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.hashCode()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.DayInWeekField.appendFullDigits(Appendable,int,int)": "add final modifier to local variables.: fastdateprinter memory allocation regression169",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.getImplicitLowerBounds(WildcardType)": "validation",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.getActualTypeArguments()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.applyRulesToString(Calendar)": "4fastdateformat apis that use a stringbuilderrefactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.boolArrayToLong(boolean,int,long,int,int)": "use better method names. document possible arrayindexoutofboundsexception and stringindexoutofboundsexception.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/RandomStringUtils.java@org.apache.commons.lang3.RandomStringUtils.randomGraph(int,int)": ": extend randomstringutils with methods that generate strings between a min and max length (, )",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.allNotNull(Object)": ": added methods to objectutils class to check for null elements in the array ()",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.splitByWholeSeparator(String,String,int)": "sort members.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.concat(Object)": "adding concat(object...) and concatwith(string, object...) methods to provide vararg'd versions of the more prominent join methods. this ties into the string.concat method. 396",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.setCalendar(FastDateParser,Calendar,String)": "[] timezone.gettimezone() in fastdateparser causes resourcecontention</action>. this .utc and gmt are the same, so simplify.refactor \"gmt\" magic string.make sure lines in files don't have trailing white spaces and remove all trailing white spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.midString(int,int)": "reusestatements unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.append(StringBuffer,String,byte,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.NamePredicate.findThreadById(long,String)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.use validateistrue to validate argumentsfixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java@org.apache.commons.lang3.text.translate.EntityArrays.JAVA_CTRL_CHARS_UNESCAPE()": "make sure placement of curly braces is consistent",
  "src/main/java/org/apache/commons/lang3/time/GmtTimeZone.java@org.apache.commons.lang3.time.GmtTimeZone.useDaylightTime()": "[] timezone.gettimezone() in fastdateparser causes resourcecontention</action>. this .",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.createInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.appendWithSeparators(Iterable,String)": ": update java requirement from java 6 to 7replace usage of deprecated objectutilstostring with objectstostring: fix deprecation warningsadd final modifier to local variables.eat own dog food: separator == null ? \"\" : separator->objectutils.tostring(separator)remove superfluous parens.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.parameterizeWithOwner(Type,Class,Map)": "validation[] new type util features",
  "src/main/java/org/apache/commons/lang3/Charsets.java@org.apache.commons.lang3.Charsets.toCharsetName(String)": "[] add null-safe stringutils apis to wrapstringgetbytes([charset|string]).</action>",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.tokenize(char,int,int)": "statements unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.parameterize(Class,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.append(StringBuffer)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java@org.apache.commons.lang3.text.translate.UnicodeEscaper.UnicodeEscaper(int,int,boolean)": "reverting r1090111 - moving the text.translate escapers back from using range to replicating parts of the range api. see the list for details ('unnecessary boxing in stringescapeutils etc'), the move to range was an uncomfortable fit. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.format(Object,StringBuffer,FieldPosition)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.format(Calendar,B)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.parameterize(Class,Map)": "validation[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/StopWatch.java@org.apache.commons.lang3.time.StopWatch.isStopped()": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesapplying sebb's patch from  - adding isstarted, issuspended and isstopped to stopwatch",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TzInfo.getMaxWidth(ListIterator)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,boolean,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.typeVariableToString(TypeVariable)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.isAssignable(Type,ParameterizedType,Map)": ": typeutils.isassignable throws nullpointerexception when fromtype has type variables and totype generic superclass specifies type variable ()",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.boolsToLong(boolean,int,long,int,int)": "code clean-up for checkstyle.simplify expressions again.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategy.open()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/SystemUtils.java@org.apache.commons.lang3.SystemUtils.toVersionFloat(int)": "- fix () systemutils.getjavaversionasfloat throws stringindexoutofboundsexception on android runtime/dalvik vm- refactor for unit testing.- remove odd test code which is copy and pasted from systemutils, which therefore does not test anything.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeElement(byte,byte)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.getLocale()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.intToShorts(int,int,short,int,int)": "code clean-up for checkstyle.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.join(int,char)": "sort members.[] stringutils join apis for primitives.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.getDateInstance(int,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.CaseInsensitiveTextStrategy(int,Calendar,Locale)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.: fastdateformat doesn't respect summer daylight in some localized stringsrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.TwentyFourHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.isAlphaSpace(CharSequence)": "sort members.[github] commons-lang pull request : intellij idea refactorings..add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.format(Date)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrTokenizer.java@org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.getInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/CharUtils.java@org.apache.commons.lang3.CharUtils.toIntValue(char,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.getTimeInstance(int,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java@org.apache.commons.lang3.builder.DiffBuilder.append(String,Object,Object)": "use validateistrue to validate arguments: diffbuilder: add null check on fieldname when appending object or object[] ().: there should be a differencebuilder with a reflectiondifferencebuilder implementation",
  "src/main/java/org/apache/commons/lang3/text/StrTokenizer.java@org.apache.commons.lang3.text.StrTokenizer.readNextToken(char,int,int,StrBuilder,List)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesreuseit's confusing to re-use field names locallyadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.parse(String)": "add final modifier to local variables.format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display namesadd final modifier to local variables.allow access to parsedpattern for test purposesmake parseexception text similar to that thrown by simpledateformat fastdateparser does not handle non-gregorian calendars properlyuse calendargetdisplaynames() instead of dateformatsymbolsgeteras()applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.remove(double,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.readObject(ObjectInputStream)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.getTimeZone()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.Range.intersectionWith(Range)": "add final modifier to local variables.[] add a method e.g. range<t> range<t>.intersectionwith(range<t>)",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.format(Object)": "4fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.setMilliseconds(Date,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(Executable,Executable,Class)": "use build in methods for comparing numerical values",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.appendDigits(Appendable,int)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.getTypeArguments(Class,Class,Map)": "explicit type parameters can be removedremove redundant type arguments.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.equals(Object)": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.appendTo(StringBuffer,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java@org.apache.commons.lang3.exception.ContextedRuntimeException.getContextEntries()": "refactor exceptioncontext and derived. context contract stipulates a sequence of label-value entries with support for multiple entries for the same label.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.format(Date)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.getTimeInstance(int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.compare(Map,Map)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseMessage(Throwable)": "sort by method name.removes unnecessary class reference of static method calls which are declared in the same classremove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toPrimitive(Double,double)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.getRegistry()": "[] part 2: refactor tostringstyle and tostringbuildertest to verify that we are unsetting the registry when no longer needed[] clear threadlocal recursion registry (compatibly with existing tests, first pass)",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.equals(Object)": "if statement can be simplified",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.getDateInstance(int,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.TwoDigitNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.isTrue(boolean)": "[github] commons-lang pull request : intellij idea refactorings..: added validstate()",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.getMaxLengthEstimate()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/RandomStringUtils.java@org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char,Random)": "use final.make sure lines in files don't have trailing white spaces and remove all trailing white spacespmd: nested if statements can be combineduse stringbuilders instead of stringbuffers(a couple of instances were overlooked)this fixes fix for : randomstringutils random method can overflow...: randomstringutilsrandom can enter infinite loop if end parameter is to small ()1.) fixed possible infinite loop that can be caused by generating either digits or letters by calling with a to low end param.2.) added (inclusive) and (exclusive) terms to javadoc of random methodreuseadd final modifier to local variables.add final modifier to method parameters. randomstringutils throws confusing iae when end <= start randomstringutils.random(count, 0, 0, false, false, universe, random) always throws java.lang.arrayindexoutofboundsexceptionremove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)fix brace positions",
  "src/main/java/org/apache/commons/lang3/RandomStringUtils.java@org.apache.commons.lang3.RandomStringUtils.randomAscii(int,int)": ": extend randomstringutils with methods that generate strings between a min and max length (, )",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.init()": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.appendWithSeparators(Iterator,String)": ": update java requirement from java 6 to 7replace usage of deprecated objectutilstostring with objectstostring: fix deprecation warningseat own dog food: separator == null ? \"\" : separator->objectutils.tostring(separator)remove superfluous parens.",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.hierarchy(Class,Interfaces)": "make whitespace use around generic tokens consistent and add a checkstyle rule to enforce it.explicit type parameters can be removedmake sure lines in files don't have trailing white spaces and remove all trailing white spacesremove redundant type arguments.use final consistently. [] retrieve class hierarchy",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.isFormatLetter(char)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.Executable.isMatchingMethod(Method,Class)": "removes unnecessary class reference of static method calls which are declared in the same class: add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isSorted(int)": "formatting fixes perhttps://patch-diff.githubusercontent.com/raw/apache/commons-lang/pull/128.diffcrlf -> lfjavadoc: fix typo but working is still awkward. - add issorted() to arrayutils. patch supplied by james sawle.  in github.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(int,TimeZone)": " simplify fastdateformat; eliminate boxingrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.lastIndexOf(long,long)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.setFieldSeparator(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyClosed.close()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.getInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.newCalendar()": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.insert(int,T,T)": "use final.make sure lines in files don't have trailing white spaces and remove all trailing white spaces: added shuffle methods to arrayutilsremove trailing white spacesadded new vararg methods to insert values into an array at an index.this implements . this commit also deprecates the add() methodsthat inserted a single value into an array at an index.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.split(String)": "sort members.",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(Object,String)": "[] add method org.apache.commons.lang3.reflect.methodutils.invokeexactmethod(object, string)</action>[] add method org.apache.commons.lang3.reflect.methodutils.invokemethod(object, string)</action>[] add methodutil apis to call methods without parameters.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.StringUtils()": "sort members.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.replaceImpl(int,int,int,String,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/tuple/Triple.java@org.apache.commons.lang3.tuple.Triple.toString(String)": "adding henning's github pull request with a triple implementation. 675",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.format(Calendar,B)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isSorted(byte)": "formatting fixes perhttps://patch-diff.githubusercontent.com/raw/apache/commons-lang/pull/128.diffcrlf -> lfjavadoc: fix typo but working is still awkward. - add issorted() to arrayutils. patch supplied by james sawle.  in github.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.readObject(ObjectInputStream)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.appendDisplayNames(Calendar,Locale,int,StringBuilder,Map)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.isFalse(Boolean)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.[] removed unnecessary elses and use of ternary operator with primitive boolean consequences e.g. (some boolean expression) ? true : false",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.InitStripAccents.lastIndexOfIgnoreCase(CharSequence,CharSequence,int)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.InitStripAccents.isBlank(CharSequence)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.FastDateFormat(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.CONST_BYTE(int)": " - followup incorporating ggregory's doc suggestion, some doc fixes, addition of const_byte() and const_short(), and junit improvements to test doc examples and make sure const_byte() and const_short() throw illegalargumentexception as required.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.TimeZoneStrategy(Locale)": "refactor \"gmt\" magic string.add a default case to switch to appease findbugs: nullpointerexception in fastdateparser$timezonestrategy ()replicate the fix for 1186add final modifier to local variables.remove redundant type arguments. fastdateparser_timezonestrategytesttesttimezonestrategypattern fails on windows with german localereimplementing 1107 fix parsing edge cases in fastdateparserrevert muddled commit - number percentage formatting with fractional digits fastdateparser error - timezones not handled correctlyuse final consistently. : test failure in fastdateparsertest and fastdateformat_parsertest when building with jdk8. thanks to bruno p. kinoshita and henri yandell for their help in fixing this issue.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableBoolean.java@org.apache.commons.lang3.mutable.MutableBoolean.setFalse()": "<action issue=\"\" type=\"add\" dev=\"ggregory\">add apis mutableboolean settrue() and setfalse()</action>",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.parsePattern()": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove redundant type arguments.: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y') partial: implement format 'u' for fastdateformat, day number of weekzz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.getDateInstance(int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.getTimeZone()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.java@org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.close()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.CopyQuotedStrategy(String)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.ParameterizedTypeImpl(Class,Type,Type)": ": fix typeutils.parameterize to work correctly with narrower-typed varargs array ()fix sonarqube warning: the user-supplied array 'typearguments' is stored directly.[] new type util features",
  "src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java@org.apache.commons.lang3.builder.HashCodeBuilder.append(long)": "add final modifier to local variables.convert to java 5 enhanced loops. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.TimeZoneDisplayKey(TimeZone,boolean,int,Locale)": "don't mutate parametersadd final modifier to method parameters.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.getInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.hashCode()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.append(StringBuffer,String,char,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.stripEnd(String,String)": "sort members.use stringisempty() instead of stringlength() == 0remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)use index_not_found instead of magic number.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.getCache(int)": "remove redundant type arguments.format.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.join(List,String,int,int)": "sort members.[] stringutils.join() with support for list<?> withconfigurable start/end indices.",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.createLong(String)": "fixing crlfsstatement unnecessarily nested within else clause. fix createlong() so it behaves like createinteger()",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.CheckIntervalData.checkState()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean,boolean)": "add final modifier to local variables.remove trailing whitespacescrlf -> lfjavadoc: fix typo but working is still awkward.implements : add a method to arrayutils for removing all occurrences of a given element. thanks to haiyang li.",
  "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java@org.apache.commons.lang3.CsvEscaper.escapeJson(String)": "added escape/unescapejson methods per maurizio cucchiara's patch in 797",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.getPattern()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.setSummaryObjectStartText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.uncapitalize(CharSequence)": "removing charsequenceutils in favour of putting the code in stringutilschange stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.selectNumberRule(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java@org.apache.commons.lang3.time.Token.containsTokenWithValue(Token,Object)": "use final consistently. use enhanced for loopadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.getInstance(String,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.toString(Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TzInfo.getLocaleSpecificStrategy(int,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove unused constructor parameter",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.letterPattern(char)": "add final modifier to local variables.format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.leftString(int)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.format(long,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateprinter generates date objects wastefullyapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.NumberStrategy(int)": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.getTimeInstance(int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.StringLiteral(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.TwelveHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.shortToHexs(short,int,String,int,int)": "code clean-up for checkstyle.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.Range.isEndedBy(T)": "refactor range with lots of new methods",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.EventListenerSupport.invoke(Object,Method,Object)": "add final modifier to local variables.fix brace positions: add event support utilitiesapplying documentation patch \"commons-event-support-docs.patch\" from michael wooten.using copyonwritearraylist for thread safety.changing eol-style to native.misc. event utils.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.setArraySeparator(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.NamePredicate.getSystemThreadGroup()": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.asWriter()": ": add zero copy write method to strbuilder; : add zero copy read method to strbuilder. thanks to mikhail mazursky.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isEmpty(char)": "crlf -> lfjavadoc: fix typo but working is still awkward.simplify isempty be reusing getlengths/if (foo) { return true; } return false;/return foo;/g",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.NamePredicate.findThreadById(long,ThreadGroup)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.use validateistrue to validate argumentsfixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.appendSeparator(char,char)": "fix brace positions",
  "src/main/java/org/apache/commons/lang3/AnnotationUtils.java@org.apache.commons.lang3.AnnotationUtils.equals(Annotation,Annotation)": ": update java requirement from java 6 to 7use multi-catch in annotationutils and exceptionutilsadd final modifier to local variables.retract @nonbinding support; doesn't seem proper default behaviorrespect @javax.enterprise.util.nonbindingavoid throwing checked exceptions from annotationutils.hashcode()explicitly specifying the exceptions instead of a catch(exception)add hashcode and tostring methods to annotationutils, plus testsannotationutils",
  "src/main/java/org/apache/commons/lang3/ArchUtils.java@org.apache.commons.lang3.ArchUtils.init_X86_32Bit()": "use final.: add archutils - an utility class for the \"os.arch\" system property ()",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.getChars(char)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.indexOfAnyBut(CharSequence,char)": "sort members.add final modifier to local variables.https://issues.apache.org/jira/browse/ stringutils methods do not handle unicode 2.0+ supplementary characters correctly.use index_not_found instead of magic number.change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java@org.apache.commons.lang3.CsvUnescaper.escapeJson(String)": "added escape/unescapejson methods per maurizio cucchiara's patch in 797",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.append(StringBuffer,String,double,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.compare(Map,Map)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/RandomStringUtils.java@org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric(int)": ": extend randomstringutils with methods that generate strings between a min and max length (, )",
  "src/main/java/org/apache/commons/lang3/builder/ToStringBuilder.java@org.apache.commons.lang3.builder.ToStringBuilder.setDefaultStyle(ToStringStyle)": "use validateistrue to validate arguments",
  "src/main/java/org/apache/commons/lang3/CharRange.java@org.apache.commons.lang3.CharRange.prepareNext()": "adding vincent ricard's patch to charrange.java providing an iterator that lets you walk the chars in the range. 454",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.toLongString(TypeVariable)": "remove redundant casts ()remove redundant casts throughout the codebase to make it cleaner and easier to read.validation[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.Iso8601_Rule.format(Calendar)": "4fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.delete(int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.parameterizedTypeToString(ParameterizedType)": " - stackoverflowerror on typeutils.tostring(...) for a generic return type of enum.valueof ()[] new type util features",
  "src/main/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java@org.apache.commons.lang3.concurrent.InitializationTask.setExternalExecutor(ExecutorService)": "add final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.matches(CharSequence,CharSequence)": "sort members.add final modifier to local variables.: fix implementation of stringutils.getjarowinklerdistance()replace current implementation with jaro-winkler distance implementation taken from apache lucene.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.applyRules(Calendar,B)": "add final modifier to local variables.1154fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.append(StringBuffer,String,float,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.notEqual(Object,Object)": "removes unnecessary class reference of static method calls which are declared in the same class[github] commons-lang pull request : intellij idea refactorings.. add notequal() method to objectutils",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.MemberUtils.compareMethodFit(Method,Method,Class)": ": add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.TextStrategy(int)": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.append(StringBuffer,String,long,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.validState(boolean,String,Object)": "[github] commons-lang pull request : intellij idea refactorings..javadocapplying valentin rocher's patch to , adding new regexp and in range methods to validate: added validstate()",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.getFieldWidth()": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.boolsToHexDigitM0_4bits(boolean)": ":  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.isAnyNotEmpty(CharSequence)": ": stringutilsisanyempty and isanyblank should return false for an empty array (): add stringutilsisanynotempty and isanynotblank ()",
  "src/main/java/org/apache/commons/lang3/time/FastTimeZone.java@org.apache.commons.lang3.time.FastTimeZone.getGmtTimeZone(String)": "use final.[] timezone.gettimezone() in fastdateparser causes resourcecontention</action>. this .",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.letterPattern(char)": "add final modifier to local variables.format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.getRegistry()": "[] part 2: refactor tostringstyle and tostringbuildertest to verify that we are unsetting the registry when no longer needed[] clear threadlocal recursion registry (compatibly with existing tests, first pass)",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.appendln(String,int,int)": "[] create strbuilder apis similar to string.format(string, object...)",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.getDateTimeInstance(int,int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.parameterize(Class,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/CharSequenceUtils.java@org.apache.commons.lang3.CharSequenceUtils.length(CharSequence)": "svn ps svn:eol-style nativesrc/main/java/org/apache/commons/lang3/charsequenceutils.javasvn ps svn:eol-style nativesrc/test/java/org/apache/commons/lang3/charsequenceutilstest.javatab police (and trailing spaces)change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.MultiLineToStringStyle()": "deprecate systemutilsline_separator in favor of java.lang.systemlineseparator",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.applyRules(Calendar,B)": "add final modifier to local variables.1154fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.getDateTimeInstance(int,int,TimeZone)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.PaddedNumberField(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.join(float,char)": "sort members.[] stringutils join apis for primitives.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.lastIndexOf(String,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.Iso8601_Rule(int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyClosed.open()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.TimeZoneNumberRule(boolean)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java@org.apache.commons.lang3.math.IEEE754rUtils.max(double,double)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(String,String,int,boolean)": "sort members.remove redundant type arguments.add final modifier to local variables.add final modifier to method parameters.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)fix brace positionstab police (and trailing spaces)",
  "src/main/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java@org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,Writer)": ": performance improvements for stringescapeutils. this fixes  from github. thanks to fabian lange.<action issue=\"\" type=\"fix\">stringescapeutils.escapejava() and escapeecmascript() do not output the escaped surrogate pairs that are java parsable</action>javadoc, comments, and message strings: change \"unicode\" to \"unicode\".reverting r1090111 - moving the text.translate escapers back from using range to replicating parts of the range api. see the list for details ('unnecessary boxing in stringescapeutils etc'), the move to range was an uncomfortable fit. moving text translation classes to the range class for its configuration",
  "src/main/java/org/apache/commons/lang3/builder/ReflectionDiffBuilder.java@org.apache.commons.lang3.builder.ReflectionDiffBuilder.accept(Field)": "prevent redundant modifiers: add a reflection-based variant of diffbuilder",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.setNullText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.init()": "add final modifier to local variables.tab police: fastdateparser could use calendar.getdisplaynames for all text fieldsshow where the parsing failed fastdateparser does not handle unterminated quotes correctlytrailing spaces fastdateparser does not handle non-gregorian calendars properlyfix bug in java 7 (locale.tostring() format has changed) fastdateparser does not handle non-gregorian calendars properly applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.getDisplayNames(int,Calendar,Locale)": " fastdateparser could use calendar.getdisplaynames for all text fieldsremove unnecessary keyvalue instances: fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.Pair.getDateTimeInstance(int,int,TimeZone)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(String,List)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.equals(GenericArrayType,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(Class,String,Class)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: methodutils.invokemethod throws arraystoreexception if using varargs arguments and smaller types than the method defines (): enhance methodutils to allow invocation of private methods (): add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.[] get method override hierarchyadd final modifier to local variables.add final modifier to method parameters.fix pmd issues: \"these nested if statements could be combined\"convert to java 5 enhanced loops. changing comment so pmd notices the nopmdadding nopmd tags for various empty catch blocksmoving most of the methods over to varargs. a couple can't change because they are object[], class[] with both end parameters ideally wanting to be vararg. 396",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.getDateInstance(int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/math/Fraction.java@org.apache.commons.lang3.math.Fraction.toProperString()": "7micro optimization: replace stringbuilder with string concatenation so that the compiler can better optimize the codeformat to 120 line length.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/LocaleUtils.java@org.apache.commons.lang3.SyncAvoid.isISO639LanguageCode(String)": "extract some helper methods to make the code better readable",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.containsVariableTypeSameParametrizedTypeBound(TypeVariable,ParameterizedType)": " - stackoverflowerror on typeutils.tostring(...) for a generic return type of enum.valueof ()",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.FastDatePrinter(String,TimeZone,Locale)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.TimeZoneNumberRule(boolean,boolean)": "added missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeElements(long,long)": "remove redundant type arguments. simplify arrayutils removeelements by using newdecrementandget() method: improve arrayutils removeelements time complexity to o(n) ()based on patch submitted by jeffery yuancrlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables. arrayutils removeelements methods use unnecessary hashseteliminate conversion of bitset to int[] arrayutils removeelements methods use unnecessary hashsetreplace hashset with bitset (less memory; faster) arrayutils removeelements methods clone temporary index arrays unnecessarilyreduce number of created arrays[] complement arrayutils.addall() variants with by-index and by-value removal methods",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.appendAllTo(StringBuilder,String,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.format(Calendar)": "4fastdateformat apis that use a stringbuilderapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.adjustYear(int)": "format.use final consistently. replace tabs with whitespaces and add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.appendln(StringBuilder)": "<action issue=\"\" type=\"add\">strbuilder should support stringbuilder as an input parameter</action>",
  "src/main/java/org/apache/commons/lang3/math/Fraction.java@org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)": "format to 120 line length.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.subarray(int,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int,TimeZone,Locale)": "add final modifier to method parameters.refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.CheckIntervalData.CheckIntervalData(int,long)": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.TimeZoneDisplayKey(TimeZone,boolean,int,Locale)": "don't mutate parametersadd final modifier to method parameters.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.isRegistered(Object,Object)": ": equalsbuilderisregistered: swappedpair construction bug ()swappedpair constructed as pair.of(rhs,lhs)add final modifier to local variables.rename getrightelement() to getright(). rename getleftelement() to getleft().decompose pair into an abstract class with element accessor methods + mutable/immutable concrete expression classesuse static method for brevity, avoiding type paramsapplying the copy of the hashcodebuilder code to stop cyclic references over to equalsbuilder per  and oliver sauder's patch",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.hashCode()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/exception/ContextedException.java@org.apache.commons.lang3.exception.ContextedException.getFormattedExceptionMessage(String)": "javdoc and minor tweaks to contexted exception",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.CharacterLiteral(char)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.StringLiteral(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.appendTo(Appendable,int)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.substring(String,int)": "sort members.rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.format(Object)": "1154fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.simpleQuote(StringBuilder,String)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateparser too strict on abbreviated short month symbolsadd final modifier to local variables.format.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.StringLiteral(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.getInstance(String,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.getTimeInstance(int,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.UnpaddedNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.Executable.of(Method)": "make sure placement of curly braces is consistentadd final modifier to method parameters.: add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.",
  "src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java@org.apache.commons.lang3.exception.ContextedRuntimeException.addContextValue(String,Object)": "refactor exceptioncontext and derived. context contract stipulates a sequence of label-value entries with support for multiple entries for the same label.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.indexOf(double,double)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/CharSetUtils.java@org.apache.commons.lang3.CharSetUtils.containsAny(String,String)": "sort members and clean up comments.add a charsetutils.containsany(string, string) per 886",
  "src/main/java/org/apache/commons/lang3/SystemUtils.java@org.apache.commons.lang3.SystemUtils.getJavaVersionAsInt()": "- fix () systemutils.getjavaversionasfloat throws stringindexoutofboundsexception on android runtime/dalvik vm- refactor for unit testing.- remove odd test code which is copy and pasted from systemutils, which therefore does not test anything.",
  "src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java@org.apache.commons.lang3.exception.ContextedRuntimeException.getContextLabels()": "refactor exceptioncontext and derived. context contract stipulates a sequence of label-value entries with support for multiple entries for the same label.",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.isExactlyOneTrue(boolean)": "use less confusing method name",
  "src/main/java/org/apache/commons/lang3/concurrent/ThresholdCircuitBreaker.java@org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker.close()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.hashCode()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.rightString(int)": "reuse",
  "src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java@org.apache.commons.lang3.math.IEEE754rUtils.min(float)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesuse validateistrue to validate argumentsusing validate where possible in math package.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.format(long,B)": ": fastdateprinter generates date objects wastefullyfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/LocaleUtils.java@org.apache.commons.lang3.LocaleUtils.isNumericAreaCode(String)": "extract some helper methods to make the code better readable",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.anyNotNull(Object)": ": added methods to objectutils class to check for null elements in the array ()",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.getThrowables(Throwable)": "sort by method name.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java@org.apache.commons.lang3.concurrent.ConstantInitializer.toString()": "explicit boxing[] added constantinitializer class",
  "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java@org.apache.commons.lang3.text.translate.EntityArrays.ISO8859_1_UNESCAPE()": "make sure placement of curly braces is consistent",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.DayInWeekField.format(Date,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.getInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.TwelveHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/Memoizer.java@org.apache.commons.lang3.concurrent.Memoizer.Memoizer(Computable,boolean)": ": implementation of a memomizer ()changes suggested in https://github.com/apache/commons-lang/pull/80:- tabs to spaces- use @override- remove unused variables- other minimal clean-ups: implementation of a memomizer ()",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.unregister(Object)": "add final modifier to local variables.promote uniformity between branches by using registry accessorunused imports + uh, why would you synchronize access to a threadlocal?  :p[] clear threadlocal recursion registry (compatibly with existing tests, first pass)",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.longToBytes(long,int,byte,int,int)": "code clean-up for checkstyle.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.parse(String,ParsePosition,Calendar)": "lvar should not hide ivar.add final modifier to local variables.format.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.format(Calendar,StringBuffer)": "fastdateformat apis that use a stringbuilder: dateformatutils.format does not correctly change calendar timezone in certain situations: unit test fastdateprintertimezonestest needs a timezone setapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.append(char,int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shift(int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.swap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,Object)": "extract logic for checking string representation of objects into separate methodsformat source codevariable names should follow naming conventionsmodified appenddetail method for object value in jsontostringstyle classfix the jsontostringstyle:except number types and boolean type, all other types in java should be 'appendasstring': add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.getInstance(String)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.StringLiteral(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toShort(String,short)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: rounding utilities for converting to bigdecimalfixing crlfsstatement unnecessarily nested within else clause.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.substringBeforeLast(String,String)": "sort members.add final modifier to local variables.use index_not_found instead of magic number.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.NoClassNameToStringStyle()": ": add noclassnametostringstyle implementation of tostringstyle. this  from github. thanks to innokenty shuvalov.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.TextField(int,String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.append(StringBuffer)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.init()": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.Null()": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.convertClassesToClassNames(List)": "remove redundant type arguments.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.getDisplayNames(int,Calendar,Locale)": ": fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.min(T,T)": " add a null-safe compare() method to objectutils",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategy.close()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.indexOf(String,char)": "use index_not_found instead of magic number.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.parameterizeWithOwner(Type,Class,Type)": "removes unnecessary class reference of static method calls which are declared in the same classapply patch contributed by bruno p. kinoshitavalidation[] new type util features",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.binaryToInt(boolean,int,int,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesscope of local variabel shift can be narrowerpmd: useless parenthesesformat to 120 line length.removed unnecessary multiplication by one.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.Iso8601_Rule.appendDigits(StringBuffer,int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.getMaxLengthEstimate()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.getInstance(String,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.readResolve()": "removes unnecessary class reference of static method calls which are declared in the same class: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.: add noclassnametostringstyle implementation of tostringstyle. this  from github. thanks to innokenty shuvalov.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.parseToken(String,int)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)": "sort members.change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.register(Object)": "remove redundant type arguments.add final modifier to local variables.promote uniformity between branches by using registry accessorunused imports + uh, why would you synchronize access to a threadlocal?  :p[] clear threadlocal recursion registry (compatibly with existing tests, first pass)",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadIdPredicate.findThreads(ThreadGroup,boolean,ThreadPredicate)": "use validateistrue to validate argumentsremove redundant type arguments.fixing crlfsstatement unnecessarily nested within else clause.incorporated feedback from fabian, formatting adjusted, count >> 1 replaced with count / 2incorporated feedback from peteradd threadutils",
  "src/main/java/org/apache/commons/lang3/text/FormattableUtils.java@org.apache.commons.lang3.text.FormattableUtils.append(CharSequence,Formatter,int,int,int,char,CharSequence)": "add final modifier to local variables.add final modifier to method parameters.explicit boxingjavadoc",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.swap(char,int,int,int)": "add final modifier to local variables.better javadoc for arrayutils.swap variantscrlf -> lfjavadoc: fix typo but working is still awkward.merge branch '': inconsistent behavior of swap for malformed inputs. thanksto adrian ber.consistent treatment for negative indices for swap methodexamples added in javadoctabs replaced by spacesnew tests addedswap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.FastDateParser(String,TimeZone,Locale,Date,boolean)": ": dateutilstest.testlang530 fails for some timezones",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.getFragmentInMinutes(Calendar,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesmake use of existing timeunit class to manage time units.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.hashCodeMulti(Object)": "removes unnecessary class reference of static method calls which are declared in the same classuse final consistently. : fix deprecation warnings; found some more usagesadd final modifier to local variables.convert to java 5 enhanced loops.  - add hashcodemulti varargs method",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.setSummaryObjectStartText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.parseToken(String,int)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java@org.apache.commons.lang3.time.DurationFormatUtils.lexx(String)": "remove redundant type arguments. - fix findbugs warnings in durationformatutilsunnecessary array creation durationformatutilslexx does not detect unmatched quote charfix some formatting.add final modifier to local variables.stringbuffer => stringbuilder where being used as a local-only buffer",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.endsWithIgnoreCase(CharSequence,CharSequence)": "sort members.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.GenericArrayTypeImpl(Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.equals(Object)": "format.add final modifier to local variables.trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long,String)": "validate's string.format without arguments ()while calling string.format(\"some string\") without any additionalarguments is not technically wrong, it's redundant, as it justreturns the same string.removing these calls and just using the string instead both cleans upthe code and offers a (very slight) performance gain.: validate: add inclusivebetween and exclusivebetween overloads for primitives types. initial patch provided by sebb.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.addAll(double,double)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.findRecursiveTypes(ParameterizedType)": "deletes redundant 'new' expression in constant array creationuse final. - stackoverflowerror on typeutils.tostring(...) for a generic return type of enum.valueof ()",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.CheckIntervalData(int,long)": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.format(long)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.[] fastdateformat generates date objects wastefully.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.longToIntArray(long,int,int,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesscope of local variabel shift can be narrowerformat to 120 line length.",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.getFragment(Date,int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.getChars(char)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.getDateTimeInstance(int,int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.format(Object)": "4fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.readObject(ObjectInputStream)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/mutable/MutableLong.java@org.apache.commons.lang3.mutable.MutableLong.addAndGet(Number)": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.CharacterLiteral(char)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,WildcardType,Map)": "add final modifier to local variables.add final modifier to method parameters.[] vastly expanded typeutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.isFormatLetter(char)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyOpen.getClosingThreshold()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringBuilder.java@org.apache.commons.lang3.builder.ToStringBuilder.build()": "adding builder interface, and refactoring the builder classes and basicthreadfactory to implement this interface. patch from michael wooten in 601",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.TwelveHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.StringLiteral(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.getChars(char)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.TwoDigitMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.hexDigitToBinary(char)": "restore previous behavior that allows function results (arrays of booleans) to be modified.format to 120 line length.refactor commons constants (no need to generate new arrays on every call).",
  "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java@org.apache.commons.lang3.concurrent.TimedSemaphore.acquirePermit()": "[] added a tryacquire() method to timedsemaphore.this method supports non-blocking use cases.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.format(long,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateprinter generates date objects wastefullyapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.Builder.getDaemonFlag()": "don't need internal ivar name for a boolean to carry a \"flag\" postfix.adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.getTypeArguments(Class,Class,Map)": "explicit type parameters can be removedremove redundant type arguments.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableShort.java@org.apache.commons.lang3.mutable.MutableShort.addAndGet(short)": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.getDateTimeInstance(int,int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.swap(boolean,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.merge branch '': inconsistent behavior of swap for malformed inputs. thanksto adrian ber.consistent treatment for negative indices for swap methodswap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.getStrategy(char,int,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y') partial: implement format 'u' for fastdateformat, day number of weekrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.appendWithSeparators(Iterable,String)": ": update java requirement from java 6 to 7replace usage of deprecated objectutilstostring with objectstostring: fix deprecation warningsadd final modifier to local variables.eat own dog food: separator == null ? \"\" : separator->objectutils.tostring(separator)remove superfluous parens.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.format(Date,B)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.lastIndexOf(String,int)": "rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.TimeZoneNameRule(TimeZone,Locale,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.Pair.format(Date)": "applying my fix to , and mikael's test case; fixing the fastdateformat to properly include the locale when formatting a date",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.endsWith(String)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.StringLiteral(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.getActualTypeArguments()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.TimeZoneNameRule(TimeZone,Locale,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.PaddedNumberField(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java@org.apache.commons.lang3.mutable.MutableDouble.decrementAndGet()": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyOpen.getOpeningThreshold()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.build()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.applyRules(Calendar,StringBuffer)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.equals(Object)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.MultiLineToStringStyle()": "deprecate systemutilsline_separator in favor of java.lang.systemlineseparator",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.compare(String,String)": ": fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.setSummaryObjectStartText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.parseToken(String,int)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.appendToString(StringBuffer,String)": "use stringbuilderappend(charsequence, int, int) were possible to improve performance(similar to , thanks to stephane landelle for the suggestion)add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.readObject(ObjectInputStream)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.equals(Object)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.format(long)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.[] fastdateformat generates date objects wastefully.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.EventListenerSupport.getListeners()": "provide read access to the registered listener instances",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.insert(int,char,char)": "use final.remove trailing white spacesadded new vararg methods to insert values into an array at an index.this implements . this commit also deprecates the add() methodsthat inserted a single value into an array at an index.",
  "src/main/java/org/apache/commons/lang3/text/StrMatcher.java@org.apache.commons.lang3.text.CharMatcher.charSetMatcher(String)": "eat own dog food: stringutilsisempty(string) and replace some but not all stringlength() == 0 with stringisempty()",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.replace(int,int,String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java@org.apache.commons.lang3.concurrent.ConstantFuture.checkedException(Throwable)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesusing validate where possible in concurrent package.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.clone(boolean)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.toString()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java@org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(Object,Object,boolean,Class,String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.add final modifier to method parameters.more varargs-related updates",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.getDefaultCauseMethodNames()": "sort by method name.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.appendAll(Iterable)": "add final modifier to local variables.support varargs in strbuilder.appendall(); also convert iterable form of method to use enhanced for loop",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.toString()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.containsVariableTypeSameParametrizedTypeBound(TypeVariable,ParameterizedType)": " - stackoverflowerror on typeutils.tostring(...) for a generic return type of enum.valueof ()",
  "src/main/java/org/apache/commons/lang3/CharSetUtils.java@org.apache.commons.lang3.CharSetUtils.count(String,String)": "sort members and clean up comments.add final modifier to local variables.merge charsetutils string[] and string method forms to string...",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.isJsonArray(String)": ": fix logic in isjsonarray method of jsontostringstyleextract logic for checking string representation of objects into separate methods",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.FastDateParser(String,TimeZone,Locale)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names: dateutilstest.testlang530 fails for some timezonesrestore binary compartibilitytrailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.parseDate(String,Locale,String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces - dateutilsparsedate uses default locale; add locale support",
  "src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java@org.apache.commons.lang3.builder.CompareToBuilder.append(short,short)": "removes redundant '+' signpmd: remove useless parentheses",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.Iso8601_Rule(int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.equals(Object)": "add final modifier to local variables.trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.simpleQuote(StringBuilder,String)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateparser too strict on abbreviated short month symbolsadd final modifier to local variables.format. fastdateparser_timezonestrategytesttesttimezonestrategypattern fails on windows with german localereimplementing 1107",
  "src/main/java/org/apache/commons/lang3/NotImplementedException.java@org.apache.commons.lang3.NotImplementedException.NotImplementedException(Throwable,String)": "returning notimplementedexception to lang after it was removed in lang 3.0 per the request in . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.hashCode()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.rightString(int)": "reuse",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.append(char)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.appendIfMissingIgnoreCase(String,CharSequence,CharSequence)": "sort members.applying joanne polsky's patch adding appendifmissing/prependifmissing methods to stringutils []",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.getPattern()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.isFormatLetter(char)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.CheckIntervalData.getClosingInterval()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/CharRange.java@org.apache.commons.lang3.CharRange.next()": "boolean comparisons in charrange ()cleaned up comparisons to false to just use the boolean negationoperator (!).add final modifier to local variables.adding vincent ricard's patch to charrange.java providing an iterator that lets you walk the chars in the range. 454",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toDouble(BigDecimal)": ": add todouble(bigdecimal), todouble(bigdecimal, double)",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.getMaxWidth(ListIterator)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.getUpperBounds()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.getInstance(String,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java@org.apache.commons.lang3.builder.ReflectionToStringBuilder.ReflectionToStringBuilder(Object,ToStringStyle,StringBuffer)": "add checknotnull method in reflectiontostringbuilder.java to fix 1132",
  "src/main/java/org/apache/commons/lang3/mutable/MutableShort.java@org.apache.commons.lang3.mutable.MutableShort.getAndAdd(Number)": "add final modifier to local variables. addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeAll(long,int)": ": arrayutils.removeall(object array, int... indices) should do the clone, not its callers ()crlf -> lfjavadoc: fix typo but working is still awkward.[] complement arrayutils.addall() variants with by-index and by-value removal methods",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.compare(Map,Map)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.addAll(char,char)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.StringLiteral(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.boolsToShort(boolean,int,short,int,int)": "code clean-up for checkstyle.simplify expressions again.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.chomp(String)": "sort members.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.Builder.daemon(boolean)": "don't use single letter variable names.don't need internal ivar name for a boolean to carry a \"flag\" postfix.adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.PaddedNumberField(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.getDateInstance(int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.TextField(int,String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.clone(int)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(TypeVariable)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.getClosingInterval()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.setSummaryObjectEndText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.TimeZoneNumberRule(boolean,boolean)": "added missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.format(Date,B)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.NumberStrategy(int)": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.compare(String,String)": ": fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.appendTo(StringBuffer,Calendar)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.UnpaddedMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.BasicThreadFactory.getPriority()": "adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.Range.compare(Object,Object)": "refactor range with lots of new methods",
  "src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java@org.apache.commons.lang3.builder.CompareToBuilder.append(byte,byte)": "removes redundant '+' signpmd: remove useless parentheses",
  "src/main/java/org/apache/commons/lang3/mutable/MutableInt.java@org.apache.commons.lang3.mutable.MutableInt.subtract(Number)": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyOpen.createStrategyMap()": "add final modifier to local variables.remove redundant type arguments.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.WeekYear.WeekYear(NumberRule)": ": fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.literal()": "add final modifier to local variables.pmd: these nested if statements could be combinedformat.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.TimeZoneNameRule(TimeZone,Locale,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.literal()": "add final modifier to local variables.pmd: these nested if statements could be combinedformat.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.SimpleDateFormatStrategy.init()": " fastdateparser does not handle non-gregorian calendars properlyfix bug in java 7 (locale.tostring() format has changed) fastdateparser does not handle non-gregorian calendars properly ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.getLocale()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.smallerOrEqualObject(Comparable,T)": ": new methods for lang3.validate ()fixed method names; fixed differentobject to use object.equals",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.midString(int,int)": "reusestatements unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.readObject(ObjectInputStream)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.Pair.getTimeInstance(int,Locale)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.count(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java@org.apache.commons.lang3.reflect.FieldUtils.getDeclaredField(Class,String,boolean)": "a bit of dog food and a lot of javadoc tweakageadd final modifier to local variables.adding nopmd tags for various empty catch blocks",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.StrategyParser(String,Calendar)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.lastIndexOf(double,double,double)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.getBytes(String,Charset)": "[] add null-safe stringutils apis to wrapstringgetbytes([charset|string]).</action>",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.indexOf(float,float)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java@org.apache.commons.lang3.builder.CompareToBuilder.build()": "explicit boxingadding builder interface, and refactoring the builder classes and basicthreadfactory to implement this interface. patch from michael wooten in 601",
  "src/main/java/org/apache/commons/lang3/tuple/MutableTriple.java@org.apache.commons.lang3.tuple.MutableTriple.getLeft()": "adding henning's github pull request with a triple implementation. 675",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.uuidToBytes(UUID,byte,int,int)": "code clean-up for checkstyle.: add to conversion from byte[] to uuid and uuid to byte[]",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.TwoDigitMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.getMaxWidth(ListIterator)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.DayInWeekField(NumberRule)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/RandomStringUtils.java@org.apache.commons.lang3.RandomStringUtils.randomNumeric(int)": ": extend randomstringutils with methods that generate strings between a min and max length (, ): add randomstringutilsrandomgraph and randomprint which match corresponding regular expression classthese are useful over randomascii because they do not contain the del character but otherwise contain the full range of ascii printing characters, and optionally include whitespace. this is useful for testing user defined inputs where characters like spaces, angle brakets, semicolons, dashes, etc. can cause issues.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.TimeZoneStrategy(Locale)": ": test failure in fastdateparsertest and fastdateformat_parsertest when building with jdk8. thanks to bruno p. kinoshita and henri yandell for their help in fixing this issue.add final modifier to local variables.trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.createKeyValues(String,String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.getRule(int)": "removes unnecessary class reference of static method calls which are declared in the same classmake sure lines in files don't have trailing white spaces and remove all trailing white spacesreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/Charsets.java@org.apache.commons.lang3.Charsets.toCharset(String)": "[] add null-safe stringutils apis to wrapstringgetbytes([charset|string]).</action>",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.appendTo(Appendable,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.applyRulesToString(Calendar)": "fastdateformat apis that use a stringbuilderrefactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.getStrategy(String)": "document intentional drop-thruapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadUtils.findThreadGroups(ThreadGroup,boolean,ThreadGroupPredicate)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.use validateistrue to validate argumentsremove redundant type arguments.fixing crlfsstatement unnecessarily nested within else clause.incorporated feedback from fabian, formatting adjusted, count >> 1 replaced with count / 2incorporated feedback from peteradd threadutils",
  "src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java@org.apache.commons.lang3.reflect.FieldUtils.readField(Field,Object,boolean)": "a bit of dog food and a lot of javadoc tweakage",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.escapeRegex(StringBuilder,String,boolean)": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java@org.apache.commons.lang3.builder.ReflectionToStringBuilder.setAppendTransients(boolean)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesmerge branch '' of https://github.com/markdacek/commons-lang: added isexcludenullvalues to reflectiontostringbuilder and test",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.getDisplayNames(int)": "don't save short eras if they are the same as the long eras fastdateparser does not handle non-gregorian calendars properlyuse calendargetdisplaynames() instead of dateformatsymbolsgeteras()getinstance() (java 1.6) supports more localesexplicit conversion to integer; save the value for use latergetinstance(locale) is java 1.6+applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.getRegistry()": "[] part 2: refactor tostringstyle and tostringbuildertest to verify that we are unsetting the registry when no longer needed[] clear threadlocal recursion registry (compatibly with existing tests, first pass)",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean,int)": "simplify using ternary expressions instead of nested if-elses.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.append(char,int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isSameLength(long,long)": "crlf -> lfjavadoc: fix typo but working is still awkward.simplify issamelenght implementations by reusing getlength. this also fixes a lot of the useless paranthesis warnings generated by pmd.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.Iso8601_Rule.TimeZoneNameRule(TimeZone,Locale,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.appendTo(StringBuffer,Calendar)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.appendDigits(Appendable,int)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.getFragmentInDays(Calendar,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesmake use of existing timeunit class to manage time units.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.prependIfMissing(String,CharSequence,CharSequence)": "sort members.applying joanne polsky's patch adding appendifmissing/prependifmissing methods to stringutils []",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.getDateTimeInstance(int,int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java@org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(String,ParsePosition)": "add final modifier to local variables.stringbuffer => stringbuilder where being used as a local-only bufferadding nopmd tags for various empty catch blocks",
  "src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java@org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(Object)": "remove redundant type arguments.revert \"allocate array of the correct size\"this reverts commit 60b32953a968e5623f82a6b27d6c679bc17c48e5.following the advices from http://shipilev.net/blog/2016/arrays-wisdom-ancients/this seems to be faster and safer on current vms.allocate array of the correct sizeadd final modifier to local variables.checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.add(boolean,boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.replace(CharSequence,int,int)": "use final consistently.  strsubstitutor does not support stringbuilder or charsequence",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.Iso8601_Rule.appendFullDigits(Appendable,int,int)": "add final modifier to local variables.: fastdateprinter memory allocation regressionfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.findRecursiveTypes(ParameterizedType)": "deletes redundant 'new' expression in constant array creationuse final. - stackoverflowerror on typeutils.tostring(...) for a generic return type of enum.valueof ()",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.appendDetail(StringBuffer,String,char)": "fix the jsontostringstyle:except number types and boolean type, all other types in java should be 'appendasstring'",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.EventListenerSupport.createInvocationHandler()": "allow subclass custom invocation handling",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadUtils.test(ThreadGroup)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.appendTo(StringBuffer,Calendar)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.format(Calendar,B)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.identityToString(StringBuilder,Object)": "[] objectutils.identitytostring(object) and friends shouldallocate builders and buffers with a sizerefactor magic char.better exception message.use validatenotnull instead of \"throw new nullpointerexception\" add objectutils.toidentitystring methods that support stringbuilder, strbuilder, and appendable",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.append(StringBuffer,String,short,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.equals(Type,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.deleteAll(String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.compare(T,T)": "crlf -> lfjavadoc: fix typo but working is still awkward. - add issorted() to arrayutils. patch supplied by james sawle.  in github.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.leftPad(CharSequence,int,CharSequence)": "moving center, left, leftpad, right, rightpad, mid, uppercase, lowercase and swapcase over to charsequence input. 687",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.append(StrBuilder)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.appendValueAsString(StringBuffer,String)": " - jsontostringstyle does not escape double quote in a stringvalue[github] commons-lang pull request : intellij idea refactorings..: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.InitStripAccents.toString(byte,String)": "",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.appendDigits(Appendable,int)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.getTimeInstance(int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.leftPad(String,int)": "sort members.rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.toBoolean(Boolean)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.ws[] removed unnecessary elses and use of ternary operator with primitive boolean consequences e.g. (some boolean expression) ? true : false",
  "src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java@org.apache.commons.lang3.builder.CompareToBuilder.append(int,int)": "removes redundant '+' signpmd: remove useless parentheses",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.startsWith(String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/RandomStringUtils.java@org.apache.commons.lang3.RandomStringUtils.randomGraph(int)": ": extend randomstringutils with methods that generate strings between a min and max length (, ): add randomstringutilsrandomgraph and randomprint which match corresponding regular expression classthese are useful over randomascii because they do not contain the del character but otherwise contain the full range of ascii printing characters, and optionally include whitespace. this is useful for testing user defined inputs where characters like spaces, angle brakets, semicolons, dashes, etc. can cause issues.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.TextField(int,String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.getInstance()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.getTypeArguments(Class,Class,Map)": "explicit type parameters can be removedremove redundant type arguments.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.getMaxWidth(ListIterator)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.applyRules(Calendar,B)": "add final modifier to local variables.1154fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.hashCode()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/tuple/Triple.java@org.apache.commons.lang3.tuple.Triple.of(L,M,R)": "remove redundant type arguments.adding henning's github pull request with a triple implementation. 675",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.getMaxLengthEstimate()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.register(Object)": "remove redundant type arguments.",
  "src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java@org.apache.commons.lang3.exception.DefaultExceptionContext.getFormattedExceptionMessage(String)": "replaces 'size() == 0' and 'length() == 0' with 'isempty()'make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.remove add and set methods of exceptioncontext types taking a pair. format entries with index. improve javadoc. add serialization test.javdoc and minor tweaks to contexted exceptionrefactor exceptioncontext and derived. context contract stipulates a sequence of label-value entries with support for multiple entries for the same label.fix brace positionsfixing . don't catch throwable, catch exception instead. ",
  "src/main/java/org/apache/commons/lang3/CharSet.java@org.apache.commons.lang3.CharSet.add(String)": "add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.format(Date)": "change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. applying my fix to , and mikael's test case; fixing the fastdateformat to properly include the locale when formatting a date",
  "src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java@org.apache.commons.lang3.builder.ReflectionToStringBuilder.ReflectionToStringBuilder(Object,ToStringStyle)": "add checknotnull method in reflectiontostringbuilder.java to fix 1132",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.getTypeArguments(ParameterizedType,Class,Map)": "explicit type parameters can be removedremove redundant type arguments.",
  "src/main/java/org/apache/commons/lang3/tuple/ImmutableTriple.java@org.apache.commons.lang3.tuple.ImmutableTriple.getLeft()": "adding henning's github pull request with a triple implementation. 675",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.ProxyInvocationHandler.invoke(Object,Method,Object)": "add final modifier to local variables.fix brace positions: add event support utilitiesapplying documentation patch \"commons-event-support-docs.patch\" from michael wooten.using copyonwritearraylist for thread safety.changing eol-style to native.misc. event utils.",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(Class,Executable)": "make sure placement of curly braces is consistentadd final modifier to local variables.pmd: remove useless parenthesescheckstyle: add missing curly braces: add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.",
  "src/main/java/org/apache/commons/lang3/Functions.java@org.apache.commons.lang3.Functions.call(FailableCallable)": "functions.java whitspacesreplace tabs with four spaces, as per the project's checkstyle rules.adding the functions class as a helper for dealing with java 8 lambdas.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,char)": "fix the jsontostringstyle:except number types and boolean type, all other types in java should be 'appendasstring'",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.parse(FastDateParser,Calendar,String,ParsePosition,int)": "add final modifier to local variables.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.trim()": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.getMaxLengthEstimate()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java@org.apache.commons.lang3.text.translate.NumericEntityEscaper.between(int,int)": "reverting r1090111 - moving the text.translate escapers back from using range to replicating parts of the range api. see the list for details ('unnecessary boxing in stringescapeutils etc'), the move to range was an uncomfortable fit. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.toArray(Map)": "trailing spaces fastdateparser does not handle non-gregorian calendars properlyuse calendargetdisplaynames() instead of dateformatsymbolsgeteras()",
  "src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java@org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(Object,boolean)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesmade it clear that the fields of the object form the hash code ().pulled magic values into constants.more varargs-related updates",
  "src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java@org.apache.commons.lang3.exception.ContextedRuntimeException.setContextValue(Pair)": "refactor exceptioncontext and derived. context contract stipulates a sequence of label-value entries with support for multiple entries for the same label.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.getTimeInstance(int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.newCalendar()": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.getDateInstance(int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.PaddedNumberField(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ClassPathUtils.java@org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedName(Class,String)": ": new class classpathutils with methods for turning fqn into resource path",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.appendDisplayNames(Calendar,Locale,int,StringBuilder)": "add final modifier to local variables.remove redundant type arguments.: fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.format(Date,StringBuffer)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java@org.apache.commons.lang3.builder.DiffBuilder.append(String,DiffResult)": "use validateistrue to validate argumentsadd final modifier to local variables.add method to diffbuilder to allow appending from a diffresult.",
  "src/main/java/org/apache/commons/lang3/time/FormatCache.java@org.apache.commons.lang3.time.FormatCache.getDateInstance(int,TimeZone,Locale)": " simplify fastdateformat; eliminate boxing",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.append(StringBuilder,int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/AnnotationUtils.java@org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(Annotation,Annotation)": "add hashcode and tostring methods to annotationutils, plus testsannotationutils",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategy.getEventCount()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.FastDateParser(String,TimeZone,Locale,Date,boolean)": ": dateutilstest.testlang530 fails for some timezones",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.leftString(int)": "reuse",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeElement(long,long)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(BigDecimal,int,RoundingMode)": ": rounding utilities for converting to bigdecimal",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.AlwaysTruePredicate.findThreads(ThreadGroup,boolean,ThreadPredicate)": "use validateistrue to validate argumentsremove redundant type arguments.fixing crlfsstatement unnecessarily nested within else clause.incorporated feedback from fabian, formatting adjusted, count >> 1 replaced with count / 2incorporated feedback from peteradd threadutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.TimeZoneStrategy(Calendar,Locale)": ": fastdateformat doesn't respect summer daylight in some localized stringsmerge branch 'master' of https://github.com/nickmanley/commons-langthis  fix nullpointerexception in fastdateparser$timezonestrategyfix nullpointerexception in fastdateparser$timezonestrategyrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.add(short,short)": "formatting fixes perhttps://patch-diff.githubusercontent.com/raw/apache/commons-lang/pull/128.diffcrlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.format(long,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateprinter generates date objects wastefullyapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.InitStripAccents.isWhitespace(CharSequence)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.TwoDigitNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isSorted(boolean)": "formatting fixes perhttps://patch-diff.githubusercontent.com/raw/apache/commons-lang/pull/128.diffcrlf -> lfjavadoc: fix typo but working is still awkward.implements : add a method to arrayutils for removing all occurrences of a given element. thanks to haiyang li. - add issorted() to arrayutils. patch supplied by james sawle.  in github.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.getDateInstance(int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.escapeRegex(StringBuilder,String,boolean)": "add explict default case and  fastdateparser could use \\q \\e to quote regexestrailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.Iso8601_Rule.appendTo(Appendable,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.determineTypeArguments(Class,ParameterizedType)": "validation",
  "src/main/java/org/apache/commons/lang3/reflect/ConstructorUtils.java@org.apache.commons.lang3.reflect.ConstructorUtils.invokeExactConstructor(Class,Object)": "a bit of dog food and a lot of javadoc tweakageadd final modifier to local variables.[] constructorutils.invoke*(*, object... args) variants cannot handle null valuesreview and cleanup javadoc in constructorutilsmove/comment suppresswarnings(unchecked)/refactor surrounding code",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.getFragmentInDays(Calendar,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesmake use of existing timeunit class to manage time units.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isSorted(T,Comparator)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesformatting fixes perhttps://patch-diff.githubusercontent.com/raw/apache/commons-lang/pull/128.diffcrlf -> lfjavadoc: fix typo but working is still awkward. - add issorted() to arrayutils. patch supplied by james sawle.  in github.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.KeyValue(String,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.parseObject(String,ParsePosition)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.CONST(boolean)": "make sure placement of curly braces is consistent[] introduce const() methods to prevent javac from inlining constants",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.nullToEmpty(long)": "crlf -> lfjavadoc: fix typo but working is still awkward.use isempty() where possible. thanks to james sawle for pointing this out.minor code simplificationadding nulltoempty methods to arrayutils per  and levon karayan's patch. ",
  "src/main/java/org/apache/commons/lang3/concurrent/ThresholdCircuitBreaker.java@org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker.ThresholdCircuitBreaker(long)": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.reverse(boolean)": "crlf -> lfjavadoc: fix typo but working is still awkward.[] add arrayutils.reverse(array, from, to) methods.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.compareIgnoreCase(String,String,boolean)": "merge branch 'fix-': add compare methods in stringutilsthis  from github. add null safe compare methods in stringutils :  - stringutils.compare(string str1, string str2);  - stringutils.compare(string str1, string str2, boolean nullisless);  - stringutils.compareignorecase(string str1, string str2);  - stringutils.compareignorecase(string str1, string str2, boolean nullisless);",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.getGenericComponentType()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.asWriter()": ": add zero copy write method to strbuilder; : add zero copy read method to strbuilder. thanks to mikhail mazursky.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.overlay(String,String,int,int)": "sort members.[github] commons-lang pull request : intellij idea refactorings..add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/tuple/ImmutablePair.java@org.apache.commons.lang3.tuple.ImmutablePair.emptyArray()": "[] add empty_array constants to classes inorg.apache.commons.lang3.tuple",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.wildcardType()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.UnpaddedNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.toCalendar(Date)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd dateutils.tocalendar(date, timezone)add final modifier to local variables.adding tocalendar method per 632",
  "src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java@org.apache.commons.lang3.reflect.FieldUtils.readStaticField(Class,String,boolean)": "a bit of dog food and a lot of javadoc tweakage[] add fieldutils getdeclaredfields() to return all the fields defined in the given class and super classes.add final modifier to local variables.checkstyle",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.format(Date)": "change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. applying my fix to , and mikael's test case; fixing the fastdateformat to properly include the locale when formatting a date",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.appendDetail(StringBuffer,String,Object)": "extract logic for checking string representation of objects into separate methodsformat source codevariable names should follow naming conventionsmodified appenddetail method for object value in jsontostringstyle classfix the jsontostringstyle:except number types and boolean type, all other types in java should be 'appendasstring': add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.TextStrategy(int,Calendar,Locale)": " - tolowercase should use locale, additional unit tests for case-insensitive matching - fastdateparser should be case insensitive",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeElements(double,double)": "remove redundant type arguments. simplify arrayutils removeelements by using newdecrementandget() method: improve arrayutils removeelements time complexity to o(n) ()based on patch submitted by jeffery yuancrlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables. arrayutils removeelements methods use unnecessary hashseteliminate conversion of bitset to int[] arrayutils removeelements methods use unnecessary hashsetreplace hashset with bitset (less memory; faster) arrayutils removeelements methods clone temporary index arrays unnecessarilyreduce number of created arrays[] complement arrayutils.addall() variants with by-index and by-value removal methods",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.updateCheckIntervalData(CheckIntervalData,CheckIntervalData)": "add final modifier to method parameters.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.format(Date,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.appendDetail(StringBuffer,String,char)": "fix the jsontostringstyle:except number types and boolean type, all other types in java should be 'appendasstring'",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.getTimeZone()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.getValueDelimiterMatcher()": "[] strsubstitutor now supports the declaration of default values for the variables to be replaced. thanks to woonsan ko for the patch.",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.min(float,float,float)": "fixing crlfsstatement unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/LocaleUtils.java@org.apache.commons.lang3.SyncAvoid.availableLocaleSet()": "use concurrent instead of synchronization; javadoc",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.parseObject(String,ParsePosition)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.extractIndices(HashSet)": "reduce number of created arrays",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.endsWithAny(CharSequence,CharSequence)": "sort members.: stringutilsstartswithany/endswithany is case sensitive - documented as case insensitive ()improve the documentation and introduce more test cases that verify the documented behaviors.patch by matthew bartenschlag: bring static method references in stringutils to consistent style. thanks to alex yurshaadd final modifier to local variables.convert to java 5 enhanced loops. adding green regionmatches implementation and moving endswith and startswith methods to use it; thus giving them charsequence based apis. 687",
  "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java@org.apache.commons.lang3.text.translate.EntityArrays.HTML40_EXTENDED_ESCAPE()": "make sure placement of curly braces is consistent",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.typeErasure(Throwable)": " added alternative checked exception wrapping/unwrapping methodsability to throw checked exceptions without declaring them",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(Calendar,Calendar,int)": "add final modifier to local variables.: add truncatedequals and truncatedcompareto",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(Type)": "removes unnecessary class reference of static method calls which are declared in the same classuse final consistently. [] new type util features",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.bytesToLong(byte,int,long,int,int)": "code clean-up for checkstyle.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.simpleQuote(StringBuilder,String)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateparser too strict on abbreviated short month symbolsadd final modifier to local variables.format. fastdateparser_timezonestrategytesttesttimezonestrategypattern fails on windows with german localereimplementing 1107",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.getNextStrategy()": "add final modifier to local variables.format.statement unnecessarily nested within else clause.\\refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.applyRules(Calendar,StringBuffer)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(Object,Object,String)": "more varargs-related updates",
  "src/main/java/org/apache/commons/lang3/tuple/Triple.java@org.apache.commons.lang3.tuple.Triple.getMiddle()": "[] add empty_array constants to classes inorg.apache.commons.lang3.tuple",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.createInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.startsWithAny(CharSequence,CharSequence)": "sort members.: stringutilsstartswithany/endswithany is case sensitive - documented as case insensitive ()improve the documentation and introduce more test cases that verify the documented behaviors.patch by matthew bartenschlag: bring static method references in stringutils to consistent style. thanks to alex yurshaadd final modifier to local variables.convert to java 5 enhanced loops. adding green regionmatches implementation and moving endswith and startswith methods to use it; thus giving them charsequence based apis. 687",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.TimeZoneNameRule(TimeZone,Locale,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces fastdateformat's \"z\" pattern does not respect timezone of calendar instances passed to format()applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.format(long,B)": ": fastdateprinter generates date objects wastefullyfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.AlwaysTruePredicate.findThreadsByName(String)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.hashCode()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/CharEncoding.java@org.apache.commons.lang3.CharEncoding.isSupported(String)": "add final modifier to local variables.use new feature for implementing issupported(); javadoc",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategy.getClosingThreshold()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.MemberUtils.isMatchingExecutable(Executable,Class)": "[] constructorutils.invokeconstructor(class, object...)regressionadd final modifier to local variables.: add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.getRule(int)": "removes unnecessary class reference of static method calls which are declared in the same classmake sure lines in files don't have trailing white spaces and remove all trailing white spacesreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.createPattern(String)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.getStrategy(int)": "make checkstyle happy: add missing javadocreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.createBigInteger(String)": "make whitespace use before tokens consistent and add a checkstyle rule to enforce it.fixing crlfsstatement unnecessarily nested within else clause. duplicated \"0x\" check in createbiginteger in numberutils numberutilscreatebiginteger does not allow for hex and octal numbers",
  "src/main/java/org/apache/commons/lang3/CharSet.java@org.apache.commons.lang3.CharSet.getInstance(String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.merge charset getinstance/constructor string[] and string forms to string...",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.defaultString(String,String)": "sort members.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.format(Date)": "change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. applying my fix to , and mikael's test case; fixing the fastdateformat to properly include the locale when formatting a date",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.StrategyAndWidth(Strategy,int)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.TimeZoneNameRule(TimeZone,Locale,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces fastdateformat's \"z\" pattern does not respect timezone of calendar instances passed to format()applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java@org.apache.commons.lang3.time.DurationFormatUtils.format(Token,long,long,long,long,long,long,long,boolean)": " - fix findbugs warnings in durationformatutilsuse final consistently. use enhanced for loop failing tests with java 8 b128 durationformatutils does not handle large durations correctly",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.subarray(char,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.getInstance()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.append(StrBuilder,int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.Iso8601_Rule.Iso8601_Rule(int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.chomp(String,String)": "sort members.make whitespace use after tokens consistent and add a checkstyle rule to enforce it.deprecating chomp(string, string) per verneri \u00e5berg's report in 748",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.isWhitespace(CharSequence)": "sort members.[github] commons-lang pull request : intellij idea refactorings..add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.isRegistered(Object)": "add final modifier to local variables.[] part 2: refactor tostringstyle and tostringbuildertest to verify that we are unsetting the registry when no longer needed",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.add(byte,int,byte)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.getDateTimeInstance(int,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.ordinalIndexOf(String,String,int)": "moving the indexof(string, string, int) method above the ordinalindexof methods to put it with its overloaded peers. 590",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.append(StringBuffer,String,Object,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/LocaleUtils.java@org.apache.commons.lang3.SyncAvoid.countriesByLanguage(String)": "replaces 'size() == 0' and 'length() == 0' with 'isempty()'[github] commons-lang pull request : intellij idea refactorings..remove redundant type arguments.add final modifier to local variables.eat own dog food: stringutilsisempty(string) and replace some but not all stringlength() == 0 with stringisempty()use concurrent instead of synchronization; javadoc",
  "src/main/java/org/apache/commons/lang3/CharSetUtils.java@org.apache.commons.lang3.CharSetUtils.keep(String,String)": "sort members and clean up comments.use stringisempty() instead of stringlength() == 0eat own dog food: stringutilsisempty(string) and replace some but not all stringlength() == 0 with stringisempty()merge charsetutils string[] and string method forms to string...",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.join(List,char,int,int)": "sort members.[] stringutils.join() with support for list<?> withconfigurable start/end indices.",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.hexsToLong(String,int,long,int,int)": "code clean-up for checkstyle.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.contains(String,int)": "rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.format(Object,StringBuffer,FieldPosition)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.getName(Class,String)": "[] add methods to classutils to get various forms of classnames in a null-safe manner",
  "src/main/java/org/apache/commons/lang3/math/Fraction.java@org.apache.commons.lang3.math.Fraction.doubleValue()": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isEmpty(int)": "crlf -> lfjavadoc: fix typo but working is still awkward.simplify isempty be reusing getlengths/if (foo) { return true; } return false;/return foo;/g",
  "src/main/java/org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.java@org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.isOpen(State)": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.boolArrayToByte(boolean,int,byte,int,int)": "use better method names. document possible arrayindexoutofboundsexception and stringindexoutofboundsexception.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.append(StringBuffer,int,int)": "add final modifier to local variables.<action issue=\"\" type=\"add\">strbuilder should support stringbuilder as an input parameter</action>",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.getArrayComponentType(Type)": "add final modifier to local variables.add methods for inspecting array types",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategy.checkState()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategy.now()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.getLocale()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.getStrategy(char,int,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y') partial: implement format 'u' for fastdateformat, day number of weekrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.appendFullDigits(Appendable,int,int)": "add final modifier to local variables.: fastdateprinter memory allocation regressionfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.TimeZoneNameRule(TimeZone,Locale,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces fastdateformat's \"z\" pattern does not respect timezone of calendar instances passed to format()applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.build()": "strbuilder implements builder; provide tostringbuilder as tostringbuffer",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy(Locale)": "refactor \"gmt\" magic string.add a default case to switch to appease findbugs: nullpointerexception in fastdateparser$timezonestrategy ()replicate the fix for 1186add final modifier to local variables.remove redundant type arguments. fastdateparser_timezonestrategytesttesttimezonestrategypattern fails on windows with german localereimplementing 1107 fix parsing edge cases in fastdateparserrevert muddled commit - number percentage formatting with fractional digits fastdateparser error - timezones not handled correctlyuse final consistently. : test failure in fastdateparsertest and fastdateformat_parsertest when building with jdk8. thanks to bruno p. kinoshita and henri yandell for their help in fixing this issue.add final modifier to local variables.trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.replaceAll(String,String,String)": "sort members.[] add regexutils class instead of overloadinh methods instringutils that take a regex to take precompiled pattern.merge branch 'fix-': add replace by regular expression methods in stringutilsthis  from github.: add null safe methods in stringutils to replace by regular expression :  - stringutils.replaceall(string, string, string)  - stringutils.replacefirst(string, string, string)",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.different(double,double)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.getTimeZone()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/LocaleUtils.java@org.apache.commons.lang3.SyncAvoid.availableLocaleList()": "use concurrent instead of synchronization; javadoc",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.reverse(short)": "crlf -> lfjavadoc: fix typo but working is still awkward.[] add arrayutils.reverse(array, from, to) methods.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.indexOf(Object,Object,int)": "add  to changes.xml: arrayutilscontains and arrayutilsindexof should compare objects with different typescrlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.appendDigits(Appendable,int)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.lastIndexOf(CharSequence,CharSequence,int)": "sort members.moving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils classreplacing some of the older code. when performing a mutation operation (even if it's on an immutable by returning a new instance), string should go in and string should come out. when performing a non-mutation operation, charsequence should be passed in. 687moving lastindexof, contains, containswhitespace, indexofany, containsany, indexofanybut, containsonly, containsnone and substring over to using charsequences for parameters. 687",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.Range.is(T,Comparator)": "refactor range with lots of new methods",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.StrategyAndWidth(Strategy,int)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.appendWithSeparators(Iterator,String)": ": update java requirement from java 6 to 7replace usage of deprecated objectutilstostring with objectstostring: fix deprecation warningseat own dog food: separator == null ? \"\" : separator->objectutils.tostring(separator)remove superfluous parens.",
  "src/main/java/org/apache/commons/lang3/LocaleUtils.java@org.apache.commons.lang3.SyncAvoid.parseLocale(String)": "replaces 'size() == 0' and 'length() == 0' with 'isempty()': localeutilstolocale does not support language followed by un m.49 numeric-3 area code followed by variantintroduce some more local variables to make the code better readableremove initial if statement by adding an early returnreplace switch statement with if-else blockextract some helper methods to make the code better readable",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.parse(String)": "add final modifier to local variables.allow access to parsedpattern for test purposesmake parseexception text similar to that thrown by simpledateformat fastdateparser does not handle non-gregorian calendars properlyuse calendargetdisplaynames() instead of dateformatsymbolsgeteras()applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.getDateTimeInstance(int,int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/AnnotationUtils.java@org.apache.commons.lang3.AnnotationUtils.appendDetail(StringBuffer,String,Object)": "use builder apis for annotationutils.tostring()",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.wildcardTypeToString(WildcardType)": "typeutils wildcard fixes[] new type util features",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.nullToEmpty(Float)": "crlf -> lfjavadoc: fix typo but working is still awkward.use isempty() where possible. thanks to james sawle for pointing this out.minor code simplificationadding nulltoempty methods to arrayutils per  and levon karayan's patch. ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.getLevenshteinDistance(CharSequence,CharSequence)": "sort members.add final modifier to local variables.: stringutilsgetlevenshteindistance reduce memory consumptionminimal clean-upadd changes.xml entry: stringutilsgetlevenshteindistance reduce memory consumption ()add final modifier to local variables.ws onlytab police (and trailing spaces)change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.TwelveHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.parse(String)": "add final modifier to local variables.format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.deleteAll(char)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.toArray(Map)": "trailing spaces fastdateparser does not handle non-gregorian calendars properlyuse calendargetdisplaynames() instead of dateformatsymbolsgeteras()",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.getDateInstance(int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java@org.apache.commons.lang3.CsvEscaper.escapeXml11(String)": ": add methods for removing all invalid characters according to xml 1.0 and xml 1.1 in an input string to stringescapeutils. thanks to adam hooper",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.appendTo(StringBuffer,Calendar)": "zz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.toString()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shift(Object,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.swap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.createFloat(String)": "fixing crlfsstatement unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.readObject(ObjectInputStream)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.nullToEmpty(Object)": "crlf -> lfjavadoc: fix typo but working is still awkward.use isempty() where possible. thanks to james sawle for pointing this out.[] add arrayutilsnulltoempty(class<?>[])minor code simplificationadding nulltoempty methods to arrayutils per  and levon karayan's patch. ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.replace(int,int,String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java@org.apache.commons.lang3.time.DurationFormatUtils.format(Token,int,int,int,int,int,int,int,boolean)": "add final modifier to local variables.add final modifier to method parameters.stringbuffer => stringbuilder where being used as a local-only buffer",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses(List)": "remove redundant type arguments.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.append(StringBuffer,String,boolean,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.createPattern(String)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.setNullText(String)": "use stringisempty() instead of stringlength() == 0",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.truncate(Object,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.Iso8601_Rule.applyRules(Calendar,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: resurrect applyrules(java.util.calendar, java.lang.stringbuffer) for binary compatibility",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategy.getOpeningInterval()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.replaceIn(StringBuilder)": " strsubstitutor does not support stringbuilder or charsequence",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.compare(Map,Map)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toByte(String)": "fixing crlfsstatement unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.format(Calendar)": "4fastdateformat apis that use a stringbuilderapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.EventListenerSupport.fire()": "changing eol-style to native.misc. event utils.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.equals(StrBuilder)": ": strbuilder.equals(strbuilder) doesn't check for null inputsadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.hashCode()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.NamePredicate.findThreads(ThreadPredicate)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shuffle(double)": ": added shuffle methods to arrayutils",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.EventListenerSupport.readObject(ObjectInputStream)": "remove redundant type arguments.it's confusing to re-use field names locallyadd final modifier to local variables.document some @suppresswarning annotationsadd serialization support to eventlistenersupport",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadUtils.getAllThreads()": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java@org.apache.commons.lang3.text.translate.UnicodeEscaper.below(int)": "reverting r1090111 - moving the text.translate escapers back from using range to replicating parts of the range api. see the list for details ('unnecessary boxing in stringescapeutils etc'), the move to range was an uncomfortable fit. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.getDateTimeInstance(int,int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.FastDateFormat(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.count(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.parsePattern()": "adjust fastdateformat for java 7 behavior regarding format of the year pattern ().refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.appendTo(StringBuffer,Calendar)": "zz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.swap(long,int,int,int)": "add final modifier to local variables.crlf -> lfjavadoc: fix typo but working is still awkward.merge branch '': inconsistent behavior of swap for malformed inputs. thanksto adrian ber.consistent treatment for negative indices for swap methodexamples added in javadoctabs replaced by spacesnew tests addedswap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.TimeZoneStrategy(Calendar,Locale)": ": fastdateformat doesn't respect summer daylight in some localized stringsmerge branch 'master' of https://github.com/nickmanley/commons-langthis  fix nullpointerexception in fastdateparser$timezonestrategyfix nullpointerexception in fastdateparser$timezonestrategyrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/CharRange.java@org.apache.commons.lang3.CharacterIterator.remove()": "adding vincent ricard's patch to charrange.java providing an iterator that lets you walk the chars in the range. 454",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyClosed.createStrategyMap()": "add final modifier to local variables.remove redundant type arguments.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.TwentyFourHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.JsonToStringStyle()": ": add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.format(Date,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.format(Date)": "change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. applying my fix to , and mikael's test case; fixing the fastdateformat to properly include the locale when formatting a date",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.getDateInstance(int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java@org.apache.commons.lang3.concurrent.ConcurrentUtils.constantFuture(T)": "remove redundant type arguments.",
  "src/main/java/org/apache/commons/lang3/AnnotationUtils.java@org.apache.commons.lang3.AnnotationUtils.isValidAnnotationMemberType(Class)": "move private method to endannotationutils",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.ProxyInvocationHandler.createProxy(Class,ClassLoader)": "allow subclass custom invocation handlingadd serialization support to eventlistenersupport",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.getTypeArguments(ParameterizedType,Class,Map)": "explicit type parameters can be removedremove redundant type arguments.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.getStrategy(char,int,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y') partial: implement format 'u' for fastdateformat, day number of weekrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.toString(boolean,String,String)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.ws",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.createPattern(String)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/AnnotationUtils.java@org.apache.commons.lang3.AnnotationUtils.hashMember(String,Object)": "add final modifier to local variables.additional javadoc; remove illegalargumentexception from throws clauseadd hashcode and tostring methods to annotationutils, plus tests",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.hashCode()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.addAll(float,float)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/math/Fraction.java@org.apache.commons.lang3.math.Fraction.getFraction(int,int)": "format to 120 line length.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.getTimeInstance(int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/exception/ContextedException.java@org.apache.commons.lang3.exception.ContextedException.getFirstContextValue(String)": "refactor exceptioncontext and derived. context contract stipulates a sequence of label-value entries with support for multiple entries for the same label.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.checkState()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.getDateTimeInstance(int,int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.UnpaddedNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java@org.apache.commons.lang3.builder.HashCodeBuilder.append(byte)": "add final modifier to local variables.convert to java 5 enhanced loops. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.CharacterLiteral(char)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.getName(Object,String)": "[] add methods to classutils to get various forms of classnames in a null-safe manner",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.append(StringBuffer,String,boolean,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.equals(StrBuilder)": ": strbuilder.equals(strbuilder) doesn't check for null inputsadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java@org.apache.commons.lang3.builder.DiffBuilder.append(String,float,float)": "use validateistrue to validate arguments: there should be a differencebuilder with a reflectiondifferencebuilder implementation",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.getRule(int)": "removes unnecessary class reference of static method calls which are declared in the same classmake sure lines in files don't have trailing white spaces and remove all trailing white spacesreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/RandomUtils.java@org.apache.commons.lang3.RandomUtils.nextDouble(double,double)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd sugar to randomiutils: new randumutils class. thanks to duncan jones",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.format(Date)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.remove(short,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.getNextStrategy()": "add final modifier to local variables.format.statement unnecessarily nested within else clause.\\refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.format(Calendar,B)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.isNextNumber()": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.Range.isNaturalOrdering()": "refactor range with lots of new methods",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.toCharArraySequence(CharSequence)": "implemented the native charsequence version of tochararrayreplacing some of the older code. when performing a mutation operation (even if it's on an immutable by returning a new instance), string should go in and string should come out. when performing a non-mutation operation, charsequence should be passed in. 687moving lastindexof, contains, containswhitespace, indexofany, containsany, indexofanybut, containsonly, containsnone and substring over to using charsequences for parameters. 687",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.createKeyValues(String,String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.build()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.modify(int)": " fastdateparser does not handle excess hours as per simpledateformattrailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.appendSeparator(char,char)": "fix brace positions",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.escapeRegex(StringBuilder,String,boolean)": "add explict default case and  fastdateparser could use \\q \\e to quote regexestrailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.split(String,String,int)": "sort members.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.parse(String,ParsePosition)": "format.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names: dateutilstest.testlang530 fails for some timezones",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.format(Object)": "fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.substringAfterLast(String,String)": "sort members.add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)use index_not_found instead of magic number.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.TextField(int,String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.lastIndexOf(String,String,int)": "rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687use index_not_found instead of magic number.",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.intToShortArray(int,int,short,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesscope of local variabel shift can be narrowerformat to 120 line length.add final modifier to method parameters.use better method names. document possible arrayindexoutofboundsexception and stringindexoutofboundsexception.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.prependIfMissing(String,CharSequence,boolean,CharSequence)": "sort members.applying joanne's subsequent patch from  making appendifmissing use the same logic for null as endswith (by reusing endswith). applying joanne polsky's patch adding appendifmissing/prependifmissing methods to stringutils []",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.indexOf(StrMatcher,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.equals(Object)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.DayInWeekField.getRule(int)": "removes unnecessary class reference of static method calls which are declared in the same classmake sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.getInstance(String,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/LocaleUtils.java@org.apache.commons.lang3.LocaleUtils.availableLocaleList()": "use concurrent instead of synchronization; javadoc",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.getFieldWidth()": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.format(Date,StringBuffer)": "change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.getInstance(String,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.StrategyAndWidth(Strategy,int)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.appendInternal(StringBuffer,String,Object,boolean)": "tab alignment[] clear threadlocal recursion registry (compatibly with existing tests, first pass)",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.iterator(Object,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/SystemUtils.java@org.apache.commons.lang3.SystemUtils.getSystemProperty(String)": "[] org.apache.commons.lang3.systemutils should not write tosystem.err.add final modifier to local variables.- fix () systemutils.getjavaversionasfloat throws stringindexoutofboundsexception on android runtime/dalvik vm- refactor for unit testing.- remove odd test code which is copy and pasted from systemutils, which therefore does not test anything.",
  "src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java@org.apache.commons.lang3.exception.DefaultExceptionContext.setContextValue(String,Object)": "remove add and set methods of exceptioncontext types taking a pair. format entries with index. improve javadoc. add serialization test.refactor exceptioncontext and derived. context contract stipulates a sequence of label-value entries with support for multiple entries for the same label.",
  "src/main/java/org/apache/commons/lang3/LocaleUtils.java@org.apache.commons.lang3.LocaleUtils.countriesByLanguage(String)": "replaces 'size() == 0' and 'length() == 0' with 'isempty()'[github] commons-lang pull request : intellij idea refactorings..remove redundant type arguments.add final modifier to local variables.eat own dog food: stringutilsisempty(string) and replace some but not all stringlength() == 0 with stringisempty()use concurrent instead of synchronization; javadoc",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.getThrowableCount(Throwable)": "checkstyle: remove trailing white spaces on all lines.sort by method name.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.escapeRegex(StringBuilder,String,boolean)": "add explict default case and  fastdateparser could use \\q \\e to quote regexestrailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.boolsBeM0ToHexDigit(boolean,int)": "code clean-up for checkstyle.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.use lowercase presentation for hex values as it is done in the jdk.use jdk functionality where available.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.getCache(int)": "remove redundant type arguments.format.tab police: fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.toCharArray()": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.deleteAll(String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.indexOfAny(String,String)": "rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687use index_not_found instead of magic number.change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.appendEnd(StringBuffer,Object)": "[github] commons-lang pull request : intellij idea refactorings..",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.BasicThreadFactory.getUncaughtExceptionHandler()": "adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.setExcludeFields(String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: recursive and reflective equalsbuilder ()patch by yathos ug",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.DayInWeekField.parsePattern()": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove redundant type arguments.: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y') partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/SystemUtils.java@org.apache.commons.lang3.SystemUtils.isJavaVersionAtLeast(int)": "- fix () systemutils.getjavaversionasfloat throws stringindexoutofboundsexception on android runtime/dalvik vm- refactor for unit testing.- remove odd test code which is copy and pasted from systemutils, which therefore does not test anything.",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadUtils.getAllThreadGroups()": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.setReflectUpToClass(Class)": ": recursive and reflective equalsbuilder ()patch by yathos ug",
  "src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java@org.apache.commons.lang3.builder.CompareToBuilder.append(boolean,boolean)": "removes redundant '+' signpmd: remove useless parentheses",
  "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java@org.apache.commons.lang3.StringEscapeUtils.escapeJson(String)": "added escape/unescapejson methods per maurizio cucchiara's patch in 797",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.extractTypeArgumentsFrom(Map,TypeVariable)": "use final consistently. [] new type util features",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.parameterizedTypeToString(ParameterizedType)": " - stackoverflowerror on typeutils.tostring(...) for a generic return type of enum.valueof ()[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.DayInWeekField.DayInWeekField(NumberRule)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.appendFullDigits(Appendable,int,int)": "add final modifier to local variables.: fastdateprinter memory allocation regressionfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.toBoolean(String,String,String)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.fix javadoc bug; improve implementation and tests[] removed unnecessary elses and use of ternary operator with primitive boolean consequences e.g. (some boolean expression) ? true : false",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.InitStripAccents.removeAccentsJava6(CharSequence)": " use iod for stripaccent init",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.getDateInstance(int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.notBlank(T)": ": added validstate()",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.isAnyBlank(CharSequence)": "sort members.make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: stringutilsisanyempty and isanyblank should return false for an empty array (): add stringutilsisanynotempty and isanynotblank ()use final consistently. applying alexander muthmann's patch from , adding isblank/isempty charsequence... variants",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.hashCode()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.getEventCount()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.and(Boolean)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.add final modifier to local variables.[] add booleanutils.and/or varargs methods to complement xor",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.getLocaleSpecificStrategy(int,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove unused constructor parameterformat.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display namesrename textstrategy to caseinsensitivetextstrategy per sebb's suggestion",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.countMatches(CharSequence,CharSequence)": "sort members.moving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils classmoving countmatches, ordinalindexof and lastordinalindexof over to a charsequence-based api. 687",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.AlwaysTruePredicate.findThreadById(long)": "fixing crlfsstatement unnecessarily nested within else clause.incorporated feedback from peteradd threadutils",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.defaultIfBlank(T,T)": "[] add null-safe stringutils apis to wrapstringgetbytes([charset|string]).</action>sort members.: bring static method references in stringutils to consistent style. thanks to alex yurshaadding stringutils.defaultifblank(string, string). requested by adam dyga, patch from nicklas holm. 655",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.FastDateParser(String,TimeZone,Locale)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names: dateutilstest.testlang530 fails for some timezonesrestore binary compartibility",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.appendln(String,Object)": "[] create strbuilder apis similar to string.format(string, object...)",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.TwentyFourHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.isCreatable(String)": ": numberutils.isnumber assumes number starting with zero is octal ()make sure lines in files don't have trailing white spaces and remove all trailing white spacespmd: remove useless parentheses: replacing system call for java 1.6 to systemutils.is_java_1_6: cleaning up checkstyle warnings: whitespace, line length: better naming and java 6 specifics around handling a leading +",
  "src/main/java/org/apache/commons/lang3/SerializationUtils.java@org.apache.commons.lang3.ClassLoaderAwareObjectInputStream.clone(T)": "remove redundant modifiers (support recent checkstyle versions) ()add final modifier to local variables.use try-with-resources.formating.<action issue=\"\" type=\"add\" dev=\"ggregory\">add serializationutils.roundtrip(t extends serializable) to serialize then deserialize</action>add final modifier to local variables.suppress generic warningapplying sven ludwig's patch from . this modifies the serializationutils.clone method to use the threadcontextloader if it is unable to find a class using the object's current classloader. this should (hopefully) help with weblogic and tomcat situations where lang is outside the web-inf for some reason (likely user error with tomcat, by design for weblogic)",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shift(Object,int,int,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.crlf -> lfjavadoc: fix typo but working is still awkward.merge branch '': inconsistent behavior of swap for malformed inputs. thanksto adrian ber.new test caseexplanations about algorithmtabs replaced by spacesnew tests addedswap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.WeekYear.format(long)": ": fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/text/StrMatcher.java@org.apache.commons.lang3.text.CharSetMatcher.charSetMatcher(String)": "eat own dog food: stringutilsisempty(string) and replace some but not all stringlength() == 0 with stringisempty()",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.UnpaddedNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/WordUtils.java@org.apache.commons.lang3.text.WordUtils.wrap(String,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.FastDateParser(String,TimeZone,Locale)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names: dateutilstest.testlang530 fails for some timezones",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.AlwaysTruePredicate.findThreads(ThreadPredicate)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.deleteFirst(String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.substring(CharSequence,int)": "removing the unnecessary sequencetostring methodmoving lastindexof, contains, containswhitespace, indexofany, containsany, indexofanybut, containsonly, containsnone and substring over to using charsequences for parameters. 687",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.getLowerBounds()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.applyRulesToString(Calendar)": "4fastdateformat apis that use a stringbuilderrefactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(TypeVariable)": "validationadd final modifier to local variables.[] vastly expanded typeutils",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.getLowerBounds()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.minimizeCapacity()": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.format(Date,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.setSizeStartText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(StringBuffer)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/LocaleUtils.java@org.apache.commons.lang3.LocaleUtils.isISO3166CountryCode(String)": "extract some helper methods to make the code better readable",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.setContentStart(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/CharSequenceUtils.java@org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(CharSequence,CharSequence,int)": "simplify code; javadocformattingmoving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils class",
  "src/main/java/org/apache/commons/lang3/text/WordUtils.java@org.apache.commons.lang3.text.WordUtils.capitalizeFully(String,char)": "add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)eat own dog food: call stringutils.isempty().",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.getDisplayNames(int,Calendar,Locale)": " fastdateparser could use calendar.getdisplaynames for all text fieldsremove unnecessary keyvalue instances: fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.greaterObject(Comparable,T)": ": new methods for lang3.validate ()fixed method names; fixed differentobject to use object.equals",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.getLocaleSpecificStrategy(int,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove unused constructor parameterformat.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display namesrename textstrategy to caseinsensitivetextstrategy per sebb's suggestion[] use the cache in fastdateparser correctly.add final modifier to local variables.tab police fastdateparser could use calendar.getdisplaynames for all text fieldsremove unnecessary keyvalue instances: fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/exception/ContextedException.java@org.apache.commons.lang3.exception.ContextedException.setContextValue(Pair)": "refactor exceptioncontext and derived. context contract stipulates a sequence of label-value entries with support for multiple entries for the same label.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.isJsonObject(String)": "extract logic for checking string representation of objects into separate methods",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.contains(char)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadUtils.getSystemThreadGroup()": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java@org.apache.commons.lang3.text.ExtendedMessageFormat.equals(Object)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.prevent redundant modifiersadd final modifier to local variables. extendedmessageformat doesn't override equals(object)",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.StrSubstitutor(StrLookup,StrMatcher,StrMatcher,char)": "add missing since tags for strsubstitutor; wrap lines longer than 80 chars[] strsubstitutor now supports the declaration of default values for the variables to be replaced. thanks to woonsan ko for the patch.add final modifier to method parameters.fix raw types",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.startsWithIgnoreCase(CharSequence,CharSequence)": "sort members.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.swap(byte,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.merge branch '': inconsistent behavior of swap for malformed inputs. thanksto adrian ber.consistent treatment for negative indices for swap methodswap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.genericArrayType(Type)": "validation[] new type util features",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.CheckIntervalData.createStrategyMap()": "add final modifier to local variables.remove redundant type arguments.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.letterPattern(char)": "add final modifier to local variables.format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.getTimeZone()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.Executable.isVarArgs()": "make sure placement of curly braces is consistent: add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy(int,Calendar,Locale)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.: fastdateformat doesn't respect summer daylight in some localized stringsrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display namesuse final consistently. tab policeremove keyvalues map  per sebb's suggestion",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.join(float,char,int,int)": "sort members.extract method.add final modifier to local variables.[] stringutils join apis for primitives.",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.xor(Boolean)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.add final modifier to local variables.ws[] add booleanutils.and/or varargs methods to complement xor[] removed unnecessary elses and use of ternary operator with primitive boolean consequences e.g. (some boolean expression) ? true : false",
  "src/main/java/org/apache/commons/lang3/text/StrLookup.java@org.apache.commons.lang3.text.StrLookup.mapLookup(Map)": "remove redundant type arguments.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.tokenize(char,int,int)": "statements unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.getActualTypeArguments()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java@org.apache.commons.lang3.concurrent.ConstantFuture.handleCause(ExecutionException)": "add final modifier to local variables.[] introduced concurrentruntimeexception and extended the exception handling methods of concurrentutils to support runtime exceptions, too.",
  "src/main/java/org/apache/commons/lang3/CharSetUtils.java@org.apache.commons.lang3.CharSetUtils.modify(String,String,boolean)": "sort members and clean up comments.use final.use foreach loop for arrays ()since the project no longer supports java versions older than 6, it'ssafe to use the enhanced for loop syntax introduced in java 5.this patch employs this syntax where possible to clean up the code.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.getDateInstance(int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java@org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()": ": update java requirement from java 6 to 7replace usage of deprecated objectutilshashcode with objectshashcode extendedmessageformat doesn't override equals(object)",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.hierarchy(Class)": "[] retrieve class hierarchy",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.format(long)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.[] fastdateformat generates date objects wastefully.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/mutable/MutableInt.java@org.apache.commons.lang3.mutable.MutableInt.getAndDecrement()": "add final modifier to local variables. addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.getDateInstance(int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.CONST_BYTE(int)": " - followup incorporating ggregory's doc suggestion, some doc fixes, addition of const_byte() and const_short(), and junit improvements to test doc examples and make sure const_byte() and const_short() throw illegalargumentexception as required.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.ISO8601TimeZoneStrategy(String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java@org.apache.commons.lang3.reflect.FieldUtils.getAllFieldsList(Class)": "revert ; java7 has synthetic fields on integer, jacoco does not yet work with java9: fieldutils should ignore any synthetic fields[github] commons-lang pull request : intellij idea refactorings..remove redundant type arguments.use final consistently. a bit of dog food and a lot of javadoc tweakage[] add fieldutils getallfields() to return all the fields defined in the given class and super classes. alternate impl that splits into two apis, one with an array result, the other with a list.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.readFrom(Readable)": ": add zero copy write method to strbuilder; : add zero copy read method to strbuilder. thanks to mikhail mazursky.",
  "src/main/java/org/apache/commons/lang3/concurrent/Memoizer.java@org.apache.commons.lang3.concurrent.Memoizer.Memoizer(Computable)": ": implementation of a memomizer ()changes suggested in https://github.com/apache/commons-lang/pull/80:- tabs to spaces- use @override- remove unused variables- other minimal clean-ups: implementation of a memomizer ()",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.genericArrayType(Type)": "validation[] new type util features",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.smaller(long,long)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.validateDateNotNull(Date)": "use validateistrue to validate arguments",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.toCharArray(int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.endsWithAny(String,String)": "removing charsequenceutils in favour of putting the code in stringutilsadding shashi kant sharma's implementation of endswithany - 614",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.getName(Class)": "[] add methods to classutils to get various forms of classnames in a null-safe manner",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.xor(boolean)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter. - booleanutils.xor(boolean...) produces wrong resultsadd final modifier to local variables.ws[] add booleanutils.and/or varargs methods to complement xor[] removed unnecessary elses and use of ternary operator with primitive boolean consequences e.g. (some boolean expression) ? true : false",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,double,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toDouble(String)": "fixing crlfsstatement unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.init(Calendar)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.don't need a copy of this field.add final modifier to local variables.remove redundant type arguments.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.midString(int,int)": "reusestatements unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.getPattern()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.CharacterLiteral(char)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.containsNone(CharSequence,char)": "add final modifier to local variables.https://issues.apache.org/jira/browse/ stringutils methods do not handle unicode 2.0+ supplementary characters correctly.change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.append(StrBuilder,int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.reverseDelimited(String,char)": "sort members.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.midString(int,int)": "reusestatements unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.join(Object)": "dropping the concat methods. moving the join(object[]) to join(object...). . . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.appendDisplayNames(Calendar,Locale,int,StringBuilder)": "add final modifier to local variables.remove redundant type arguments.: fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.toStringOnOff(boolean)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.ws",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.TimeZoneNumberRule(boolean,boolean)": "added missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.countMatches(String,String)": "use index_not_found instead of magic number.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toMap(Object)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.remove redundant type arguments.crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.reverting \"generification\" of tomap() method in arrayutils.generifying tomap() method (adding in possibility for type inference on return type).",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.append(StringBuffer,String,float,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeAll(char,int)": ": arrayutils.removeall(object array, int... indices) should do the clone, not its callers ()crlf -> lfjavadoc: fix typo but working is still awkward.[] complement arrayutils.addall() variants with by-index and by-value removal methods",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.simpleQuote(StringBuilder,String)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateparser too strict on abbreviated short month symbolsadd final modifier to local variables.format. fastdateparser_timezonestrategytesttesttimezonestrategypattern fails on windows with german localereimplementing 1107",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.clone(short)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.leftPad(String,int,String)": "sort members.add final modifier to local variables.[] stringutils join with var args. add and use space string constant for \" \".rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.init()": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.StringLiteral(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.parse(FastDateParser,Calendar,String,ParsePosition,int)": "add final modifier to local variables.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.getLocale()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T,T)": ": add arrayutilstostringarray(object[]) methodpatch supplied by igadd final modifier to local variables.remove trailing whitespacescrlf -> lfjavadoc: fix typo but working is still awkward.implements : add a method to arrayutils for removing all occurrences of a given element. thanks to haiyang li.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.setArrayStart(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.wrap(Type)": "provide simple method to wrap a given type to the typed interface",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.TimeZoneStrategy(Locale)": "refactor \"gmt\" magic string.add a default case to switch to appease findbugs: nullpointerexception in fastdateparser$timezonestrategy ()replicate the fix for 1186add final modifier to local variables.remove redundant type arguments. fastdateparser_timezonestrategytesttesttimezonestrategypattern fails on windows with german localereimplementing 1107 fix parsing edge cases in fastdateparserrevert muddled commit - number percentage formatting with fractional digits fastdateparser error - timezones not handled correctly",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.leftPad(CharSequence,int,char)": "moving center, left, leftpad, right, rightpad, mid, uppercase, lowercase and swapcase over to charsequence input. 687",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.createBigDecimal(String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesfixing crlfsstatement unnecessarily nested within else clause.: numberutilscreatenumber - bad behaviour for leading \"--\" ",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.isInnerClass(Class)": "use 1.5 method for determining inner class-ness; null safety is really the only remaining advantage of isinnerclass.  this goes nicely with r919340",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.appendFullDigits(Appendable,int,int)": "add final modifier to local variables.: fastdateprinter memory allocation regressionfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.getInstance(String,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.append(char,int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java@org.apache.commons.lang3.concurrent.ConstantInitializer.get()": "[] added constantinitializer class",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.getDateInstance(int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.difference(String,String)": "sort members.add final modifier to local variables.use index_not_found instead of magic number.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.firstNonNull(T)": ": added methods to objectutils class to check for null elements in the array ()add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.appendFieldStart(StringBuffer,String)": " - jsontostringstyle does not escape string namesjsontostringstyle: improve private constant name and remove wrong comment: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.format(Object,StringBuffer,FieldPosition)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.init(Calendar)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.don't need a copy of this field.add final modifier to local variables.remove redundant type arguments.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.Iso8601_Rule.DayInWeekField(NumberRule)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/exception/ContextedException.java@org.apache.commons.lang3.exception.ContextedException.addValue(String,Object)": "fix defaultexceptioncontext.addvalue that overwrites information in a recursive situation (). allow explicit replacement of a label with the new replacevalue methods.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(Type,Class,Map)": "validation[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.compare(Map,Map)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.InitStripAccents.indexOfIgnoreCase(CharSequence,CharSequence,int)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.remove(byte,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java@org.apache.commons.lang3.exception.ContextedRuntimeException.getFormattedExceptionMessage(String)": "javdoc and minor tweaks to contexted exception",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.contains(double,double,double)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java@org.apache.commons.lang3.text.translate.NumericEntityEscaper.translate(int,Writer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.reverting r1090111 - moving the text.translate escapers back from using range to replicating parts of the range api. see the list for details ('unnecessary boxing in stringescapeutils etc'), the move to range was an uncomfortable fit. moving text translation classes to the range class for its configuration",
  "src/main/java/org/apache/commons/lang3/concurrent/ThresholdCircuitBreaker.java@org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker.checkState()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.getTimeInstance(int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.SimpleDateFormatStrategy.addRegex(FastDateParser,StringBuilder)": " fastdateparser does not handle non-gregorian calendars properly ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.TimeZoneStrategy(Locale)": "refactor \"gmt\" magic string.add a default case to switch to appease findbugs: nullpointerexception in fastdateparser$timezonestrategy ()replicate the fix for 1186add final modifier to local variables.remove redundant type arguments. fastdateparser_timezonestrategytesttesttimezonestrategypattern fails on windows with german localereimplementing 1107 fix parsing edge cases in fastdateparserrevert muddled commit - number percentage formatting with fractional digits fastdateparser error - timezones not handled correctlyuse final consistently. : test failure in fastdateparsertest and fastdateformat_parsertest when building with jdk8. thanks to bruno p. kinoshita and henri yandell for their help in fixing this issue.add final modifier to local variables.trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.parseObject(String,ParsePosition)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(Type,Map)": "add final modifier to local variables.[] vastly expanded typeutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.appendDigits(StringBuffer,int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.UnpaddedMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.setArrayEnd(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/CharRange.java@org.apache.commons.lang3.CharRange.iterator()": "adding vincent ricard's patch to charrange.java providing an iterator that lets you walk the chars in the range. 454",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.hashCode()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.TimeZoneNameRule(TimeZone,Locale,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces fastdateformat's \"z\" pattern does not respect timezone of calendar instances passed to format()applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.appendTo(StringBuffer,Calendar)": "zz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.setFieldSeparator(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java@org.apache.commons.lang3.builder.HashCodeBuilder.unregister(Object)": "add final modifier to local variables.: remove unnecessary synchronization from registry lookup in equalsbuilder and hashcodebuilder ()reread threadlocal value in synchronized block to avoid any timing issues[] clear threadlocal for hashcodebuilder as well",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.deleteFirst(String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableByte.java@org.apache.commons.lang3.mutable.MutableByte.compareTo(MutableByte)": "pmd: useless parentheses.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.FastDateFormat(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isEmpty(boolean)": "crlf -> lfjavadoc: fix typo but working is still awkward.simplify isempty be reusing getlengths/if (foo) { return true; } return false;/return foo;/g",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.newCalendar()": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.readResolve()": "removes unnecessary class reference of static method calls which are declared in the same class",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.readObject(ObjectInputStream)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.getRule(int)": "removes unnecessary class reference of static method calls which are declared in the same classmake sure lines in files don't have trailing white spaces and remove all trailing white spacesreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.TimeZoneNumberRule(boolean,boolean)": "added missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.TextStrategy(int)": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.literal()": "add final modifier to local variables.pmd: these nested if statements could be combinedformat.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.parameterize(Class,Map)": "validation[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.getCache(int)": "remove redundant type arguments.format.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.isEmpty(Object)": ": add empty checks to objectutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.getDateInstance(int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastTimeZone.java@org.apache.commons.lang3.time.FastTimeZone.getGmtTimeZone()": "[] timezone.gettimezone() in fastdateparser causes resourcecontention</action>. this .",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.toString()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.lowerCase(String,Locale)": "sort members.rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.setMinutes(Date,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.getType()": "provide simple method to wrap a given type to the typed interface",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.DayInWeekField(NumberRule)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.CheckIntervalData.getClosingThreshold()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.DayInWeekField(NumberRule)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.FastDateParser(String,TimeZone,Locale,Date,boolean)": ": dateutilstest.testlang530 fails for some timezones",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.toClass(Object)": "add final modifier to local variables.[] avoid npe in classutils.toclass(object[])",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.appendFullDigits(Appendable,int,int)": "add final modifier to local variables.: fastdateprinter memory allocation regressionfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toPrimitive(Object)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.: add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.append(StringBuffer,String,byte,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.getType()": "provide simple method to wrap a given type to the typed interface",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.UnpaddedNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.append(String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.<action issue=\"\" type=\"add\">strbuilder should support stringbuilder as an input parameter</action>",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.getDateInstance(int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.format(Date)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.adjustYear(int)": "format.use final consistently. replace tabs with whitespaces and add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.setMinutes(Date,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.getLocale()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/CharSetUtils.java@org.apache.commons.lang3.CharSetUtils.deepEmpty(String)": "sort members and clean up comments.add final modifier to local variables.merge charsetutils string[] and string method forms to string...",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.nullToEmpty(float)": "crlf -> lfjavadoc: fix typo but working is still awkward.use isempty() where possible. thanks to james sawle for pointing this out.minor code simplificationadding nulltoempty methods to arrayutils per  and levon karayan's patch. ",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.ProxyInvocationHandler.readObject(ObjectInputStream)": "remove redundant type arguments.it's confusing to re-use field names locallyadd final modifier to local variables.document some @suppresswarning annotationsadd serialization support to eventlistenersupport",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.readObject(ObjectInputStream)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.setSizeEndText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.boolArrayToInt(boolean,int,int,int,int)": "use better method names. document possible arrayindexoutofboundsexception and stringindexoutofboundsexception.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.InitStripAccents.splitWorker(String,String,int,boolean)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.firstNonEmpty(T)": "[] add null-safe stringutils apis to wrapstringgetbytes([charset|string]).</action>sort members.: methods for getting first non empty or non blank value ()",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadUtils.findThreadGroups(ThreadGroupPredicate)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.readObject(ObjectInputStream)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.indexOfDifference(CharSequence,CharSequence)": "sort members.use index_not_found instead of magic number.change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.escapeRegex(StringBuilder,String,boolean)": "add explict default case and  fastdateparser could use \\q \\e to quote regexestrailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.toIntegerObject(boolean,Integer,Integer)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.ws",
  "src/main/java/org/apache/commons/lang3/time/FormatCache.java@org.apache.commons.lang3.time.MultipartKey.hashCode()": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeElement(T,Object)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableLong.java@org.apache.commons.lang3.mutable.MutableLong.getValue()": "use more efficient long cache: use \"long.valueof(int)\" instead of \"new long(long)\"",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.getUpperBounds()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(Double,int,RoundingMode)": ": rounding utilities for converting to bigdecimal",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.getTimeInstance(int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.DayInWeekField.WeekYear(NumberRule)": ": fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.getClassName(Object)": "[] add methods to objectutils to get various forms of classnames in a null-safe manner",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.ComparableComparator.toString()": "modifying tostring method to cache in a thread-safe way per 481adding string lazy caching",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.getInstance(String,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.TimeZoneNumberRule(boolean)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.getTimeInstance(int,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/SystemUtils.java@org.apache.commons.lang3.SystemUtils.isJavaVersionMatch(String,String)": "- fix () systemutils.getjavaversionasfloat throws stringindexoutofboundsexception on android runtime/dalvik vm- refactor for unit testing.- remove odd test code which is copy and pasted from systemutils, which therefore does not test anything.",
  "src/main/java/org/apache/commons/lang3/CharSequenceUtils.java@org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,int,int)": "use final.: merged rob's javadoc comments and updated to use code units instead of code points: fixed charsequenceutils indexof for supplementary chars: fixed formatting on charsequenceutils.javafixed charsequenceutils to check for supplementary charsrefactor magic number into constant.statement unnecessarily nested within else clause.add final modifier to local variables.formattingmoving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils classfix defaultisempty typing.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.TextStrategy(int,Calendar,Locale)": " - tolowercase should use locale, additional unit tests for case-insensitive matching - fastdateparser should be case insensitive: fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/mutable/MutableInt.java@org.apache.commons.lang3.mutable.MutableInt.decrementAndGet()": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.hashCode()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.appendTo(StringBuffer,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.getRawType(ParameterizedType)": "add final modifier to local variables.[] vastly expanded typeutils",
  "src/main/java/org/apache/commons/lang3/time/StopWatch.java@org.apache.commons.lang3.time.StopWatch.createStarted()": "sort methods.make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.adding a createstarted() method per request in 1138",
  "src/main/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java@org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(int,int)": "reverting r1090111 - moving the text.translate escapers back from using range to replicating parts of the range api. see the list for details ('unnecessary boxing in stringescapeutils etc'), the move to range was an uncomfortable fit. removing unnecessary code",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyClosed.now()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.createKeyValues(String,String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/event/EventUtils.java@org.apache.commons.lang3.event.EventUtils.addEventListener(Object,Class,L)": "add final modifier to local variables.checkstylefix brace positionscompiler/generics warnings & a typoimproving test coverage.changing eol-style to native.misc. event utils.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.splitPreserveAllTokens(String)": "sort members.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.getLocale()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.append(StringBuffer,String,Object,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(Object,Object,Class,EqualsBuilder,boolean,String)": "pmd: remove useless parenthesesequalsexlcude notation, hashcodeexclude notation and tostringexludenotationpmd: useless parenthesesuse not string.contains instead of indexof == -1add final modifier to local variables.add final modifier to method parameters.checkstyle and trailing spaces.applying the copy of the hashcodebuilder code to stop cyclic references over to equalsbuilder per  and oliver sauder's patchreplacing the creation of a list in the core of each builder class to test contains on the excludefields with a call to arrayutils.contains. reported by anthony whitford in 575",
  "src/main/java/org/apache/commons/lang3/ArchUtils.java@org.apache.commons.lang3.ArchUtils.init_IA64_64Bit()": "use final.: add archutils - an utility class for the \"os.arch\" system property ()",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.FastDateParser(String,TimeZone,Locale,Date)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.make sure placement of curly braces is consistent: dateutilstest.testlang530 fails for some timezones",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.format(Date)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.getDateInstance(int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.binaryToByte(boolean,int,byte,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesscope of local variabel shift can be narrowerpmd: useless parenthesesformat to 120 line length.removed unnecessary multiplication by one.add final modifier to local variables.add final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.isNumber()": " fastdateparser does not handle non-gregorian calendars properly applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.isOneTrue(boolean)": " - add isonetrue(booleans...) to booleanutils to preserve old behavior of booleanutils.xor(booleans...). added isonetrue for primitives and wrappers, isonefalse still missing.",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(Class,String,Object)": "a bit of dog food and a lot of javadoc tweakageadd final modifier to local variables.[] methodutils.invoke*(*, object... args) variants cannot handle null valuesmoving most of the methods over to varargs. a couple can't change because they are object[], class[] with both end parameters ideally wanting to be vararg. 396",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.isNotEmpty(Object)": ": add empty checks to objectutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.modify(int)": " fastdateparser does not handle excess hours as per simpledateformattrailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.getRegistry()": "applying the copy of the hashcodebuilder code to stop cyclic references over to equalsbuilder per  and oliver sauder's patch",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.getDateTimeInstance(int,int,TimeZone)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyOpen.now()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shuffle(long)": ": added shuffle methods to arrayutils",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.commonPrefixLength(CharSequence,CharSequence)": "reuse code already available in stringutilsmore source code to format...: add the jaro-winkler string distance algorithm to stringutils - partially applying the patch by rekha joshi as submitted for further refinement",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.getStrategy(String)": "document intentional drop-thruapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.applyRulesToString(Calendar)": "4fastdateformat apis that use a stringbuilderrefactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.getInstance(String,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java@org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(Field)": "[] org.apache.commons.lang3.reflect.fieldutils.removefinalmodifier(field) does not clean up after itself.add in-line comment.removefinalmodifier does not clean up after itself.ws - add removefinalmodifier to fieldutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.isNumber()": " fastdateparser does not handle non-gregorian calendars properly applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.appendDigits(Appendable,int)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.toString(T)": " - stackoverflowerror on typeutils.tostring(...) for a generic return type of enum.valueof ()",
  "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java@org.apache.commons.lang3.CsvUnescaper.unescapeEcmaScript(String)": "added escape/unescapejson methods per maurizio cucchiara's patch in 797",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.BasicThreadFactory.namingPattern(String)": "use validatenotnull instead of \"throw new nullpointerexception\"adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.append(CharBuffer)": ": avoid string allocation in strbuilder.append(charsequence). this fixes  from github. thanks to mikhail mazurskiy and fabian lange.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategy.getCheckIntervalStart()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadIdPredicate.getAllThreadGroups()": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.InitStripAccents.stripEnd(String,String)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.isNotEmpty(CharSequence)": "sort members.make sure lines in files don't have trailing white spaces and remove all trailing white spaces: bring static method references in stringutils to consistent style. thanks to alex yurshaapplying alexander muthmann's patch from , adding isblank/isempty charsequence... variantschange stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.register(Object,Object)": "remove redundant type arguments.: remove unnecessary synchronization from registry lookup in equalsbuilder and hashcodebuilder ()add final modifier to local variables.fixing  so that equalsbuilder synchronizes on itself and not hashcodebuilderapplying the copy of the hashcodebuilder code to stop cyclic references over to equalsbuilder per  and oliver sauder's patch",
  "src/main/java/org/apache/commons/lang3/time/FormatCache.java@org.apache.commons.lang3.time.MultipartKey.getTimeInstance(int,TimeZone,Locale)": " simplify fastdateformat; eliminate boxing",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.lastIndexOf(String,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.isJsonObject(String)": "extract logic for checking string representation of objects into separate methods",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.getInstance()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/GmtTimeZone.java@org.apache.commons.lang3.time.GmtTimeZone.getOffset(int,int,int,int,int,int)": "[] timezone.gettimezone() in fastdateparser causes resourcecontention</action>. this .",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isSameLength(int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.simplify issamelenght implementations by reusing getlength. this also fixes a lot of the useless paranthesis warnings generated by pmd.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.normalizeUpperBounds(Type)": "remove redundant type arguments.validation",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.format(long)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.[] fastdateformat generates date objects wastefully.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.Executable.Executable(Constructor)": ": add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.greaterOrEqualObj(Comparable,T,String,Object)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.TextStrategy(int)": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.setSizeStartText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.parseObject(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java@org.apache.commons.lang3.concurrent.ConstantFuture.handleCauseUnchecked(ExecutionException)": "add final modifier to local variables.[] introduced concurrentruntimeexception and extended the exception handling methods of concurrentutils to support runtime exceptions, too.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.contains(int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.Builder.getUncaughtExceptionHandler()": "adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java@org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry()": "[] clear threadlocal for hashcodebuilder as well",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(Float)": ": rounding utilities for converting to bigdecimal",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.getDateTimeInstance(int,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java@org.apache.commons.lang3.CsvUnescaper.escapeXml(String)": ": add methods for removing all invalid characters according to xml 1.0 and xml 1.1 in an input string to stringescapeutils. thanks to adam hooper",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.add(double,double)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.format(Date,StringBuffer)": "change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/EnumUtils.java@org.apache.commons.lang3.EnumUtils.generateBitVectors(Class,E)": " enumutils *bitvector issue with more than 32 values enumthis add final modifier to local variables.[] permit bitvector generation for enums with > 64 values; plus some test corrections",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isSameLength(float,float)": "crlf -> lfjavadoc: fix typo but working is still awkward.simplify issamelenght implementations by reusing getlength. this also fixes a lot of the useless paranthesis warnings generated by pmd.",
  "src/main/java/org/apache/commons/lang3/EnumUtils.java@org.apache.commons.lang3.EnumUtils.checkBitVectorable(Class)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesdon't write parameter[] permit bitvector generation for enums with > 64 values; plus some test correctionsrequire values parameter when generating bit vectors from enums, throwing nullpointerexception if omitted; merge check for type eligibility; add e... generatebitvector() variant; alter generatebitvector(class<e>, enumset<e>) to (class<e>, iterable<e>) by using |= << instead of + to accumulate values; process only specified values",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.getInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/tuple/MutableTriple.java@org.apache.commons.lang3.tuple.MutableTriple.emptyArray()": "[] add empty_array constants to classes inorg.apache.commons.lang3.tuple",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.applyRulesToString(Calendar)": "fastdateformat apis that use a stringbuilderrefactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.getDateInstance(int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesscope of local variabel shift can be narrowerpmd: useless parenthesesformat to 120 line length.removed unnecessary multiplication by one.add final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.appendEnd(StringBuffer,Object)": "[github] commons-lang pull request : intellij idea refactorings..",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyClosed.isStateTransition(EventCountCircuitBreaker,CheckIntervalData,CheckIntervalData)": "add final modifier to method parameters.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean,boolean,int)": "removes unnecessary class reference of static method calls which are declared in the same classcrlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.isTrue(Boolean)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.[] removed unnecessary elses and use of ternary operator with primitive boolean consequences e.g. (some boolean expression) ? true : false",
  "src/main/java/org/apache/commons/lang3/RandomUtils.java@org.apache.commons.lang3.RandomUtils.nextFloat(float,float)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd sugar to randomiutils: new randumutils class. thanks to duncan jones",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.splitPreserveAllTokens(String,String)": "sort members.",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(Class,String)": "[] add methodutil apis to call methods without parameters.",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.smaller(double,double)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.getStrategy(int)": "make checkstyle happy: add missing javadocreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/text/StrMatcher.java@org.apache.commons.lang3.text.CharSetMatcher.toString()": "add stringmatchertostring(); useful from a debugger.",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.Range.isAfter(T)": "refactor range with lots of new methods",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.DayInWeekField(NumberRule)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.getDateTimeInstance(int,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.isNotBlank(CharSequence)": "sort members.: add stringutilsisanynotempty and isanynotblank (): bring static method references in stringutils to consistent style. thanks to alex yurshaapplying alexander muthmann's patch from , adding isblank/isempty charsequence... variantschange stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/tuple/MutableTriple.java@org.apache.commons.lang3.tuple.MutableTriple.of(L,M,R)": "sort methods.remove redundant type arguments.adding henning's github pull request with a triple implementation. 675",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.CaseInsensitiveTextStrategy(int,Calendar,Locale)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.: fastdateformat doesn't respect summer daylight in some localized stringsrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/text/WordUtils.java@org.apache.commons.lang3.text.WordUtils.initials(String,char)": "reuseadd final modifier to local variables.eat own dog food: call stringutils.isempty().making it explicit that the else statement expects to jump to the next iteration of the loop",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.getDateTimeInstance(int,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.getPattern()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/SerializationUtils.java@org.apache.commons.lang3.SerializationUtils.deserialize(InputStream)": "use validateistrue to validate arguments: update java requirement from java 6 to 7use try with resources in serializationutils: serializationutils::deserialize has unnecessary code and a comment for that ()there is no real cce possible, even the javadoc say so. github's blame showed the code and javadoc is written by two indiviual person in two different years, so that may be the cause.eliminate one unchecked warning; localise and document othersadd final modifier to local variables.[] use generics in serializationutilsadding nopmd tags for various empty catch blockscheckstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.appendTo(Appendable,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.equals(Object)": "if statement can be simplified",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isSameLength(byte,byte)": "crlf -> lfjavadoc: fix typo but working is still awkward.simplify issamelenght implementations by reusing getlength. this also fixes a lot of the useless paranthesis warnings generated by pmd.",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.Executable.of(Constructor)": "make sure placement of curly braces is consistent: add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.EventListenerSupport.create(Class)": "remove redundant type arguments.: add event support utilitiesapplying documentation patch \"commons-event-support-docs.patch\" from michael wooten.changing eol-style to native.misc. event utils.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.ObjectUtils()": ": add empty checks to objectutils",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.Executable.isMatchingExecutable(Executable,Class)": "[] constructorutils.invokeconstructor(class, object...)regressionadd final modifier to local variables.: add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.shortArrayToInt(short,int,int,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesscope of local variabel shift can be narrowerpmd: useless parenthesesformat to 120 line length.add final modifier to local variables.add final modifier to method parameters.use better method names. document possible arrayindexoutofboundsexception and stringindexoutofboundsexception.",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.replace(StringBuffer)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.TwoDigitYearField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyOpen.updateCheckIntervalData(CheckIntervalData,CheckIntervalData)": "add final modifier to method parameters.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.isAssignableFrom(Class,Class,String,Object)": "[github] commons-lang pull request : intellij idea refactorings..add todosfix brace positionsapplying valentin rocher's patch from , adding isinstanceof and isassignablefrom methods. ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.setContentStart(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.ComparableComparator.Range(T,T,Comparator)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.applyRules(Calendar,B)": "add final modifier to local variables.1154fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.setContentEnd(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java@org.apache.commons.lang3.text.translate.EntityArrays.JAVA_CTRL_CHARS_ESCAPE()": "make sure placement of curly braces is consistent",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.getRegistry()": "[] part 2: refactor tostringstyle and tostringbuildertest to verify that we are unsetting the registry when no longer needed[] clear threadlocal recursion registry (compatibly with existing tests, first pass)",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.Iso8601_Rule.format(long,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateprinter generates date objects wastefully168",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.format(Date)": "change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. applying my fix to , and mikael's test case; fixing the fastdateformat to properly include the locale when formatting a date",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.setPreserveEscapes(boolean)": "strsubstitutor can preserve escapesstrsubstitutor can now optionally preserve the escape character for anescaped reference, which is useful when substitution takes place inmultiple phases and some references are intentionally unresolved.  priorto this change, an unresolved reference `${a}` and an escaped reference`$${a}` may result in the same string `${a}`, making it impossible foran additional substitution phase to distinguish between escapedreferences and non-escaped references.",
  "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java@org.apache.commons.lang3.concurrent.TimedSemaphore.getExecutorService()": "[] added timedsemaphore class to concurrent package.",
  "src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java@org.apache.commons.lang3.concurrent.ConstantInitializer.equals(Object)": ": update java requirement from java 6 to 7replace usage of deprecated objectutilsequals with objectsequalsadd final modifier to local variables.[] added constantinitializer class",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.toArray(Map)": "trailing spaces fastdateparser does not handle non-gregorian calendars properlyuse calendargetdisplaynames() instead of dateformatsymbolsgeteras()",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.equals(WildcardType,Type)": "lan-1114 fixes bug in typeutils.equals(wildcardtype, type) where it was incorrectly returning true when the second argument was not a wildcard type.typeutils wildcard fixes[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.appendDigits(StringBuffer,int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.center(CharSequence,int,CharSequence)": "moving center, left, leftpad, right, rightpad, mid, uppercase, lowercase and swapcase over to charsequence input. 687",
  "src/main/java/org/apache/commons/lang3/mutable/MutableLong.java@org.apache.commons.lang3.mutable.MutableLong.subtract(Number)": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.upperCase(CharSequence)": "moving center, left, leftpad, right, rightpad, mid, uppercase, lowercase and swapcase over to charsequence input. 687",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule(boolean,boolean)": "added missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadIdPredicate.ThreadUtils()": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.format(long)": "[] fastdateformat generates date objects wastefully.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.getDateInstance(int,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shuffle(float,Random)": ": added shuffle methods to arrayutils",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.toString(byte,String)": "make usage of default charset explicit and remove findbugs exclusion. kudos to sebb for spotting this.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.lastIndexOf(float,float,int)": "removes unnecessary class reference of static method calls which are declared in the same classcrlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.getLocale()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/ConstructorUtils.java@org.apache.commons.lang3.reflect.ConstructorUtils.getAccessibleConstructor(Class,Class)": "a bit of dog food and a lot of javadoc tweakageadd final modifier to local variables.add final modifier to method parameters.removing unncessary bracketsvararging constructor methods; much like the method ones were in methodutils. 396",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.BasicThreadFactory.priority(int)": "don't use single letter variable names.adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.getInstance()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.setContentEnd(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.applyRules(Calendar,StringBuffer)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.getAllSuperclasses(Class)": "remove redundant type arguments.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.getInstance()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.getLocale()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.append(StringBuffer,String,char,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.getPackageName(String)": ": add classutils.getabbreviatedname(). this fixes  from github. thanks to fabian lange.add final modifier to local variables.eat own dog food: stringutilsisempty(string) and replace some but not all stringlength() == 0 with stringisempty()",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyClosed.EventCountCircuitBreaker(int,long,TimeUnit,int,long,TimeUnit)": "add final modifier to method parameters.remove redundant type arguments.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.ISO8601TimeZoneStrategy(String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.setCalendar(FastDateParser,Calendar,String)": "[] timezone.gettimezone() in fastdateparser causes resourcecontention</action>. this .utc and gmt are the same, so simplify.refactor \"gmt\" magic string.make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.escapeRegex(StringBuilder,String,boolean)": "add explict default case and  fastdateparser could use \\q \\e to quote regexestrailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.appendTo(Appendable)": ": add zero copy write method to strbuilder; : add zero copy read method to strbuilder. thanks to mikhail mazursky.",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.toBoolean(int,int,int)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.ws[] removed unnecessary elses and use of ternary operator with primitive boolean consequences e.g. (some boolean expression) ? true : false",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.EventListenerSupport.EventListenerSupport(Class,ClassLoader)": "add serialization support to eventlistenersupportprovide read access to the registered listener instances: add event support utilitiesapplying documentation patch \"commons-event-support-docs.patch\" from michael wooten.improving error checking logic and adding test cases to verify.changing eol-style to native.misc. event utils.",
  "src/main/java/org/apache/commons/lang3/text/WordUtils.java@org.apache.commons.lang3.text.WordUtils.capitalize(String,char)": "add final modifier to local variables.eat own dog food: call stringutils.isempty().remove unnecessary parens.[] swapcase and *capitalize speedups.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.appendTo(Appendable,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.format(Date)": "change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. applying my fix to , and mikael's test case; fixing the fastdateformat to properly include the locale when formatting a date",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.rightPad(CharSequence,int,CharSequence)": "moving center, left, leftpad, right, rightpad, mid, uppercase, lowercase and swapcase over to charsequence input. 687",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toStringArray(Object,String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove trailing white spacesadded new vararg methods to insert values into an array at an index.this implements . this commit also deprecates the add() methodsthat inserted a single value into an array at an index.: add arrayutilstostringarray(object[], string) method (and minimal clean-up of arrayutilstostringarray(object[]))add changes.xml entry",
  "src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java@org.apache.commons.lang3.builder.ReflectionToStringBuilder.setExcludeFieldNames(String)": "fix introduced failures having to do with removing the call to internal helper method tononullstringarray()more varargs-related updates",
  "src/test/java/org/apache/commons/lang3/CharUtilsPerfRun.java@org.apache.commons.lang3.CharUtilsPerfRun.run_inlined_CharUtils_isAsciiNumeric(int)": "add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)convert to java 5 enhanced loops. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.getTimeInstance(int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.TimeZoneStrategy(Locale)": "refactor \"gmt\" magic string.add a default case to switch to appease findbugs: nullpointerexception in fastdateparser$timezonestrategy ()replicate the fix for 1186add final modifier to local variables.remove redundant type arguments.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.Iso8601_Rule.format(Object)": "1154fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.contains(String,String)": "rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.MemberUtils.isMatchingConstructor(Constructor,Class)": "removes unnecessary class reference of static method calls which are declared in the same class: add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.insert(int,String)": "rewrite to avoid (im)possible npe warningadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.setArrayEnd(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.Iso8601_Rule(int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.smallerOrEqualObj(Comparable,T,String,Object)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.toStringBuilder()": "strbuilder implements builder; provide tostringbuilder as tostringbuffer",
  "src/main/java/org/apache/commons/lang3/LocaleUtils.java@org.apache.commons.lang3.LocaleUtils.availableLocaleSet()": "use concurrent instead of synchronization; javadoc",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.append(StringBuffer,String,char,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.TimeZoneNumberRule(boolean,boolean)": "added missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.hashCode(Object)": ": fix deprecation warningsremove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo) - add hashcodemulti varargs method",
  "src/main/java/org/apache/commons/lang3/text/StrTokenizer.java@org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.setArrayStart(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.hashCode()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.substringBetween(String,String,String)": "sort members.add final modifier to local variables.use index_not_found instead of magic number.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.Iso8601_Rule(int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.FastDatePrinter(String,TimeZone,Locale)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java@org.apache.commons.lang3.builder.CompareToBuilder.append(char,char)": "removes redundant '+' signpmd: remove useless parentheses",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.format(long,B)": ": fastdateprinter generates date objects wastefullyfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.getSimpleName(Object,String)": "[] add methods to classutils to get various forms of classnames in a null-safe manneradd two new null-safe apis: getsimplename(*). see https://issues.apache.org/jira/browse/696",
  "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java@org.apache.commons.lang3.concurrent.TimedSemaphore.run()": "[] added timedsemaphore class to concurrent package.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.classToString(Class)": ": typeutils.tostring() doesn't handle primitive and object arrays correctlyapply patch by aaron digulla[] new type util features",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.getAnnotation(Method,Class,boolean,boolean)": "use final.: add methodutilsfindannotation and extend methodutilsgetmethodswithannotation for non-public, super-class and interface methodsadd changes.xml entry and minimal clean-up.: adds methodutilsfindannotation and extend methodutilsgetmethodswithannotation for non-public, super-class and interface methods ()",
  "src/main/java/org/apache/commons/lang3/reflect/TypeLiteral.java@org.apache.commons.lang3.reflect.TypeLiteral.TypeLiteral()": "[] provide typeliteral class similar to javax.enterprise.util.typeliteral",
  "src/main/java/org/apache/commons/lang3/mutable/MutableByte.java@org.apache.commons.lang3.mutable.MutableByte.incrementAndGet()": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.append(String,Object)": ": avoid string allocation in strbuilder.append(charsequence). this fixes  from github. thanks to mikhail mazurskiy and fabian lange.[] create strbuilder apis similar to string.format(string, object...)",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.format(long,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateprinter generates date objects wastefullyapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.getLevenshteinDistance(CharSequence,CharSequence,int)": "sort members.make sure placement of curly braces is consistentmake sure lines in files don't have trailing white spaces and remove all trailing white spaces: getlevenshteindistance with a threshold: optimize implementation if the strings lengths differ more than the threshold ()if the string lengths differ more than the threshold, there's no need for the algorithm to begin allocating arrays etc.pmd: useless parentheses: add the jaro-winkler string distance algorithm to stringutils - partially applying the patch by rekha joshi as submitted for further refinementapplying eli lindsey's patch to yaniv kunda's report in  that stringutils.getlevensteindistance(string, string, int) gave the wrong answer when the int threshold is near integer.max_valuetabs and trailing spacesstatements unnecessarily nested within else clause.add final modifier to local variables.ws onlymatch exception message from threshold-free ld implementation[] levenshtein distance within a given threshold; submitted by eli lindsey",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.withUpperBounds(Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.isRegistered(Object)": "add final modifier to local variables.[] part 2: refactor tostringstyle and tostringbuildertest to verify that we are unsetting the registry when no longer needed",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.format(Object)": "4fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.setFieldNameValueSeparator(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.appendAll(Object)": "convert to java 5 enhanced loops. ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.tokenize(char,int,int)": "statements unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toPrimitive(Boolean,boolean)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java@org.apache.commons.lang3.concurrent.MultiBackgroundInitializerResults.initialize()": "remove redundant type arguments.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.appendInternal(StringBuffer,String,Object,boolean)": "tab alignment[] clear threadlocal recursion registry (compatibly with existing tests, first pass)",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.getTimeInstance(int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.getFragmentInMilliseconds(Date,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesmake use of existing timeunit class to manage time units.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.parameterize(Class,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.replace(int,int,String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.selectNumberRule(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.append(CharSequence,int,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces<action issue=\"\" type=\"add\">strbuilder should support stringbuilder as an input parameter</action>",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.isFormatLetter(char)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.byteToBools(byte,int,boolean,int,int)": "code clean-up for checkstyle.: add to conversion from byte[] to uuid and uuid to byte[]document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean)": "use term \"binary\" instead of \"boolarray\" in conversion. improve javadoc of class.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.getInstance(String)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/mutable/MutableByte.java@org.apache.commons.lang3.mutable.MutableByte.addAndGet(byte)": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.replace(Object,Properties)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.removes unnecessary class reference of static method calls which are declared in the same classremove redundant type arguments.add final modifier to local variables.fix brace positionsremoved my author tag, typo, trailing spaces.adding ulrich + tomas' patch to  adding a replace(string, properties) variant to strsubstitutor",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.appendln(StringBuilder)": "<action issue=\"\" type=\"add\">strbuilder should support stringbuilder as an input parameter</action>",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.format(Calendar,B)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java@org.apache.commons.lang3.builder.ReflectionToStringBuilder.accept(Field)": "prevent redundant modifiersequalsexlcude notation, hashcodeexclude notation and tostringexludenotation",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.stripToEmpty(String)": "sort members.",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.Builder.build()": "add final modifier to local variables.adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java@org.apache.commons.lang3.concurrent.ConstantFuture.extractCauseUnchecked(ExecutionException)": "add final modifier to method parameters.[] introduced concurrentruntimeexception and extended the exception handling methods of concurrentutils to support runtime exceptions, too.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.getTimeInstance(int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.equals(WildcardType,Type)": "lan-1114 fixes bug in typeutils.equals(wildcardtype, type) where it was incorrectly returning true when the second argument was not a wildcard type.typeutils wildcard fixes[] new type util features",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.typesSatisfyVariables(Map)": "the the patrol.validation",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.readResolve()": "removes unnecessary class reference of static method calls which are declared in the same class: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.: add noclassnametostringstyle implementation of tostringstyle. this  from github. thanks to innokenty shuvalov.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.min(T)": "add final modifier to local variables. - change objectutils min() & max() functions to use varargs rather than just two parameters",
  "src/main/java/org/apache/commons/lang3/time/GmtTimeZone.java@org.apache.commons.lang3.time.GmtTimeZone.getID()": "[] timezone.gettimezone() in fastdateparser causes resourcecontention</action>. this .",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.appendToString(StringBuffer,String)": "use stringbuilderappend(charsequence, int, int) were possible to improve performance(similar to , thanks to stephane landelle for the suggestion)add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.equalsAny(CharSequence,CharSequence)": "sort members.add final modifier to local variables.merge branch 'fix-': add stringutils methods to compare a string to multiple stringsthis  from github.thanks to arman sharif for providing a patch.thanks to rafal glowinski for providing an alternative implementations, see .thanks to robert parr for providing an alternative implementations, see .conflicts:\tsrc/changes/changes.xml added equalsany() and equalsanyignorecase() methods to stringutils.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.format(long)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.[] fastdateformat generates date objects wastefully.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.build()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.Iso8601_Rule(int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.getRawType()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.ComparableComparator.equals(Object)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.letterPattern(char)": "add final modifier to local variables.format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(Type,Class,Map)": "add final modifier to local variables.add final modifier to method parameters.[] vastly expanded typeutils",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.stripAccents(CharSequence)": "rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687checkstyletab and trailing space removalminor text changes; 'during 1.6 backcompat code' isn't meaningfuladding cedrik lime's patch from ; adding unaccenting for java 1.3->1.5 via reflection usage of sun jvms",
  "src/main/java/org/apache/commons/lang3/reflect/InheritanceUtils.java@org.apache.commons.lang3.reflect.InheritanceUtils.InheritanceUtils()": " method returns number of inheritance hops between parent and subclass",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.init()": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.intToHexDigit(int)": "add final modifier to local variables.code clean-up for checkstyle.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.use lowercase presentation for hex values as it is done in the jdk.use jdk functionality where available.use conversion tables for boolean arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java@org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(CharSequence)": "add final modifier to local variables.removing the note on '2' being in the api. that can be dealt with if people find doubling to be an issue",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.splitByWholeSeparatorPreserveAllTokens(String,String,int)": "sort members.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.genericArrayTypeToString(GenericArrayType)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.appendFullDigits(Appendable,int,int)": "add final modifier to local variables.: fastdateprinter memory allocation regressionfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.getInstance(String)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.TimeZoneDisplayKey(TimeZone,boolean,int,Locale)": "don't mutate parametersadd final modifier to method parameters.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.unrollVariables(Map,Type)": "removes unnecessary class reference of static method calls which are declared in the same classprevent redundant modifiersremove redundant type arguments.null-guard[] new type util features",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.getImplicitBounds(TypeVariable)": "validation",
  "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java@org.apache.commons.lang3.concurrent.TimedSemaphore.getUnit()": "[] added timedsemaphore class to concurrent package.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.replaceFirst(String,String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java@org.apache.commons.lang3.concurrent.ConcurrentUtils.checkedException(Throwable)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesusing validate where possible in concurrent package.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.unrollVariables(Map,Type)": "removes unnecessary class reference of static method calls which are declared in the same classprevent redundant modifiersremove redundant type arguments.null-guard[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.applyRules(Calendar,StringBuffer)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.setMilliseconds(Date,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.nullToEmpty(Short)": "crlf -> lfjavadoc: fix typo but working is still awkward.use isempty() where possible. thanks to james sawle for pointing this out.minor code simplificationadding nulltoempty methods to arrayutils per  and levon karayan's patch. ",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(Float,int,RoundingMode)": ": rounding utilities for converting to bigdecimal",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.appendWithSeparators(Iterable,String)": ": update java requirement from java 6 to 7replace usage of deprecated objectutilstostring with objectstostring: fix deprecation warningsadd final modifier to local variables.eat own dog food: separator == null ? \"\" : separator->objectutils.tostring(separator)remove superfluous parens.",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.EventListenerSupport.addListener(L)": "added new addlistener() method that takes a boolean for if duplicates are allowed.added test method to make sure that duplicate listeners are not added.using copyonwritearraylist for thread safety.improving error checking logic and adding test cases to verify.changing eol-style to native.misc. event utils.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.compare(KeyValue,KeyValue)": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/CharRange.java@org.apache.commons.lang3.CharacterIterator.next()": "boolean comparisons in charrange ()cleaned up comparisons to false to just use the boolean negationoperator (!).add final modifier to local variables.adding vincent ricard's patch to charrange.java providing an iterator that lets you walk the chars in the range. 454",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.removeAll(String,String)": "sort members.[] add regexutils class instead of overloadinh methods instringutils that take a regex to take precompiled pattern. add remove by regular expression methods in stringutils :  - string stringutils.removeall(string text, string regex);  - string stringutils.removefirst(string text, string regex);",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.iterator(Date,int)": "use validateistrue to validate argumentsadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.getNextStrategy()": "add final modifier to local variables.format.statement unnecessarily nested within else clause.\\refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/test/java/org/apache/commons/lang3/CharsetsTestCase.java@org.apache.commons.lang3.CharsetsTestCase.testToCharsetName()": "[] add null-safe stringutils apis to wrapstringgetbytes([charset|string]).</action>",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.getInstance(String,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.CheckIntervalData.isStateTransition(EventCountCircuitBreaker,CheckIntervalData,CheckIntervalData)": "add final modifier to method parameters.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.getStrategy(String)": "document intentional drop-thruapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isSorted(double)": "formatting fixes perhttps://patch-diff.githubusercontent.com/raw/apache/commons-lang/pull/128.diffcrlf -> lfjavadoc: fix typo but working is still awkward. - add issorted() to arrayutils. patch supplied by james sawle.  in github.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.isNextNumber()": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.simpleQuote(StringBuilder,String)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateparser too strict on abbreviated short month symbolsadd final modifier to local variables.format. fastdateparser_timezonestrategytesttesttimezonestrategypattern fails on windows with german localereimplementing 1107",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.parse(FastDateParser,Calendar,String,ParsePosition,int)": "add final modifier to local variables.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.indexOf(byte,byte,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.lastIndexOf(String,int,int)": "rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.modify(int)": " fastdateparser does not handle excess hours as per simpledateformat",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.replaceAll(String,String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.median(T)": "add @safevarargs to some methods with vararg parameters to suppress \"type safety: potential heap pollution via varargs parameter array\" warningsremove redundant type arguments.add final modifier to local variables.[] add mode and median comparable... methods to objectutils",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.toStringTrueFalse(Boolean)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.ws",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.center(String,int,char)": "sort members.add final modifier to local variables.rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.isExactlyOneTrue(Boolean)": "use less confusing method name",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.ParameterizedTypeImpl(Class,Type,Type)": ": fix typeutils.parameterize to work correctly with narrower-typed varargs array ()fix sonarqube warning: the user-supplied array 'typearguments' is stored directly.[] new type util features",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.append(StringBuffer,String,byte,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.selectNumberRule(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.getPattern()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.InitStripAccents.isAlphanumericSpace(CharSequence)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeElement(double,double)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/SystemUtils.java@org.apache.commons.lang3.SystemUtils.getOSMatches(String,String)": "- fix () systemutils.getjavaversionasfloat throws stringindexoutofboundsexception on android runtime/dalvik vm- refactor for unit testing.- remove odd test code which is copy and pasted from systemutils, which therefore does not test anything.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.UnpaddedNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java@org.apache.commons.lang3.CsvUnescaper.escapeXml11(String)": ": add methods for removing all invalid characters according to xml 1.0 and xml 1.1 in an input string to stringescapeutils. thanks to adam hooper",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.getDateTimeInstance(int,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.init(Calendar)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.don't need a copy of this field.add final modifier to local variables.remove redundant type arguments.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/exception/ContextedException.java@org.apache.commons.lang3.exception.ContextedException.getContextEntries()": "refactor exceptioncontext and derived. context contract stipulates a sequence of label-value entries with support for multiple entries for the same label.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.format(Calendar)": "4fastdateformat apis that use a stringbuilderapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.getDisplayNames(int)": "don't save short eras if they are the same as the long eras fastdateparser does not handle non-gregorian calendars properlyuse calendargetdisplaynames() instead of dateformatsymbolsgeteras()getinstance() (java 1.6) supports more localesexplicit conversion to integer; save the value for use latergetinstance(locale) is java 1.6+applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.extractTypeArgumentsFrom(Map,TypeVariable)": "use final consistently. [] new type util features",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.deleteAll(String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.AlwaysTruePredicate.findThreadsByName(String,String)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.use validateistrue to validate argumentsremove redundant type arguments.fixing crlfsstatement unnecessarily nested within else clause.merge branch 'remove_threadutils_compiler_warnings'remove compiler warnings from threadutils. thanks to pascal schuhmacher.remove compiler warnings from threadutilsincorporated feedback from fabian, formatting adjusted, count >> 1 replaced with count / 2incorporated feedback from peteradd threadutils",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategy.isCheckIntervalFinished(EventCountCircuitBreaker,CheckIntervalData,long)": "add final modifier to method parameters.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.append(StrBuilder)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.UnpaddedNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.WeekYear(NumberRule)": ": fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.parse(String,ParsePosition)": "format.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.append(StringBuffer,String,boolean,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.PaddedNumberField(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.TimeZoneNumberRule(boolean,boolean)": "added missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shuffle(short,Random)": ": added shuffle methods to arrayutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.format(long,B)": ": fastdateprinter generates date objects wastefullyfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.getDateInstance(int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.toString()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.indexOfAny(CharSequence,String)": "sort members.rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687use index_not_found instead of magic number.change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.appendTo(Appendable)": ": add zero copy write method to strbuilder; : add zero copy read method to strbuilder. thanks to mikhail mazursky.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TzInfo.simpleQuote(StringBuilder,String)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateparser too strict on abbreviated short month symbolsadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/RegExUtils.java@org.apache.commons.lang3.RegExUtils.replaceFirst(String,Pattern,String)": "[] add regexutils class instead of overloadinh methods instringutils that take a regex to take precompiled pattern.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.getDateInstance(int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.equals(GenericArrayType,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.TimeZoneDisplayKey(TimeZone,boolean,int,Locale)": "don't mutate parametersadd final modifier to method parameters.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Functions.java@org.apache.commons.lang3.Functions.tryWithResources(FailableRunnable,FailableConsumer,FailableRunnable)": "functions.java whitspacesreplace tabs with four spaces, as per the project's checkstyle rules.add spaces after commas in functions.javaadd spaces after commas as per the project's checkstyle rules.added functions.trywithresources.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.incrementAndCheckState()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.init()": "add final modifier to local variables.tab police: fastdateparser could use calendar.getdisplaynames for all text fieldsshow where the parsing failed fastdateparser does not handle unterminated quotes correctlytrailing spaces fastdateparser does not handle non-gregorian calendars properlyfix bug in java 7 (locale.tostring() format has changed) fastdateparser does not handle non-gregorian calendars properly applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrMatcher.java@org.apache.commons.lang3.text.StringMatcher.stringMatcher(String)": "eat own dog food: call stringutils.isempty().",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.getImplicitBounds(TypeVariable)": "validation",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.TimeZoneNameRule(TimeZone,Locale,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.copy(KeyValue,int,String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.append(Object,Object)": "use not bool instead of bool == false",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.CopyQuotedStrategy(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.equals(Object)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.setArrayEnd(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.createInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.boolArrayBeMsb0ToHexDigit(boolean,int)": "use better method names. document possible arrayindexoutofboundsexception and stringindexoutofboundsexception.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.toString(Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.TimeZoneNumberRule(boolean,boolean)": "added missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.format(Date)": "change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. applying my fix to , and mikael's test case; fixing the fastdateformat to properly include the locale when formatting a date",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.replacePattern(String,String,String)": "sort members.[] add regexutils class instead of overloadinh methods instringutils that take a regex to take precompiled pattern.stringutilsreplacepattern: fix source code formatting making replacepattern/removepattern methods null safe in stringutils[] add stringutils api to call string.replaceall in dotall a.k.a. single-line mode.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.isRegistered(Object)": "add final modifier to local variables.[] part 2: refactor tostringstyle and tostringbuildertest to verify that we are unsetting the registry when no longer needed",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.getMantissa(String,int)": "pmd: remove useless parenthesesfixing crlfsstatement unnecessarily nested within else clause.: numberutilscreatenumber() returns positive bigdecimal when negative float is expected. thanks to renat zhilkibaev.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.DayInWeekField(NumberRule)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.parseObject(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.newCalendar()": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,long,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FormatCache.java@org.apache.commons.lang3.time.FormatCache.equals(Object)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.appendDetail(StringBuffer,String,Object)": "extract logic for checking string representation of objects into separate methodsformat source codevariable names should follow naming conventionsmodified appenddetail method for object value in jsontostringstyle classfix the jsontostringstyle:except number types and boolean type, all other types in java should be 'appendasstring': add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.toString(T)": " - stackoverflowerror on typeutils.tostring(...) for a generic return type of enum.valueof ()",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shift(long,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.swap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.appendToString(StringBuffer,String)": "use stringbuilderappend(charsequence, int, int) were possible to improve performance(similar to , thanks to stephane landelle for the suggestion)add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.unrollBounds(Map,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.regionMatchesSequence(CharSequence,boolean,int,CharSequence,int,int)": "adding green regionmatches implementation and moving endswith and startswith methods to use it; thus giving them charsequence based apis. 687",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.appendDetail(StringBuffer,String,char)": "fix the jsontostringstyle:except number types and boolean type, all other types in java should be 'appendasstring'",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.parseDate(String,String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces - dateutilsparsedate uses default locale; add locale support",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.compare(KeyValue,KeyValue)": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.append(StringBuffer,String,short,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.equals(WildcardType,Type)": "lan-1114 fixes bug in typeutils.equals(wildcardtype, type) where it was incorrectly returning true when the second argument was not a wildcard type.typeutils wildcard fixes[] new type util features",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.hexToByte(String,int,byte,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesscope of local variabel shift can be narrowerformat to 120 line length.add final modifier to local variables.use better method names. document possible arrayindexoutofboundsexception and stringindexoutofboundsexception.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.compare(String,String)": ": fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.getCache(int)": "tab police: fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.init(Calendar)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.don't need a copy of this field.add final modifier to local variables.remove redundant type arguments.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.containsAny(CharSequence,char)": "add final modifier to local variables.fix tabs to spaces, thank you j\u00f6rg.https://issues.apache.org/jira/browse/ stringutils.containsany methods incorrectly matches unicode 2.0+ supplementary characters.change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.FastDatePrinter(String,TimeZone,Locale)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.isRegistered(Object)": "add final modifier to local variables.[] part 2: refactor tostringstyle and tostringbuildertest to verify that we are unsetting the registry when no longer needed",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.deleteAll(char)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/CharRange.java@org.apache.commons.lang3.CharRange.hasNext()": "adding vincent ricard's patch to charrange.java providing an iterator that lets you walk the chars in the range. 454",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.indexOf(int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.lastIndexOf(short,short)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.getPattern()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeElements(boolean,boolean)": "remove redundant type arguments. simplify arrayutils removeelements by using newdecrementandget() method: improve arrayutils removeelements time complexity to o(n) ()based on patch submitted by jeffery yuancrlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables. arrayutils removeelements methods use unnecessary hashseteliminate conversion of bitset to int[] arrayutils removeelements methods use unnecessary hashsetreplace hashset with bitset (less memory; faster)there are only two distinct boolean values arrayutils removeelements methods clone temporary index arrays unnecessarilyreduce number of created arrays[] complement arrayutils.addall() variants with by-index and by-value removal methods",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.parse(String)": "add final modifier to local variables.format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.getTimeInstance(int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.simpleQuote(StringBuilder,String)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateparser too strict on abbreviated short month symbolsadd final modifier to local variables.format.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.literal()": "add final modifier to local variables.pmd: these nested if statements could be combinedformat.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.notEmpty(T)": ": added validstate()",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.appendDigits(Appendable,int)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.",
  "src/main/java/org/apache/commons/lang3/tuple/Pair.java@org.apache.commons.lang3.tuple.PairAdapter.getLeft()": "[] add empty_array constants to classes inorg.apache.commons.lang3.tuple",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.tokenize(char,int,int)": "statements unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shift(double,int,int,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.crlf -> lfjavadoc: fix typo but working is still awkward.merge branch '': inconsistent behavior of swap for malformed inputs. thanksto adrian ber.new test caseexplanations about algorithmtabs replaced by spacesnew tests addedswap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.getDateInstance(int,Locale)": " simplify fastdateformat; eliminate boxingrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(int,TimeZone,Locale)": " simplify fastdateformat; eliminate boxingrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.getChars(char)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.join(byte,char)": "[] stringutils join apis for primitives.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeAll(float,int)": ": arrayutils.removeall(object array, int... indices) should do the clone, not its callers ()crlf -> lfjavadoc: fix typo but working is still awkward.[] complement arrayutils.addall() variants with by-index and by-value removal methods",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.TwoDigitYearField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.getInstance()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.wildcardType()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.getDateInstance(int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.getMantissa(String)": "fixing crlfsstatement unnecessarily nested within else clause.: numberutilscreatenumber() returns positive bigdecimal when negative float is expected. thanks to renat zhilkibaev.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.removeEndIgnoreCase(String,String)": "sort members.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.getDateTimeInstance(int,int,TimeZone)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FormatCache.java@org.apache.commons.lang3.time.MultipartKey.getDateTimeInstance(int,int,TimeZone,Locale)": " simplify fastdateformat; eliminate boxing",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.iterator(Calendar,int)": "add explict default case",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double,double)": "add final modifier to local variables.remove trailing whitespacescrlf -> lfjavadoc: fix typo but working is still awkward.implements : add a method to arrayutils for removing all occurrences of a given element. thanks to haiyang li.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.replaceAll(String,String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.hashCode()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toPrimitive(Character,char)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.removePattern(String,String)": "[] add regexutils class instead of overloadinh methods instringutils that take a regex to take precompiled pattern.[] add stringutils api to call string.replaceall in dotall a.k.a. single-line mode.",
  "src/main/java/org/apache/commons/lang3/arch/Processor.java@org.apache.commons.lang3.arch.Processor.isPPC()": ": add archutils - an utility class for the \"os.arch\" system property ()",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.init()": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.boolArrayToHexDigit(boolean)": "use better method names. document possible arrayindexoutofboundsexception and stringindexoutofboundsexception.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.format(Date,B)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.add(T,int,T)": "crlf -> lfjavadoc: fix typo but working is still awkward.checkstyle and trailing spaces. arrayutils.add(t[] array[, offset], t element) can create unexpected classcastexception",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.nullToEmpty(Double)": "crlf -> lfjavadoc: fix typo but working is still awkward.use isempty() where possible. thanks to james sawle for pointing this out.minor code simplificationadding nulltoempty methods to arrayutils per  and levon karayan's patch. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.parseObject(String,ParsePosition)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.TimeZoneStrategy(Locale)": "refactor \"gmt\" magic string.add a default case to switch to appease findbugs: nullpointerexception in fastdateparser$timezonestrategy ()replicate the fix for 1186add final modifier to local variables.remove redundant type arguments.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.getInstance(String,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java@org.apache.commons.lang3.concurrent.TimedSemaphore.isShutdown()": "[] added timedsemaphore class to concurrent package.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.WeekYear.TimeZoneNameRule(TimeZone,Locale,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(AccessibleObject)": "[] org.apache.commons.lang3.reflect.fieldutils.removefinalmodifier(field) does not clean up after itself. only call setaccessible if neccessary and tell the caller about it so it can undo the change if need be.add final modifier to local variables.adding nopmd tags for various empty catch blocksremove pre java 5 workaround",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.isAsciiPrintable(CharSequence)": "sort members.[github] commons-lang pull request : intellij idea refactorings..add final modifier to local variables.change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java@org.apache.commons.lang3.text.translate.NumericEntityUnescaper.isSet(OPTION)": "prevent redundant modifiersremove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)making unescapehtml _not_ escape unfinished numeric entities by default (it ignores them); however adding options that will fire an exception or unescape the numeric entity. 710",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.getTimeInstance(int,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.swap(double,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.merge branch '': inconsistent behavior of swap for malformed inputs. thanksto adrian ber.consistent treatment for negative indices for swap methodswap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.indexOf(String,String)": "rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687use index_not_found instead of magic number.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toObject(byte)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableInt.java@org.apache.commons.lang3.mutable.MutableInt.incrementAndGet()": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.getInstance(String)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadIdPredicate.findThreadGroups(ThreadGroupPredicate)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.toString(Object)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.createInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.equals(Object)": "format.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.createPattern(String)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/CharRange.java@org.apache.commons.lang3.CharacterIterator.hashCode()": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.format(Object,StringBuffer,FieldPosition)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.appendDisplayNames(Calendar,Locale,int,StringBuilder,Map)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.uuidToByteArray(UUID,byte,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesuse better method names. document possible arrayindexoutofboundsexception and stringindexoutofboundsexception.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.format(Calendar)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.compare(Map,Map)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.appendAllTo(StringBuilder,String,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.appendDetail(StringBuffer,String,char)": "fix the jsontostringstyle:except number types and boolean type, all other types in java should be 'appendasstring'",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.format(Date)": "change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. applying my fix to , and mikael's test case; fixing the fastdateformat to properly include the locale when formatting a date",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.swap(boolean,int,int,int)": "add final modifier to local variables.crlf -> lfjavadoc: fix typo but working is still awkward.merge branch '': inconsistent behavior of swap for malformed inputs. thanksto adrian ber.consistent treatment for negative indices for swap methodswap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java@org.apache.commons.lang3.mutable.MutableDouble.compareTo(MutableDouble)": "pmd: useless parentheses.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.addRegex(FastDateParser,StringBuilder)": " fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses . fastdateparser does not handle non-gregorian calendars properly applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.copy(KeyValue,int,String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.init()": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.isNumber(String)": ": better naming and java 6 specifics around handling a leading +fixing crlfsstatement unnecessarily nested within else clause.: numberutilsisparsable method(s). thanks to juan pablo santos rodr\u00edguez. fix numberutilsisnumber() returns false for \"0.0\", \"0.4790\", et al numberutilsisnumber(string) fails to reject invalid octal numbers numberutilsisnumber does not allow for hex 0xabcdadd final modifier to local variables.fix pmd issues: \"these nested if statements could be combined\"wsfixing numberutils.isnumber so that 1.1l is not considered a number. 664",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.abbreviate(CharSequence,int,int)": "moving abbreviate + abbreviatemiddle to charsequences",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isSameType(Object,Object)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.isRegistered(Object)": "add final modifier to local variables.[] part 2: refactor tostringstyle and tostringbuildertest to verify that we are unsetting the registry when no longer needed",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.Iso8601_Rule(int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.parse(String,ParsePosition,Calendar)": "lvar should not hide ivar.add final modifier to local variables.format.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/builder/IDKey.java@org.apache.commons.lang3.builder.IDKey.IDKey(Object)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaceswhen writing about the hash code, use 'hash code', the compound 'hashcode' is not a work in english. the text 'hashcode()' is left as in of course.",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadIdPredicate.test(Thread)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.TwoDigitMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.UnpaddedMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.containsNone(CharSequence,String)": "rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.reverse(byte,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.[] add arrayutils.reverse(array, from, to) methods.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.addNamesToKeyValues(List,Map)": ": fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.swap(float,int,int,int)": "add final modifier to local variables.better javadoc for arrayutils.swap variantscrlf -> lfjavadoc: fix typo but working is still awkward.merge branch '': inconsistent behavior of swap for malformed inputs. thanksto adrian ber.consistent treatment for negative indices for swap methodexamples added in javadoctabs replaced by spacesnew tests addedswap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.CopyQuotedStrategy(String)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.getTimeInstance(int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.format(Object,StringBuffer,FieldPosition)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.FastDateParser(String,TimeZone,Locale)": "restore binary compartibilitytrailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/tuple/Triple.java@org.apache.commons.lang3.tuple.Triple.compareTo(Triple)": "adding henning's github pull request with a triple implementation. 675",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyClosed.nextCheckIntervalData(int,CheckIntervalData,State,long)": "add final modifier to method parameters.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.getRawType()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.finite(double,String,Object)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.setArraySeparator(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.getRegistry()": "[] part 2: refactor tostringstyle and tostringbuildertest to verify that we are unsetting the registry when no longer needed[] clear threadlocal recursion registry (compatibly with existing tests, first pass)",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.getDateTimeInstance(int,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toPrimitive(Float,float)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/SerializationUtils.java@org.apache.commons.lang3.ClassLoaderAwareObjectInputStream.deserialize(InputStream)": "use validateistrue to validate arguments: update java requirement from java 6 to 7use try with resources in serializationutils: serializationutils::deserialize has unnecessary code and a comment for that ()there is no real cce possible, even the javadoc say so. github's blame showed the code and javadoc is written by two indiviual person in two different years, so that may be the cause.eliminate one unchecked warning; localise and document othersadd final modifier to local variables.[] use generics in serializationutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.getDateInstance(int,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/ClassPathUtils.java@org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedPath(Package,String)": "7micro optimization: replace stringbuilder with string concatenation so that the compiler can better optimize the codeuse final consistently. : new class classpathutils with methods for turning fqn into resource path",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.now()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/RandomStringUtils.java@org.apache.commons.lang3.RandomStringUtils.random(int,boolean,boolean)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java@org.apache.commons.lang3.reflect.FieldUtils.getAllFields(Class)": "[] add fieldutils getallfields() to return all the fields defined in the given class and super classes. alternate impl that splits into two apis, one with an array result, the other with a list.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.getTimeInstance(int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.getPattern()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.parseObject(String,ParsePosition)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.ProxyInvocationHandler.create(Class)": "remove redundant type arguments.: add event support utilitiesapplying documentation patch \"commons-event-support-docs.patch\" from michael wooten.changing eol-style to native.misc. event utils.",
  "src/main/java/org/apache/commons/lang3/tuple/ImmutableTriple.java@org.apache.commons.lang3.tuple.ImmutableTriple.emptyArray()": "[] add empty_array constants to classes inorg.apache.commons.lang3.tuple",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.wrap(Type)": "provide simple method to wrap a given type to the typed interface",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.append(StringBuffer,String,double,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.smallerObj(Comparable,T,String,Object)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.TwoDigitYearField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(ParameterizedType)": "[] vastly expanded typeutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.hashCode()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.toInteger(boolean)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.ws",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.differentObject(T,T)": ": new methods for lang3.validate ()fixed method names; fixed differentobject to use object.equals",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.indexOf(double,double,double)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(Object,Class)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.withLowerBounds(Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/StopWatch.java@org.apache.commons.lang3.time.StopWatch.toString()": "sort methods.",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.append(short,short)": "use not bool instead of bool == false",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.appendValueAsString(StringBuffer,String)": " - jsontostringstyle does not escape double quote in a stringvalue[github] commons-lang pull request : intellij idea refactorings..: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/tuple/Triple.java@org.apache.commons.lang3.tuple.Triple.getLeft()": "[] add empty_array constants to classes inorg.apache.commons.lang3.tuple",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.toLongString(TypeVariable)": "remove redundant casts ()remove redundant casts throughout the codebase to make it cleaner and easier to read.validation[] new type util features",
  "src/main/java/org/apache/commons/lang3/reflect/ConstructorUtils.java@org.apache.commons.lang3.reflect.ConstructorUtils.invokeConstructor(Class,Object)": "a bit of dog food and a lot of javadoc tweakageadd final modifier to local variables.[] constructorutils.invoke*(*, object... args) variants cannot handle null valuesreview and cleanup javadoc in constructorutilsmove/comment suppresswarnings(unchecked)/refactor surrounding code",
  "src/main/java/org/apache/commons/lang3/text/WordUtils.java@org.apache.commons.lang3.text.WordUtils.containsAllWords(CharSequence,CharSequence)": "add final modifier to local variables.merge branch '': add method containsallwords to wordutils. thanks to eduardo martins.always return false to contains a null word",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.DayInWeekField.format(Date)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.parameterizeWithOwner(Type,Class,Map)": "validation[] new type util features",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.join(byte,char,int,int)": "sort members.extract method.add final modifier to local variables.[] stringutils join apis for primitives.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.contains(double,double)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeLiteral.java@org.apache.commons.lang3.reflect.TypeLiteral.equals(Object)": "[github] commons-lang pull request : intellij idea refactorings..[] provide typeliteral class similar to javax.enterprise.util.typeliteral",
  "src/main/java/org/apache/commons/lang3/text/StrMatcher.java@org.apache.commons.lang3.text.StringMatcher.toString()": "add stringmatchertostring(); useful from a debugger.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.getInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.setNullText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean)": "use term \"binary\" instead of \"boolarray\" in conversion. improve javadoc of class.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableBoolean.java@org.apache.commons.lang3.mutable.MutableBoolean.setTrue()": "<action issue=\"\" type=\"add\" dev=\"ggregory\">add apis mutableboolean settrue() and setfalse()</action>",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.getLocale()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.format(Date)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.StrategyAndWidth(Strategy,int)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.median(Comparator,T)": "remove redundant type arguments.add final modifier to local variables.[] add mode and median comparable... methods to objectutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.StrategyAndWidth(Strategy,int)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.toVarArgs(Method,Object)": "add final modifier to local variables.: add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.parseObject(String,ParsePosition)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.applyRules(Calendar,B)": "add final modifier to local variables.1154fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.getTimeInstance(int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.TimeZoneNameRule(TimeZone,Locale,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java@org.apache.commons.lang3.concurrent.ConstantFuture.initializeUnchecked(ConcurrentInitializer)": "add final modifier to local variables.: added atomicinitializer class. introduced new concurrentinitializer interface which is now implemented by all all initializer classes.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.appendAll(T)": "fix typos in commentssuppress warning about vararg usage.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.init()": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.hasCause(Throwable,Class)": "sort by method name.add final modifier to method parameters. added alternative checked exception wrapping/unwrapping methods",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.replace(int,int,String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.equals(Object)": "format.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.FastDateParser(String,TimeZone,Locale,Date)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.make sure placement of curly braces is consistent",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.hashCode()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.readObject(ObjectInputStream)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.getDateInstance(int,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/mutable/MutableLong.java@org.apache.commons.lang3.mutable.MutableLong.getAndAdd(Number)": "add final modifier to local variables. addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.getTimeInstance(int,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.getFieldWidth()": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.format(Date)": "change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. applying my fix to , and mikael's test case; fixing the fastdateformat to properly include the locale when formatting a date",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toShort(byte)": ": please add number to byte[] methods. suggested by lilianne e. blaze. final patch from vincent ricard (with thanks to henri yandell).",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.unrollBounds(Map,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.normalizeSpace(String)": "sort members.flips the order of conditional expressions and 'if' statements whose conditions were negatedadd final modifier to local variables.: stringutilsnormalizespace does not trim the string anymore ()fix typo: improve performance of normalize space. thanks to libor ondrusek. this  from github.[] stringutils join with var args. add and use space string constant for \" \".rename private whitespace_block to whitespace_pattern.format.tab and trailing space removaladding shashi kant sharma's implementation of endswithany - 614: add normalizespace to stringutils",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.hashCode()": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.isSameDay(Calendar,Calendar)": "pmd: useless parentheses",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.left(String,int)": "sort members.rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.wrap(Type)": "provide simple method to wrap a given type to the typed interface",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.lastIndexOf(StrMatcher,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.equals(Object)": "[github] commons-lang pull request : intellij idea refactorings..add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.getDateTimeInstance(int,int,TimeZone)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.getTimeInstance(int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableShort.java@org.apache.commons.lang3.mutable.MutableShort.getAndDecrement()": "add final modifier to local variables. addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.appendTo(Appendable,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.FastDatePrinter(String,TimeZone,Locale)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.Builder.uncaughtExceptionHandler(Thread)": "use validatenotnull instead of \"throw new nullpointerexception\"add final modifier to method parameters.adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/text/StrMatcher.java@org.apache.commons.lang3.text.CharMatcher.stringMatcher(String)": "eat own dog food: call stringutils.isempty().",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.getShortClassName(String)": "[] fix classutils.getshortname to only do a reverse lookup for array types.add final modifier to local variables.eat own dog food: stringutilsisempty(string) and replace some but not all stringlength() == 0 with stringisempty()add two new null-safe apis: getsimplename(*). see https://issues.apache.org/jira/browse/696",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.getDateTimeInstance(int,int,TimeZone)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.format(Date)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.equals(ParameterizedType,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java@org.apache.commons.lang3.StringEscapeUtils.unescapeEcmaScript(String)": "added escape/unescapejson methods per maurizio cucchiara's patch in 797",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.BasicThreadFactory.initializeThread(Thread)": "rename parameter 't' to 'thread'.add final modifier to local variables.explicit boxingadding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toPrimitive(Byte)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java@org.apache.commons.lang3.builder.HashCodeBuilder.append(Object)": "add final modifier to local variables.convert to java 5 enhanced loops. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.Iso8601_Rule.format(long,B)": ": fastdateprinter generates date objects wastefullyfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.adjustYear(int)": "format.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.format(long,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateprinter generates date objects wastefullyapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java@org.apache.commons.lang3.time.DateFormatUtils.format(Date,String,TimeZone,Locale)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java@org.apache.commons.lang3.mutable.MutableDouble.addAndGet(double)": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java@org.apache.commons.lang3.text.translate.UnicodeUnescaper.UnicodeUnescaper(OPTION)": "scratch that, compiler disagrees (aka, i'm wrong)",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.getFragmentInSeconds(Date,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesmake use of existing timeunit class to manage time units.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.format(long)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.[] fastdateformat generates date objects wastefully.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.contains(short,short)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.TwoDigitNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.strip(String)": "sort members.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.getTimeZone()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadUtils.findThreadsByName(String,ThreadGroup)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.setArrayEnd(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.CaseInsensitiveTextStrategy(int,Calendar,Locale)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.: fastdateformat doesn't respect summer daylight in some localized stringsrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display namesuse final consistently. tab policeremove keyvalues map  per sebb's suggestion",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toObject(long)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shift(short,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.swap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.appendTo(StringBuffer,Calendar)": "zz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java@org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.checkName(String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java@org.apache.commons.lang3.exception.ContextedRuntimeException.replaceValue(String,Object)": "fix defaultexceptioncontext.addvalue that overwrites information in a recursive situation (). allow explicit replacement of a label with the new replacevalue methods.",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.greaterOrEqualObject(Comparable,T)": ": new methods for lang3.validate ()fixed method names; fixed differentobject to use object.equals",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.getLocaleSpecificStrategy(int,Calendar)": ": fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.MemberUtils.Executable(Method)": ": add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.equals(Object)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/CharRange.java@org.apache.commons.lang3.CharacterIterator.CharacterIterator(CharRange)": "adding vincent ricard's patch to charrange.java providing an iterator that lets you walk the chars in the range. 454",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.CheckIntervalData.stateStrategy(State)": "[github] commons-lang pull request : intellij idea refactorings..add final modifier to local variables.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.toString()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.shortToHex(short,int,String,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesscope of local variabel shift can be narrowerformat to 120 line length.add final modifier to local variables.use better method names. document possible arrayindexoutofboundsexception and stringindexoutofboundsexception.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.createInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.appendTo(Appendable,int)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.remove(boolean,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(Type,Class)": "[] vastly expanded typeutils",
  "src/main/java/org/apache/commons/lang3/RandomStringUtils.java@org.apache.commons.lang3.RandomStringUtils.random(int,char)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.replaceIgnoreCase(String,String,String,int)": "sort members.merge branch '': add stringutilsremoveignorecasepatch by gokul nanthakumar c",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.getDateTimeInstance(int,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.InitStripAccents.removeAccentsSUN(CharSequence)": " use iod for stripaccent init",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.getParsePattern()": "allow access to parsedpattern for test purposesmake parseexception text similar to that thrown by simpledateformat",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.center(CharSequence,int,char)": "moving center, left, leftpad, right, rightpad, mid, uppercase, lowercase and swapcase over to charsequence input. 687",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.CopyQuotedStrategy(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.append(StringBuffer,String,short,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.FastDateFormat(String,TimeZone,Locale)": "make checkstyle happy and applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.nullToEmpty(boolean)": "crlf -> lfjavadoc: fix typo but working is still awkward.use isempty() where possible. thanks to james sawle for pointing this out.minor code simplificationadding nulltoempty methods to arrayutils per  and levon karayan's patch. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.Iso8601_Rule.parsePattern()": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove redundant type arguments.: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y') partial: implement format 'u' for fastdateformat, day number of weekzz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isEmpty(double)": "crlf -> lfjavadoc: fix typo but working is still awkward.simplify isempty be reusing getlengths/if (foo) { return true; } return false;/return foo;/g",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.init(Calendar)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.don't need a copy of this field.add final modifier to local variables.remove redundant type arguments.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.init(Calendar)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.don't need a copy of this field.add final modifier to local variables.remove redundant type arguments.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.SimpleToStringStyle()": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.TwelveHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/EnumUtils.java@org.apache.commons.lang3.EnumUtils.getEnumIgnoreCase(Class,String)": ": enumutils.getenumignorecase and isvalidenumignorecase methods added ()",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.format(Date,B)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/text/WordUtils.java@org.apache.commons.lang3.text.WordUtils.uncapitalize(String,char)": "add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)eat own dog food: call stringutils.isempty().[] swapcase and *capitalize speedups.",
  "src/main/java/org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.java@org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.oppositeState()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.parsePattern()": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove redundant type arguments.: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y') partial: implement format 'u' for fastdateformat, day number of weekzz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.getMaxLengthEstimate()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.toBooleanObject(int)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.ws",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.indexOf(String,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.mode(T)": "remove redundant type arguments.add final modifier to local variables.[] add mode and median comparable... methods to objectutils",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.shortArrayToLong(short,int,long,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesscope of local variabel shift can be narrowerpmd: useless parenthesesformat to 120 line length.add final modifier to local variables.add final modifier to method parameters.use better method names. document possible arrayindexoutofboundsexception and stringindexoutofboundsexception.",
  "src/main/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java@org.apache.commons.lang3.text.translate.UnicodeEscaper.above(int)": "reverting r1090111 - moving the text.translate escapers back from using range to replicating parts of the range api. see the list for details ('unnecessary boxing in stringescapeutils etc'), the move to range was an uncomfortable fit. ",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.getMatchingMethod(Class,String,Class)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: update java requirement from java 6 to 7replace usage of deprecated arrayutilsisequals with objectsdeepequalsadd final modifier to local variables.fix whitespaces, add missing @since tag: enhance methodutils to allow invocation of private methods ()",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short,short)": "add final modifier to local variables.remove trailing whitespacescrlf -> lfjavadoc: fix typo but working is still awkward.implements : add a method to arrayutils for removing all occurrences of a given element. thanks to haiyang li.",
  "src/main/java/org/apache/commons/lang3/RegExUtils.java@org.apache.commons.lang3.RegExUtils.replaceAll(String,Pattern,String)": "[] add regexutils class instead of overloadinh methods instringutils that take a regex to take precompiled pattern.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.CheckIntervalData.now()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.replace(String,String,String,int)": "merge branch '': add stringutilsremoveignorecasepatch by gokul nanthakumar cadd final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)use index_not_found instead of magic number.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.getStrategy(String,Calendar)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format fastdateparser does not handle excess hours as per simpledateformatdocsadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .don't mutate parameterstab police: fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.getStrategy(String,Calendar)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format fastdateparser does not handle excess hours as per simpledateformatdocsadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.parseToken(String,int)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.indexOfAnyBut(CharSequence,CharSequence)": "sort members.add final modifier to local variables.moving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils classreplacing some of the older code. when performing a mutation operation (even if it's on an immutable by returning a new instance), string should go in and string should come out. when performing a non-mutation operation, charsequence should be passed in. 687moving lastindexof, contains, containswhitespace, indexofany, containsany, indexofanybut, containsonly, containsnone and substring over to using charsequences for parameters. 687",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.getClassSimpleName(Object)": "[] add methods to objectutils to get various forms of classnames in a null-safe manner",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.readObject(ObjectInputStream)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.compare(KeyValue,KeyValue)": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.readFrom(Readable)": ": add zero copy write method to strbuilder; : add zero copy read method to strbuilder. thanks to mikhail mazursky.",
  "src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java@org.apache.commons.lang3.builder.DiffBuilder.build()": "rename to avoid clashing with parameter namesrenamed difflist to diffresult as per discussion in .: there should be a differencebuilder with a reflectiondifferencebuilder implementation",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.applyRules(Calendar,StringBuffer)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.parseToken(String,int)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.TimeZoneNameRule(TimeZone,Locale,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.InitStripAccents.join(Object,String,int,int)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.min(T)": "add final modifier to local variables. - change objectutils min() & max() functions to use varargs rather than just two parameters",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.setContentEnd(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.modify(int)": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/CircuitBreakingException.java@org.apache.commons.lang3.concurrent.CircuitBreakingException.CircuitBreakingException(Throwable)": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.getDisplayNames(int,Calendar,Locale)": " fastdateparser could use calendar.getdisplaynames for all text fieldsremove unnecessary keyvalue instances: fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.contains(float,float)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.setCalendar(FastDateParser,Calendar,String)": "[] timezone.gettimezone() in fastdateparser causes resourcecontention</action>. this .utc and gmt are the same, so simplify.refactor \"gmt\" magic string.make sure lines in files don't have trailing white spaces and remove all trailing white spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .trailing spaces fastdateparser does not handle non-gregorian calendars properly unnecessary ;applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.parsePattern()": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove redundant type arguments.: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y') partial: implement format 'u' for fastdateformat, day number of weekzz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.StringLiteral(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.setSummaryObjectEndText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.equalsIgnoreCase(StrBuilder)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toPrimitive(Float)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.indexOf(String,char,int)": "use index_not_found instead of magic number.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.TextStrategy(int)": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.TimeZoneDisplayKey(TimeZone,boolean,int,Locale)": "don't mutate parametersadd final modifier to method parameters.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.getDateInstance(int,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.unregister(Object)": "add final modifier to local variables.promote uniformity between branches by using registry accessorunused imports + uh, why would you synchronize access to a threadlocal?  :p[] clear threadlocal recursion registry (compatibly with existing tests, first pass)",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java@org.apache.commons.lang3.concurrent.MultiBackgroundInitializerResults.MultiBackgroundInitializerResults(Map,Map,Map)": "add final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.truncate(Date,int)": "use validateistrue to validate argumentsreplaced private integer constants with private static enum.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.repeat(String,String,int)": "sort members.make whitespace use after tokens consistent and add a checkstyle rule to enforce it.statements unnecessarily nested within else clause.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/CharRange.java@org.apache.commons.lang3.CharacterIterator.iterator()": "adding vincent ricard's patch to charrange.java providing an iterator that lets you walk the chars in the range. 454",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.appendAll(T)": "fix typos in commentssuppress warning about vararg usage.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.toIntegerObject(Boolean)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.ws",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.TimeZoneNameRule(TimeZone,Locale,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.appendValueAsString(StringBuffer,String)": " - jsontostringstyle does not escape double quote in a stringvalue[github] commons-lang pull request : intellij idea refactorings..: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.appendRecursiveTypes(StringBuilder,int,Type)": " - stackoverflowerror on typeutils.tostring(...) for a generic return type of enum.valueof ()",
  "src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnpairedSurrogateRemover.java@org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover.translate(int,Writer)": "statement unnecessarily nested within else clause.: add methods for removing all invalid characters according to xml 1.0 and xml 1.1 in an input string to stringescapeutils. thanks to adam hooper",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.appendTo(StringBuffer,Calendar)": "zz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArchUtils.java@org.apache.commons.lang3.ArchUtils.getProcessor()": ": add archutils - an utility class for the \"os.arch\" system property ()",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.setArrayStart(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/NotImplementedException.java@org.apache.commons.lang3.NotImplementedException.NotImplementedException(String)": " make some private fields finalreturning notimplementedexception to lang after it was removed in lang 3.0 per the request in . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.NoClassNameToStringStyle()": ": add noclassnametostringstyle implementation of tostringstyle. this  from github. thanks to innokenty shuvalov.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.appendTo(Appendable,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.appendTo(Appendable,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.getPattern()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.getMaxLengthEstimate()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.appendln(StringBuilder,int,int)": "<action issue=\"\" type=\"add\">strbuilder should support stringbuilder as an input parameter</action>",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.TextField(int,String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyClosed.incrementAndCheckState(Integer)": " fix eventcountcircuitbreaker increment batchfixes incrementandcheckstate(integer increment) by passing the increment downstream.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.StrSubstitutor(StrLookup,StrMatcher,StrMatcher,char,StrMatcher)": "add missing since tags for strsubstitutor; wrap lines longer than 80 chars[] strsubstitutor now supports the declaration of default values for the variables to be replaced. thanks to woonsan ko for the patch.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.toString()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.toString()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java@org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(String,ArrayList)": ": exception while using extendedmessageformat and escaping braces. this fixes  from github. thanks to andrey khobnya.applying thomas' patch from  - fixing arne burmeister's reported exception when combining custom and choice formatsadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.median(Comparator,T)": "remove redundant type arguments.add final modifier to local variables.[] add mode and median comparable... methods to objectutils",
  "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java@org.apache.commons.lang3.concurrent.TimedSemaphore.TimedSemaphore(ScheduledExecutorService,long,TimeUnit,int)": "using validate where possible in concurrent package.add final modifier to local variables.add final modifier to method parameters.[] added timedsemaphore class to concurrent package.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.setLength(int)": ": add nul byte to charutils. thanks to beluga behr.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.isNumericSpace(CharSequence)": "sort members.[github] commons-lang pull request : intellij idea refactorings..add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/math/Fraction.java@org.apache.commons.lang3.math.Fraction.mulAndCheck(int,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesformat to 120 line length.add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.Range.toString()": "micro optimization: replace stringbuilder with string concatenation so that the compiler can better optimize the codeadd final modifier to local variables.refactor range with lots of new methodsmodifying tostring method to cache in a thread-safe way per 481adding string lazy caching",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isNotEmpty(byte)": "crlf -> lfjavadoc: fix typo but working is still awkward.simplify isnotempty by reusing isemptyapplying chandrashekar m's patch to , adding isnotempty(array) methods to arrayutils. ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.append(StringBuilder)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.<action issue=\"\" type=\"add\">strbuilder should support stringbuilder as an input parameter</action>",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.newCalendar()": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java@org.apache.commons.lang3.StringEscapeUtils.escapeXml10(String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: add methods for removing all invalid characters according to xml 1.0 and xml 1.1 in an input string to stringescapeutils. thanks to adam hooper",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.getAllInterfaces(Class)": "remove redundant type arguments.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/SystemUtils.java@org.apache.commons.lang3.SystemUtils.SystemUtils()": "- fix () systemutils.getjavaversionasfloat throws stringindexoutofboundsexception on android runtime/dalvik vm- refactor for unit testing.- remove odd test code which is copy and pasted from systemutils, which therefore does not test anything.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableByte.java@org.apache.commons.lang3.mutable.MutableByte.decrementAndGet()": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.getDateTimeInstance(int,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.ProxyInvocationHandler.EventListenerSupport(Class,ClassLoader)": "add serialization support to eventlistenersupportprovide read access to the registered listener instances: add event support utilitiesapplying documentation patch \"commons-event-support-docs.patch\" from michael wooten.improving error checking logic and adding test cases to verify.changing eol-style to native.misc. event utils.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java@org.apache.commons.lang3.concurrent.BackgroundInitializer.setExternalExecutor(ExecutorService)": "add final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.TimeZoneStrategy(Calendar,Locale)": ": fastdateformat doesn't respect summer daylight in some localized stringsmerge branch 'master' of https://github.com/nickmanley/commons-langthis  fix nullpointerexception in fastdateparser$timezonestrategyfix nullpointerexception in fastdateparser$timezonestrategyrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.StrategyAndWidth(Strategy,int)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.InitStripAccents.replace(String,String,String,int)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.getMaxWidth(ListIterator)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.getDateTimeInstance(int,int,TimeZone)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.AlwaysTruePredicate.test(Thread)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.appendTo(StringBuffer,Calendar)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.getFragmentInDays(Date,int)": "make use of existing timeunit class to manage time units.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.appendFixedWidthPadRight(Object,int,char)": "reuseadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.insert(int,double,double)": "use final.remove trailing white spacesadded new vararg methods to insert values into an array at an index.this implements . this commit also deprecates the add() methodsthat inserted a single value into an array at an index.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.KeyValue(String,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.append(StringBuffer,String,float,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.GenericArrayTypeImpl(Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.nullToEmpty(Character)": "crlf -> lfjavadoc: fix typo but working is still awkward.use isempty() where possible. thanks to james sawle for pointing this out.minor code simplificationadding nulltoempty methods to arrayutils per  and levon karayan's patch. ",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object,boolean,String,Object,Class)": "pmd: nested if statements can be combinedmethodutilsinvokemethod(object object, boolean forceaccess, string methodname, object[] args, class<?>[] parametertypes): do not restore the accessibility of the method object, because methodsetaccessible only modifies the behavior of the accessibleobject not of the actual method.fix whitespaces, add missing @since tag: enhance methodutils to allow invocation of private methods ()",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.PaddedNumberField(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.addAll(boolean,boolean)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.Builder.getPriority()": "adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.append(StringBuffer,String,long,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.validState(boolean)": "[github] commons-lang pull request : intellij idea refactorings..throw illegalstateexception as documented from validstate(): added validstate()",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.appendFullDigits(Appendable,int,int)": "add final modifier to local variables.: fastdateprinter memory allocation regressionfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.appendDisplayNames(Calendar,Locale,int,StringBuilder,Map)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.parse(String,ParsePosition,Calendar)": "lvar should not hide ivar.add final modifier to local variables.format.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.getMethodsListWithAnnotation(Class,Class,boolean,boolean)": "explicit type parameters can be removeduse final.: add methodutilsfindannotation and extend methodutilsgetmethodswithannotation for non-public, super-class and interface methodsfix bug introduced by last commit: add methodutilsfindannotation and extend methodutilsgetmethodswithannotation for non-public, super-class and interface methodsadd changes.xml entry and minimal clean-up.: adds methodutilsfindannotation and extend methodutilsgetmethodswithannotation for non-public, super-class and interface methods ()",
  "src/main/java/org/apache/commons/lang3/reflect/ConstructorUtils.java@org.apache.commons.lang3.reflect.ConstructorUtils.getAccessibleConstructor(Constructor)": "[] constructorutils.getaccessibleconstructor() does not check the accessibility of enclosing classesa bit of dog food and a lot of javadoc tweakagemove/comment suppresswarnings(unchecked)/refactor surrounding code",
  "src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java@org.apache.commons.lang3.math.IEEE754rUtils.max(float,float)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.reverse()": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.hashCode()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java@org.apache.commons.lang3.concurrent.ConstantInitializer.ConstantInitializer(T)": "[] added constantinitializer class",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.isEnableSubstitutionInVariables()": "[] added support for substitution in variable names.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.unwrap(String,char)": "sort members.[github] commons-lang pull request : intellij idea refactorings..: add nul byte to charutils. thanks to beluga behr.remove trailing white spaces - add method for converting string to an array of code pointsadd final modifier to local variables.: add stringutilsunwrapadd more examples and testsfix formattingadd changes.xml entry: add stringutilsunwrap (, )",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.setFieldNameValueSeparator(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.readObject(ObjectInputStream)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.toString(T)": " - stackoverflowerror on typeutils.tostring(...) for a generic return type of enum.valueof ()",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.parseObject(String,ParsePosition)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.append(StringBuffer,String,byte,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.appendTo(StringBuffer,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/tuple/MutableTriple.java@org.apache.commons.lang3.tuple.MutableTriple.getMiddle()": "sort methods.adding henning's github pull request with a triple implementation. 675",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.getCanonicalName(Class)": "[] add methods to classutils to get various forms of classnames in a null-safe manner",
  "src/main/java/org/apache/commons/lang3/text/translate/JavaUnicodeEscaper.java@org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.below(int)": "<action issue=\"\" type=\"fix\">stringescapeutils.escapejava() and escapeecmascript() do not output the escaped surrogate pairs that are java parsable</action>",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategy.EventCountCircuitBreaker(int,long,TimeUnit,int)": "add final modifier to method parameters.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.appendTo(StringBuffer,Calendar)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.intToHexs(int,int,String,int,int)": "code clean-up for checkstyle.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.classToString(Class)": ": typeutils.tostring() doesn't handle primitive and object arrays correctlyapply patch by aaron digulla[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FormatCache.java@org.apache.commons.lang3.time.MultipartKey.equals(Object)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.subSequence(CharSequence,int)": "removing charsequenceutils in favour of putting the code in stringutils",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.getContent()": "statements unnecessarily nested within else clause.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.createKeyValues(List)": ": fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.CopyQuotedStrategy(String)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display namesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.getTimeZone()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isSameLength(char,char)": "crlf -> lfjavadoc: fix typo but working is still awkward.simplify issamelenght implementations by reusing getlength. this also fixes a lot of the useless paranthesis warnings generated by pmd.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.TimeZoneNameRule(TimeZone,Locale,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.TwoDigitNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.parseDateWithLeniency(String,Locale,String,boolean)": "make sure placement of curly braces is consistentadd final modifier to local variables.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names: dateutilstest.testlang530 fails for some timezonesadd final modifier to local variables.add final modifier to method parameters. - dateutilsparsedate uses default locale; add locale support",
  "src/main/java/org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.java@org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.isClosed()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.equals(StrBuilder)": ": strbuilder.equals(strbuilder) doesn't check for null inputsadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.toLongString(TypeVariable)": "remove redundant casts ()remove redundant casts throughout the codebase to make it cleaner and easier to read.validation[] new type util features",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.getOwnerType()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.init()": "add final modifier to local variables.tab police: fastdateparser could use calendar.getdisplaynames for all text fieldsshow where the parsing failed fastdateparser does not handle unterminated quotes correctlytrailing spaces fastdateparser does not handle non-gregorian calendars properlyfix bug in java 7 (locale.tostring() format has changed) fastdateparser does not handle non-gregorian calendars properly applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.setArraySeparator(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.lastIndexOf(int,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.GenericArrayTypeImpl(Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.parsePattern()": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove redundant type arguments.: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y') partial: implement format 'u' for fastdateformat, day number of weekzz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/tuple/Pair.java@org.apache.commons.lang3.tuple.PairAdapter.getValue()": "sort methods.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.format(Date,StringBuffer)": "change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.identityToString(Appendable,Object)": "refactor magic char.better exception message.use validatenotnull instead of \"throw new nullpointerexception\" add objectutils.toidentitystring methods that support stringbuilder, strbuilder, and appendable",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.add(float,int,float)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadUtils.ThreadUtils()": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.parsePattern()": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove redundant type arguments.: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y') partial: implement format 'u' for fastdateformat, day number of weekzz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.DayInWeekField(NumberRule)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.format(Date)": "change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. applying my fix to , and mikael's test case; fixing the fastdateformat to properly include the locale when formatting a date",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.format(Calendar,StringBuffer)": "4fastdateformat apis that use a stringbuilderapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.FastDatePrinter(String,TimeZone,Locale)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.parse(String)": "add final modifier to local variables.format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display namesadd final modifier to local variables.allow access to parsedpattern for test purposesmake parseexception text similar to that thrown by simpledateformat fastdateparser does not handle non-gregorian calendars properlyuse calendargetdisplaynames() instead of dateformatsymbolsgeteras()applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeElement(float,float)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.getDateInstance(int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.close()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/math/Fraction.java@org.apache.commons.lang3.math.Fraction.multiplyBy(Fraction)": "use validateistrue to validate argumentsformat to 120 line length.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.classToString(Class)": ": typeutils.tostring() doesn't handle primitive and object arrays correctlyapply patch by aaron digulla[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.getTimeInstance(int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.applyRules(Calendar,B)": "add final modifier to local variables.1154fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.getInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.register(Object)": "remove redundant type arguments.add final modifier to local variables.promote uniformity between branches by using registry accessorunused imports + uh, why would you synchronize access to a threadlocal?  :p[] clear threadlocal recursion registry (compatibly with existing tests, first pass)",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.newCalendar()": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.selectNumberRule(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/NotImplementedException.java@org.apache.commons.lang3.NotImplementedException.NotImplementedException(String,Throwable)": " make some private fields finalreturning notimplementedexception to lang after it was removed in lang 3.0 per the request in . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds(Type)": "remove redundant type arguments.validationadd final modifier to local variables.setting the length of the new array to optimize speed[] vastly expanded typeutils",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.toCharArray()": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.ProxyInvocationHandler.getListeners()": "provide read access to the registered listener instances",
  "src/main/java/org/apache/commons/lang3/tuple/ImmutableTriple.java@org.apache.commons.lang3.tuple.ImmutableTriple.ImmutableTriple(L,M,R)": "adding henning's github pull request with a triple implementation. 675",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.toStringBuilder()": "strbuilder implements builder; provide tostringbuilder as tostringbuffer",
  "src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java@org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(Object,String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesmade it clear that the fields of the object form the hash code ().pulled magic values into constants.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.createKeyValues(List)": ": fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/text/translate/JavaUnicodeEscaper.java@org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.above(int)": "<action issue=\"\" type=\"fix\">stringescapeutils.escapejava() and escapeecmascript() do not output the escaped surrogate pairs that are java parsable</action>",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.setContentStart(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/text/StrMatcher.java@org.apache.commons.lang3.text.StringMatcher.charSetMatcher(String)": "eat own dog food: stringutilsisempty(string) and replace some but not all stringlength() == 0 with stringisempty()",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.MemberUtils.isAccessible(Member)": "remove pre java 5 workaround",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.toBooleanObject(Integer,Integer,Integer,Integer)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.ws[] removed unnecessary elses and use of ternary operator with primitive boolean consequences e.g. (some boolean expression) ? true : false",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toLong(String,long)": "fixing crlfsstatement unnecessarily nested within else clause.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/tuple/Triple.java@org.apache.commons.lang3.tuple.TripleAdapter.getLeft()": "[] add empty_array constants to classes inorg.apache.commons.lang3.tuple",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.boolsToHexDigit(boolean,int)": "code clean-up for checkstyle.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.use lowercase presentation for hex values as it is done in the jdk.use jdk functionality where available.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.Pair.getTimeInstance(int,TimeZone,Locale)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.parsePattern()": "adjust fastdateformat for java 7 behavior regarding format of the year pattern ().refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyOpen.EventCountCircuitBreaker(int,long,TimeUnit)": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TzInfo.getNextStrategy()": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.longToShortArray(long,int,short,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesscope of local variabel shift can be narrowerformat to 120 line length.add final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.applyRules(Calendar,StringBuffer)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.format(Object)": "4fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.TwelveHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.typesSatisfyVariables(Map)": "the the patrol.validationadd final modifier to local variables.[] vastly expanded typeutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.FastDatePrinter(String,TimeZone,Locale)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.format(Calendar,B)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.appendDigits(StringBuffer,int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/builder/Diff.java@org.apache.commons.lang3.builder.Diff.getFieldName()": ": there should be a differencebuilder with a reflectiondifferencebuilder implementation",
  "src/main/java/org/apache/commons/lang3/Functions.java@org.apache.commons.lang3.Functions.apply(FailableFunction,I)": "functions.java whitspacesreplace tabs with four spaces, as per the project's checkstyle rules.adding the functions class as a helper for dealing with java 8 lambdas.",
  "src/main/java/org/apache/commons/lang3/RandomStringUtils.java@org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric(int,int)": ": extend randomstringutils with methods that generate strings between a min and max length (, )",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.parsePattern()": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove redundant type arguments.: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y') partial: implement format 'u' for fastdateformat, day number of weekzz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.parseObject(String,ParsePosition)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toInt(String)": "fixing crlfsstatement unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.addRegex(FastDateParser,StringBuilder)": " fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.equals(Object)": "format.add final modifier to local variables.trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.TextField(int,String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.UnpaddedMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.InitStripAccents.indexOfDifference(CharSequence)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadIdPredicate.findThreadGroupsByName(String)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/text/StrLookup.java@org.apache.commons.lang3.text.MapStrLookup.copyProperties(Properties)": ": strsubstitutor.replacesystemproperties does not work consistently. this fixes  from github. thanks to jonathan baker.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.CheckIntervalData.getOpeningInterval()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.FastDatePrinter(String,TimeZone,Locale)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.ceiling(Calendar,int)": "replaced private integer constants with private static enum.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.getDateTimeInstance(int,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.appendInternal(StringBuffer,String,Object,boolean)": "tab alignment[] clear threadlocal recursion registry (compatibly with existing tests, first pass)",
  "src/main/java/org/apache/commons/lang3/tuple/Pair.java@org.apache.commons.lang3.tuple.Pair.of(L,R)": "remove redundant type arguments.",
  "src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java@org.apache.commons.lang3.exception.ContextedRuntimeException.getContextValues(String)": "refactor exceptioncontext and derived. context contract stipulates a sequence of label-value entries with support for multiple entries for the same label.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.WeekYear(NumberRule)": ": fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyOpen.EventCountCircuitBreaker(int,long,TimeUnit,int,long,TimeUnit)": "add final modifier to method parameters.remove redundant type arguments.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java@org.apache.commons.lang3.mutable.MutableDouble.getAndIncrement()": "add final modifier to local variables. addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.readObject(ObjectInputStream)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/SystemUtils.java@org.apache.commons.lang3.SystemUtils.getJavaVersionMatches(String)": "removed isjavaversionatleast(float) and (int), and added an enum variant with the new javaversion enum. updated the rest of the code, switched isjavaversionatleast over to using java.specification.version and not java.version (the vendor code) and dropped java_version_trimmed, java_version_float and java_version_int. see: 624- fix () systemutils.getjavaversionasfloat throws stringindexoutofboundsexception on android runtime/dalvik vm- refactor for unit testing.- remove odd test code which is copy and pasted from systemutils, which therefore does not test anything.",
  "src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java@org.apache.commons.lang3.reflect.FieldUtils.getField(Class,String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.equals(ParameterizedType,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/text/StrMatcher.java@org.apache.commons.lang3.text.CharMatcher.toString()": "add stringmatchertostring(); useful from a debugger.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.build()": "strbuilder implements builder; provide tostringbuilder as tostringbuffer",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.getLocale()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.leftPad(CharSequence,int)": "moving center, left, leftpad, right, rightpad, mid, uppercase, lowercase and swapcase over to charsequence input. 687",
  "src/main/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java@org.apache.commons.lang3.text.translate.UnicodeEscaper.UnicodeEscaper()": "reverting r1090111 - moving the text.translate escapers back from using range to replicating parts of the range api. see the list for details ('unnecessary boxing in stringescapeutils etc'), the move to range was an uncomfortable fit. moving text translation classes to the range class for its configuration",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toFloat(byte)": ": please add number to byte[] methods. suggested by lilianne e. blaze. final patch from vincent ricard (with thanks to henri yandell).",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.appendln(String,int,int)": "[] create strbuilder apis similar to string.format(string, object...)",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.withLowerBounds(Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/mutable/MutableFloat.java@org.apache.commons.lang3.mutable.MutableFloat.incrementAndGet()": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.equals(Object)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.TimeZoneNameRule(TimeZone,Locale,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces fastdateformat's \"z\" pattern does not respect timezone of calendar instances passed to format()applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.identityToString(Object)": "[] objectutils.identitytostring(object) and friends shouldallocate builders and buffers with a size add objectutils.toidentitystring methods that support stringbuilder, strbuilder, and appendableadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.NumberStrategy(int)": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FormatCache.java@org.apache.commons.lang3.time.FormatCache.getTimeInstance(int,TimeZone,Locale)": " simplify fastdateformat; eliminate boxing",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyOpen.increment(int)": "flips the order of conditional expressions and 'if' statements whose conditions were negated: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.greater(long,long)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.format(Calendar,B)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.round(Calendar,int)": "replaced private integer constants with private static enum.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java@org.apache.commons.lang3.exception.ContextedRuntimeException.addValue(String,Object)": "fix defaultexceptioncontext.addvalue that overwrites information in a recursive situation (). allow explicit replacement of a label with the new replacevalue methods.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.getStrategy(char,int,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y') partial: implement format 'u' for fastdateformat, day number of weekrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.appendDetail(StringBuffer,String,Object)": "extract logic for checking string representation of objects into separate methodsformat source codevariable names should follow naming conventionsmodified appenddetail method for object value in jsontostringstyle classfix the jsontostringstyle:except number types and boolean type, all other types in java should be 'appendasstring': add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.getInstance(String,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toArray(T)": "crlf -> lfjavadoc: fix typo but working is still awkward.checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.getTimeZone()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.format(Calendar,B)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.replace(Object)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.toString()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.getInstance(String)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.containsTypeVariables(Type)": "removes unnecessary class reference of static method calls which are declared in the same classuse final consistently. [] new type util features",
  "src/main/java/org/apache/commons/lang3/tuple/Pair.java@org.apache.commons.lang3.tuple.Pair.toString(String)": "add back pairtostring(string format).",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.appendFullDigits(Appendable,int,int)": "add final modifier to local variables.: fastdateprinter memory allocation regressionfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.append(Object)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: avoid string allocation in strbuilder.append(charsequence). this fixes  from github. thanks to mikhail mazurskiy and fabian lange.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.appendTo(Appendable,int)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.InitStripAccents.startsWith(CharSequence,CharSequence,boolean)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.getDateTimeInstance(int,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java@org.apache.commons.lang3.CsvEscaper.translate(CharSequence,int,Writer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: numericentityescaper incorrectly encodes supplementary characters. thanks to chris karcher.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.escapeRegex(StringBuilder,String,boolean)": "add explict default case and ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.getDateInstance(int,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.parse(String,ParsePosition)": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.validateDateNotNull(Date)": "use validateistrue to validate arguments",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.setContentEnd(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.appendToString(StringBuffer,String)": "use stringbuilderappend(charsequence, int, int) were possible to improve performance(similar to , thanks to stephane landelle for the suggestion)add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.toString()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.clone(T)": "flips the order of conditional expressions and 'if' statements whose conditions were negateddocument some @suppresswarning annotationsjavadocwsfix cloning of array types.add methods for cloneables to objectutils ().",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.indexOf(StrMatcher,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.addRegex(FastDateParser,StringBuilder)": " fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses . fastdateparser does not handle non-gregorian calendars properly applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.appendAllTo(StringBuilder,String,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.Iso8601_Rule(int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.EventListenerSupport.createProxy(Class,ClassLoader)": "allow subclass custom invocation handlingadd serialization support to eventlistenersupport",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.Pair.appendTo(StringBuffer,Calendar)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TzInfo.parse(String,ParsePosition,Calendar)": "lvar should not hide ivar.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.append(StringBuffer)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.selectNumberRule(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.MemberUtils.Executable(Constructor)": ": add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.",
  "src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java@org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(Object,Object)": "more varargs-related updates",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.readObject(ObjectInputStream)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.add(Date,int,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesuse validateistrue to validate argumentsadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.TextField(int,String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.append(String,int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java@org.apache.commons.lang3.time.Token.formatDurationHMS(long)": ": durationformatutilsformatdurationhms implementation does not correspond to javadoc and vice versa. thanks to michael osipov",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.append(StringBuffer,String,double,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.isAssignable(Class,Class)": "[] remove checks for java versions below the minimum supportedone. .removed isjavaversionatleast(float) and (int), and added an enum variant with the new javaversion enum. updated the rest of the code, switched isjavaversionatleast over to using java.specification.version and not java.version (the vendor code) and dropped java_version_trimmed, java_version_float and java_version_int. see: 624default autoboxing depending on rt java version",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.reverse(char,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.[] add arrayutils.reverse(array, from, to) methods.",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.Range.contains(T)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)refactor range with lots of new methods",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.getLocale()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/arch/Processor.java@org.apache.commons.lang3.arch.Processor.getArch()": ": add archutils - an utility class for the \"os.arch\" system property ()",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.Range.containsRange(Range)": "refactor range with lots of new methods",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey(TimeZone,boolean,int,Locale)": "don't mutate parametersadd final modifier to method parameters.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/EnumUtils.java@org.apache.commons.lang3.EnumUtils.processBitVectors(Class,long)": " enumutils *bitvector issue with more than 32 values enumthis use final consistently. don't write parameteradd final modifier to local variables.[] permit bitvector generation for enums with > 64 values; plus some test corrections",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.TzInfo(TimeZone,boolean)": ": fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.StrategyParser(String,Calendar)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.getFragmentInHours(Calendar,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesmake use of existing timeunit class to manage time units.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.NoClassNameToStringStyle()": ": add noclassnametostringstyle implementation of tostringstyle. this  from github. thanks to innokenty shuvalov.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.TextField(int,String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.format(Calendar,StringBuffer)": "4fastdateformat apis that use a stringbuilder: dateformatutils.format does not correctly change calendar timezone in certain situations: unit test fastdateprintertimezonestest needs a timezone setapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeElement(char,char)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(String,String,int)": "use index_not_found instead of magic number.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.format(Date,B)": "4fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.EventListenerSupport.removeListener(L)": "provide read access to the registered listener instancesimproving error checking logic and adding test cases to verify.changing eol-style to native.misc. event utils.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.getDateTimeInstance(int,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.min(double,double,double)": "fixing crlfsstatement unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.UnpaddedMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.format(long,B)": ": fastdateprinter generates date objects wastefullyfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.setBypassReflectionClasses(List)": ": add bypass option for classes to recursive and reflective equalsbuilderpatch supplied by yathos ug",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.reflectionAppendArrayDetail(StringBuffer,String,Object)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.boolsBeM0ToHexDigit(boolean)": ":  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.format(Object,StringBuffer,FieldPosition)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.countMatches(CharSequence,char)": "sort members.[] add stringutils.countmatches(charsequence, char)",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.format(Object,StringBuffer,FieldPosition)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadUtils.findThreadsByName(String)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle.java@org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(StringBuffer,String,float)": "multilinerecursivetostringstyle: made private field indent static: multiline recursive to string style. this fixes  from github. thanks to jan mat\u00e8rne.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.TimeZoneNumberRule(boolean,boolean)": "added missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.upperCase(String,Locale)": "sort members.rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.lowerCase(CharSequence,Locale)": "moving center, left, leftpad, right, rightpad, mid, uppercase, lowercase and swapcase over to charsequence input. 687",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.unregister(Object)": "add final modifier to local variables.promote uniformity between branches by using registry accessorunused imports + uh, why would you synchronize access to a threadlocal?  :p[] clear threadlocal recursion registry (compatibly with existing tests, first pass)",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.TwoDigitNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.register(Object)": "remove redundant type arguments.add final modifier to local variables.promote uniformity between branches by using registry accessorunused imports + uh, why would you synchronize access to a threadlocal?  :p[] clear threadlocal recursion registry (compatibly with existing tests, first pass)",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.BasicThreadFactory.BasicThreadFactory(Builder)": "don't need internal ivar name for a boolean to carry a \"flag\" postfix.don't need internal ivar name for a boolean to carry a \"flag\" postfix.adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.append(StringBuilder)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.<action issue=\"\" type=\"add\">strbuilder should support stringbuilder as an input parameter</action>",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.format(Date)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.getInstance(String)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.valueOf(char)": "sort members.: add null-safe stringutils.valueof(char[]) to delegate to string.valueof(char[])fix checkstyle violations[] add null-safe stringutils.valueof(char[]) to delegate tostring.valueof(char[])",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyOpen.getClosingInterval()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.isAlpha(CharSequence)": "sort members.[github] commons-lang pull request : intellij idea refactorings..eat own dog food: use stringutils.isempty().add final modifier to local variables.resolving  - changing stringutils.isalpha, isalphanumeric and isnumeric to return false when passed an empty string. documenting this in the changes report and in the upgrade article. also fixing a javadoc c+p error in isnumericspace and isalphanumericspace. change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeAll(short,int)": ": arrayutils.removeall(object array, int... indices) should do the clone, not its callers ()crlf -> lfjavadoc: fix typo but working is still awkward.[] complement arrayutils.addall() variants with by-index and by-value removal methods",
  "src/main/java/org/apache/commons/lang3/CharRange.java@org.apache.commons.lang3.CharacterIterator.contains(CharRange)": "use validateistrue to validate arguments",
  "src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java@org.apache.commons.lang3.text.translate.CharSequenceTranslator.with(CharSequenceTranslator)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.toString()": ": fix deprecation warnings",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.appendFullDigits(Appendable,int,int)": "add final modifier to local variables.: fastdateprinter memory allocation regressionfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.containsWhitespace(CharSequence)": "sort members.add final modifier to local variables.replacing some of the older code. when performing a mutation operation (even if it's on an immutable by returning a new instance), string should go in and string should come out. when performing a non-mutation operation, charsequence should be passed in. 687moving lastindexof, contains, containswhitespace, indexofany, containsany, indexofanybut, containsonly, containsnone and substring over to using charsequences for parameters. 687",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isNotEmpty(double)": "crlf -> lfjavadoc: fix typo but working is still awkward.simplify isnotempty by reusing isemptyapplying chandrashekar m's patch to , adding isnotempty(array) methods to arrayutils. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.getRule(int)": "removes unnecessary class reference of static method calls which are declared in the same classmake sure lines in files don't have trailing white spaces and remove all trailing white spacesreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.build()": "strbuilder implements builder; provide tostringbuilder as tostringbuffer",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.TimeZoneNameRule(TimeZone,Locale,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces fastdateformat's \"z\" pattern does not respect timezone of calendar instances passed to format()applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.applyRulesToString(Calendar)": "4fastdateformat apis that use a stringbuilderrefactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.format(Calendar,StringBuffer)": "4fastdateformat apis that use a stringbuilder: dateformatutils.format does not correctly change calendar timezone in certain situations: unit test fastdateprintertimezonestest needs a timezone setapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.AlwaysTruePredicate.ThreadUtils()": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.longToHex(long,int,String,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesscope of local variabel shift can be narrowerformat to 120 line length.add final modifier to local variables.use better method names. document possible arrayindexoutofboundsexception and stringindexoutofboundsexception.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.init()": "add final modifier to local variables.tab police: fastdateparser could use calendar.getdisplaynames for all text fieldsshow where the parsing failed fastdateparser does not handle unterminated quotes correctlytrailing spaces fastdateparser does not handle non-gregorian calendars properlyfix bug in java 7 (locale.tostring() format has changed) fastdateparser does not handle non-gregorian calendars properly applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.extractTypeArgumentsFrom(Map,TypeVariable)": "use final consistently. [] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.applyRules(Calendar,B)": "add final modifier to local variables.1154fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.getDateInstance(int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableFloat.java@org.apache.commons.lang3.mutable.MutableFloat.equals(Object)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.parse(String,ParsePosition,Calendar)": "lvar should not hide ivar.add final modifier to local variables.format.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.getClassCanonicalName(Object)": "[] add methods to objectutils to get various forms of classnames in a null-safe manner",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.WeekYear(NumberRule)": ": fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.SimpleToStringStyle()": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.equals(Object)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.toCanonicalName(String)": "use validatenotnull instead of \"throw new nullpointerexception\"add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.reverse(char)": "crlf -> lfjavadoc: fix typo but working is still awkward.[] add arrayutils.reverse(array, from, to) methods.",
  "src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java@org.apache.commons.lang3.builder.CompareToBuilder.append(double,double)": "removes redundant '+' signpmd: remove useless parentheses",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.append(StringBuilder,int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.Iso8601_Rule.applyRulesToString(Calendar)": "4fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.letterPattern(char)": "add final modifier to local variables.format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.min(T,T)": " add a null-safe compare() method to objectutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.estimateLength()": " fastdateparser and fastdateprinter support 'x' formatapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.reverse(Object)": "crlf -> lfjavadoc: fix typo but working is still awkward.[] add arrayutils.reverse(array, from, to) methods.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.truncateMiddle(String,String,int)": "replace tab characters with spacesapplying srihari reddy's patch from , based on dave meikle's original patch. this adds a truncatemiddle method to stringutils. ",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.ProxyInvocationHandler.fire()": "changing eol-style to native.misc. event utils.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.UnpaddedMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.PaddedNumberField(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.equals(Object)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrTokenizer.java@org.apache.commons.lang3.text.StrTokenizer.isQuote(char,int,int,int,int)": "it's confusing to re-use field names locallyremove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.parseDate(String,Locale,String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces - dateutilsparsedate uses default locale; add locale support",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.replaceFirst(String,String,String)": "sort members.[] add regexutils class instead of overloadinh methods instringutils that take a regex to take precompiled pattern.merge branch 'fix-': add replace by regular expression methods in stringutilsthis  from github.: add null safe methods in stringutils to replace by regular expression :  - stringutils.replaceall(string, string, string)  - stringutils.replacefirst(string, string, string)",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isNotEmpty(boolean)": "crlf -> lfjavadoc: fix typo but working is still awkward.simplify isnotempty by reusing isemptyapplying chandrashekar m's patch to , adding isnotempty(array) methods to arrayutils. ",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.NamePredicate.findThreadGroupsByName(String)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.join(char,char)": "sort members.[] stringutils join apis for primitives.",
  "src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java@org.apache.commons.lang3.concurrent.ConcurrentUtils.putIfAbsent(ConcurrentMap,K,V)": "add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)[] added support for concurrentmap.putifabsent() to concurrentutils.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.extractTypeArgumentsFrom(Map,TypeVariable)": "use final consistently. [] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.getCache(int)": "remove redundant type arguments.format.tab police: fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.CheckIntervalData.isCheckIntervalFinished(EventCountCircuitBreaker,CheckIntervalData,long)": "add final modifier to method parameters.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java@org.apache.commons.lang3.text.translate.EntityArrays.BASIC_ESCAPE()": "make sure placement of curly braces is consistent",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.setNullText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.insert(int,String)": "rewrite to avoid (im)possible npe warningadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/math/Fraction.java@org.apache.commons.lang3.math.Fraction.floatValue()": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/ArchUtils.java@org.apache.commons.lang3.ArchUtils.init_IA64_32Bit()": "use final.: add archutils - an utility class for the \"os.arch\" system property ()",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadUtils.findThreadGroupsByName(String)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.toString(Object)": "reuse",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.Range.containsAll(Range)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/CharUtils.java@org.apache.commons.lang3.CharUtils.isAsciiPrintable(char)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.TimeZoneDisplayKey(TimeZone,boolean,int,Locale)": "don't mutate parametersadd final modifier to method parameters.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.lastOrdinalIndexOf(CharSequence,CharSequence,int)": "sort members.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.append(StringBuffer,String,int,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FormatCache.java@org.apache.commons.lang3.time.MultipartKey.getInstance(String,TimeZone,Locale)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesuse validatenotnull instead of \"throw new nullpointerexception\"add final modifier to local variables.refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.getRule(int)": "removes unnecessary class reference of static method calls which are declared in the same classmake sure lines in files don't have trailing white spaces and remove all trailing white spacesreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.appendNewLine()": "deprecate systemutilsline_separator in favor of java.lang.systemlineseparator",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.ObjectUtils()": ": add empty checks to objectutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.getDateInstance(int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.deleteAll(char)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.Range.hashCode()": "refactor range with lots of new methods",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.appendSeparator(String,String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.TimeZoneNameRule(TimeZone,Locale,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.AlwaysTruePredicate.findThreadsByName(String,ThreadGroup)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.throwableOfThrowable(Throwable,Class,int)": "sort by method name.[] add exceptionutils.throwableoftype(throwable, class) andfriends.",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(Class,String,Class)": "add final modifier to local variables.add final modifier to method parameters.removing unncessary bracketsmoving most of the methods over to varargs. a couple can't change because they are object[], class[] with both end parameters ideally wanting to be vararg. 396",
  "src/main/java/org/apache/commons/lang3/SystemUtils.java@org.apache.commons.lang3.SystemUtils.getEnvironmentVariable(String,String)": "[] org.apache.commons.lang3.systemutils should not write tosystem.err.[] add api systemutils.string getenvironmentvariable(finalstring name, final string defaultvalue).",
  "src/main/java/org/apache/commons/lang3/exception/ContextedException.java@org.apache.commons.lang3.exception.ContextedException.replaceValue(String,Object)": "fix defaultexceptioncontext.addvalue that overwrites information in a recursive situation (). allow explicit replacement of a label with the new replacevalue methods.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TzInfo.appendDisplayNames(Calendar,Locale,int,StringBuilder)": "add final modifier to local variables.remove redundant type arguments.: fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.Range.getMinimum()": "refactor range with lots of new methods",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.getDateTimeInstance(int,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.identityToString(StringBuilder,Object)": "[] objectutils.identitytostring(object) and friends shouldallocate builders and buffers with a sizerefactor magic char.better exception message.use validatenotnull instead of \"throw new nullpointerexception\" add objectutils.toidentitystring methods that support stringbuilder, strbuilder, and appendable",
  "src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java@org.apache.commons.lang3.concurrent.ConstantFuture.constantFuture(T)": "remove redundant type arguments.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.equals(Object)": "format.add final modifier to local variables.trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.getTimeInstance(int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java@org.apache.commons.lang3.concurrent.TimedSemaphore.TimedSemaphore(long,TimeUnit,int)": "[] added timedsemaphore class to concurrent package.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.createPattern(StringBuilder)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.getDateInstance(int,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/mutable/MutableFloat.java@org.apache.commons.lang3.mutable.MutableFloat.subtract(Number)": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.append(double,double)": "use not bool instead of bool == false",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.appendFullDigits(Appendable,int,int)": "add final modifier to local variables.: fastdateprinter memory allocation regressionfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyClosed.performStateCheck(int)": "add final modifier to local variables.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.format(Date,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.appendAll(T)": "fix typos in commentssuppress warning about vararg usage.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shuffle(byte,Random)": ": added shuffle methods to arrayutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.getDateInstance(int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.getStrategy(String,Calendar)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format fastdateparser does not handle excess hours as per simpledateformatdocsadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .don't mutate parameterstab police: fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.createInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.replaceAll(String,String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.add(long,long)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.removeStartIgnoreCase(String,String)": "sort members.",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.isDigits(String)": "fixing crlfsstatement unnecessarily nested within else clause.reuse functionality from stringutils instead of duplicating code",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.format(Date,B)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shift(boolean,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.swap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.throwableOfThrowable(Throwable,Class)": "sort by method name.[] add exceptionutils.throwableoftype(throwable, class) andfriends.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.deleteFirst(String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.createPattern(StringBuilder)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.append(StringBuffer,String,char,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.append(StringBuffer,String,boolean,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.setFieldNameValueSeparator(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.appendFixedWidthPadRight(Object,int,char)": "reuseadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.replaceIn(StringBuilder,int,int)": "use final consistently. [] strsubstitutor now supports the declaration of default values for the variables to be replaced. thanks to woonsan ko for the patch. strsubstitutor does not support stringbuilder or charsequence",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.count(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FormatCache.java@org.apache.commons.lang3.time.FormatCache.getInstance()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.format(Date,StringBuffer)": "change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.append(StringBuffer,String,float,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.appendWithSeparators(Object,String)": ": update java requirement from java 6 to 7replace usage of deprecated objectutilstostring with objectstostring: fix deprecation warningseat own dog food: separator == null ? \"\" : separator->objectutils.tostring(separator)remove superfluous parens.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.DayInWeekField(NumberRule)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shift(int,int,int,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.crlf -> lfjavadoc: fix typo but working is still awkward.merge branch '': inconsistent behavior of swap for malformed inputs. thanksto adrian ber.new test caseexplanations about algorithmtabs replaced by spacesnew tests addedswap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.ProxyInvocationHandler.addListener(L,boolean)": "allowduplicates will always be false at that pointadded new addlistener() method that takes a boolean for if duplicates are allowed.added test method to make sure that duplicate listeners are not added.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.Pair.getDateTimeInstance(int,int,Locale)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.getMaxLengthEstimate()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.appendTo(Appendable)": ": add zero copy write method to strbuilder; : add zero copy read method to strbuilder. thanks to mikhail mazursky.",
  "src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java@org.apache.commons.lang3.math.IEEE754rUtils.max(float)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesuse validateistrue to validate argumentsusing validate where possible in math package.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.endsWith(String)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.removeLastFieldSeparator(StringBuffer)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.nullToEmpty(Long)": "crlf -> lfjavadoc: fix typo but working is still awkward.use isempty() where possible. thanks to james sawle for pointing this out.minor code simplificationadding nulltoempty methods to arrayutils per  and levon karayan's patch. ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeAll(Object,int)": "add final modifier to local variables.: arrayutils.removeall(object array, int... indices) should do the clone, not its callers ()crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.add some code comments[] complement arrayutils.addall() variants with by-index and by-value removal methods",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.getMaxLengthEstimate()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java@org.apache.commons.lang3.reflect.FieldUtils.getField(Class,String,boolean)": "add fixme regarding a jdk 1.3 workarounda bit of dog food and a lot of javadoc tweakage[] add fieldutils getdeclaredfields() to return all the fields defined in the given class and super classes.add final modifier to local variables.convert to java 5 enhanced loops. adding nopmd tags for various empty catch blocks",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.append(StringBuffer,String,short,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.toString()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.round(Calendar,int)": "replaced private integer constants with private static enum.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.getInstance(String,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.MemberUtils.compareConstructorFit(Constructor,Constructor,Class)": ": add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.getStrategy(int)": "make checkstyle happy: add missing javadocreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.appendTo(Appendable,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/RandomStringUtils.java@org.apache.commons.lang3.RandomStringUtils.randomPrint(int,int)": ": extend randomstringutils with methods that generate strings between a min and max length (, )",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.Iso8601_Rule.estimateLength()": " fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.toCalendar(Date,TimeZone)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesreplace tabs with spaces in dateutilsadd dateutils.tocalendar(date, timezone)",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.getCache(int)": "remove redundant type arguments.format.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.Pair.getDateInstance(int,TimeZone,Locale)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.getTimeZone()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.TwoDigitNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java@org.apache.commons.lang3.time.DateFormatUtils.format(Calendar,String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.format(Date)": "change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. applying my fix to , and mikael's test case; fixing the fastdateformat to properly include the locale when formatting a date",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.AlwaysTruePredicate.getSystemThreadGroup()": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.TwelveHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.toString(Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.truncatedEquals(Date,Date,int)": ": add truncatedequals and truncatedcompareto",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.getRegisterPair(Object,Object)": "add final modifier to local variables.use static method for brevity, avoiding type paramsapplying the copy of the hashcodebuilder code to stop cyclic references over to equalsbuilder per  and oliver sauder's patch",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.appendTo(StringBuffer,Calendar)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.hashCode()": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java@org.apache.commons.lang3.mutable.MutableDouble.equals(Object)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.getRule(int)": "removes unnecessary class reference of static method calls which are declared in the same classmake sure lines in files don't have trailing white spaces and remove all trailing white spacesreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.appendDisplayNames(Calendar,Locale,int,StringBuilder,Map)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.format(Calendar,B)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.toString(Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.parseObject(String,ParsePosition)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.append(StringBuffer,String,double,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.parsePattern()": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove redundant type arguments.: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y') partial: implement format 'u' for fastdateformat, day number of weekzz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.getClassSimpleName(Object)": "[] add methods to objectutils to get various forms of classnames in a null-safe manner",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.isOneTrue(Boolean)": " - add isonetrue(booleans...) to booleanutils to preserve old behavior of booleanutils.xor(booleans...). added isonetrue for primitives and wrappers, isonefalse still missing.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyOpen.CheckIntervalData(int,long)": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.getTimeInstance(int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.appendTo(StringBuffer,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.setSummaryObjectEndText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.getTimeInstance(int,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(WildcardType)": "validationadd final modifier to local variables.[] vastly expanded typeutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.CaseInsensitiveTextStrategy(int,Calendar,Locale)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.: fastdateformat doesn't respect summer daylight in some localized stringsrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display namesuse final consistently. tab policeremove keyvalues map  per sebb's suggestion",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.nextCheckIntervalData(int,CheckIntervalData,State,long)": "add final modifier to method parameters.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.containsIgnoreCase(CharSequence,CharSequence)": "sort members.add final modifier to local variables.moving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils classmoving equalsignorecase, indexofignorecase, lastindexofignorecase and containsignorecase to the charsequence api. 687",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeElements(int,int)": "remove redundant type arguments. simplify arrayutils removeelements by using newdecrementandget() method: improve arrayutils removeelements time complexity to o(n) ()based on patch submitted by jeffery yuancrlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables. arrayutils removeelements methods use unnecessary hashseteliminate conversion of bitset to int[] arrayutils removeelements methods use unnecessary hashsetreplace hashset with bitset (less memory; faster) arrayutils removeelements methods clone temporary index arrays unnecessarilyreduce number of created arrays[] complement arrayutils.addall() variants with by-index and by-value removal methods",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.wildcardType()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.intToHex(int,int,String,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesscope of local variabel shift can be narrowerformat to 120 line length.add final modifier to local variables.use better method names. document possible arrayindexoutofboundsexception and stringindexoutofboundsexception.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.TwoDigitNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(CharSequence,CharSequence,int)": "sort members.add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)moving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils classmoving equalsignorecase, indexofignorecase, lastindexofignorecase and containsignorecase to the charsequence api. 687",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.extractIndices(BitSet)": " arrayutils removeelements methods use unnecessary hashsetreplace hashset with bitset (less memory; faster)",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.append(StringBuffer,String,boolean,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.getTimeZone()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.applyRulesToString(Calendar)": "4fastdateformat apis that use a stringbuilderrefactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.toString()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.parsePattern()": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove redundant type arguments.: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y') partial: implement format 'u' for fastdateformat, day number of weekzz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.parse(FastDateParser,Calendar,String,ParsePosition,int)": "add final modifier to local variables.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/Functions.java@org.apache.commons.lang3.Functions.accept(FailableBiConsumer,O1,O2)": "functions.java whitspacesreplace tabs with four spaces, as per the project's checkstyle rules.adding the functions class as a helper for dealing with java 8 lambdas.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.readObject(ObjectInputStream)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/NotImplementedException.java@org.apache.commons.lang3.NotImplementedException.NotImplementedException(String,String)": "returning notimplementedexception to lang after it was removed in lang 3.0 per the request in . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.setLength(int)": ": add nul byte to charutils. thanks to beluga behr.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.FastDateFormat(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.TimeZoneNumberRule(boolean)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.findRecursiveTypes(ParameterizedType)": "deletes redundant 'new' expression in constant array creationuse final. - stackoverflowerror on typeutils.tostring(...) for a generic return type of enum.valueof ()",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.adjustYear(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte,byte,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.appendTo(StringBuffer,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.identityToString(Object)": "[] objectutils.identitytostring(object) and friends shouldallocate builders and buffers with a size add objectutils.toidentitystring methods that support stringbuilder, strbuilder, and appendableadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.reflectionAppendArrayDetail(StringBuffer,String,Object)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.getPattern()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java@org.apache.commons.lang3.CsvEscaper.escapeXml10(String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: add methods for removing all invalid characters according to xml 1.0 and xml 1.1 in an input string to stringescapeutils. thanks to adam hooper",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategy.fetchCheckInterval(EventCountCircuitBreaker)": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/CharRange.java@org.apache.commons.lang3.CharacterIterator.toString()": "add final modifier to local variables.adding vincent ricard's patch to charrange.java providing an iterator that lets you walk the chars in the range. 454",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.TimeZoneDisplayKey(TimeZone,boolean,int,Locale)": "don't mutate parametersadd final modifier to method parameters.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.createPattern(String)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java@org.apache.commons.lang3.concurrent.ConcurrentUtils.handleCauseUnchecked(ExecutionException)": "add final modifier to local variables.[] introduced concurrentruntimeexception and extended the exception handling methods of concurrentutils to support runtime exceptions, too.",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.BasicThreadFactory.build()": "add final modifier to local variables.adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.appendln(StringBuffer)": "<action issue=\"\" type=\"add\">strbuilder should support stringbuilder as an input parameter</action>",
  "src/main/java/org/apache/commons/lang3/time/StopWatch.java@org.apache.commons.lang3.time.StopWatch.toSplitString()": "sort methods.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.estimateLength()": " fastdateparser and fastdateprinter support 'x' formatapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/test/java/org/apache/commons/lang3/test/NotVisibleExceptionFactory.java@org.apache.commons.lang3.test.NotVisibleException.NotVisibleException(Throwable)": "[] prefer throwable.getcause() in exceptionutils.getcause() ()",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.equalsAnyIgnoreCase(CharSequence,CharSequence)": "sort members.add final modifier to local variables.merge branch 'fix-': add stringutils methods to compare a string to multiple stringsthis  from github.thanks to arman sharif for providing a patch.thanks to rafal glowinski for providing an alternative implementations, see .thanks to robert parr for providing an alternative implementations, see .conflicts:\tsrc/changes/changes.xml added equalsany() and equalsanyignorecase() methods to stringutils.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.parameterize(Class,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/RegExUtils.java@org.apache.commons.lang3.RegExUtils.removePattern(String,String)": "[] add regexutils class instead of overloadinh methods instringutils that take a regex to take precompiled pattern.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.getTimeZone()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.set(Date,int,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesuse validateistrue to validate argumentsadd final modifier to local variables.adding tocalendar method per 632",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.deleteAll(char)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.TextStrategy(int)": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/CharUtils.java@org.apache.commons.lang3.CharUtils.toCharacterObject(String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces[] the char_array cache in charutils duplicates the cache in java.lang.character.[] deprecate charutils.tocharacterobject(char) in favor of java.lang.character.valueof(char).",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.init()": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.Iso8601_Rule(int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeAll(byte,int)": ": arrayutils.removeall(object array, int... indices) should do the clone, not its callers ()crlf -> lfjavadoc: fix typo but working is still awkward.[] complement arrayutils.addall() variants with by-index and by-value removal methods",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.add(int,int)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.parameterizeWithOwner(Type,Class,Map)": "validation[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TzInfo.letterPattern(char)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.determineTypeArguments(Class,ParameterizedType)": "validation",
  "src/main/java/org/apache/commons/lang3/math/Fraction.java@org.apache.commons.lang3.math.Fraction.toString()": "7micro optimization: replace stringbuilder with string concatenation so that the compiler can better optimize the codeformat to 120 line length.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.hashCode(Object)": ": fix deprecation warningsremove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo) - add hashcodemulti varargs method",
  "src/main/java/org/apache/commons/lang3/text/FormattableUtils.java@org.apache.commons.lang3.text.FormattableUtils.append(CharSequence,Formatter,int,int,int)": "add final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.CaseInsensitiveTextStrategy(int,Calendar,Locale)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.: fastdateformat doesn't respect summer daylight in some localized stringsrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display namesuse final consistently. tab policeremove keyvalues map  per sebb's suggestion",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.readObject(ObjectInputStream)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.selectNumberRule(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.adjustYear(int)": "format.use final consistently. replace tabs with whitespaces and add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java@org.apache.commons.lang3.math.IEEE754rUtils.min(double,double)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.toString()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.setContentEnd(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle.java@org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()": "multilinerecursivetostringstyle: made private field indent staticdeprecate systemutilsline_separator in favor of java.lang.systemlineseparator: multiline recursive to string style. this fixes  from github. thanks to jan mat\u00e8rne.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.lastIndexOfAny(CharSequence,CharSequence)": "sort members.use foreach loop for arrays ()since the project no longer supports java versions older than 6, it'ssafe to use the enhanced for loop syntax introduced in java 5.this patch employs this syntax where possible to clean up the code.add final modifier to local variables.moving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils classreplacing some of the older code. when performing a mutation operation (even if it's on an immutable by returning a new instance), string should go in and string should come out. when performing a non-mutation operation, charsequence should be passed in. 687moving lastindexof, contains, containswhitespace, indexofany, containsany, indexofanybut, containsonly, containsnone and substring over to using charsequences for parameters. 687",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.adjustYear(int)": "format.use final consistently. replace tabs with whitespaces and add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.literal()": "add final modifier to local variables.pmd: these nested if statements could be combinedformat.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.getCache(int)": ": fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.rightString(int)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.TextField(int,String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.getLocale()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.adjustYear(int)": "format.use final consistently. replace tabs with whitespaces and add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.parameterizeWithOwner(Type,Class,Type)": "removes unnecessary class reference of static method calls which are declared in the same classapply patch contributed by bruno p. kinoshitavalidation[] new type util features",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.reverse(short,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.swap and shift for arrays[] add arrayutils.reverse(array, from, to) methods.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyClosed.updateCheckIntervalData(CheckIntervalData,CheckIntervalData)": "add final modifier to method parameters.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.getTimeInstance(int,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.SimpleDateFormatStrategy.isNumber()": " fastdateparser does not handle non-gregorian calendars properly ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.append(StrBuilder,int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.getDateInstance(int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.lastIndexOf(String,char,int)": "use index_not_found instead of magic number.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.getTimeInstance(int,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.appendDetail(StringBuffer,String,Object)": "extract logic for checking string representation of objects into separate methodsformat source codevariable names should follow naming conventionsmodified appenddetail method for object value in jsontostringstyle classfix the jsontostringstyle:except number types and boolean type, all other types in java should be 'appendasstring': add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.getBytes(String,String)": "[] add null-safe stringutils apis to wrapstringgetbytes([charset|string]).</action>",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.getInstance(String,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.appendDisplayNames(Calendar,Locale,int,StringBuilder,Map)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.newCalendar()": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java@org.apache.commons.lang3.text.translate.EntityArrays.HTML40_EXTENDED_UNESCAPE()": "make sure placement of curly braces is consistent",
  "src/main/java/org/apache/commons/lang3/time/FormatCache.java@org.apache.commons.lang3.time.MultipartKey.getPatternForStyle(Integer,Integer,Locale)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.make sure placement of curly braces is consistentmake sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.explicit boxingapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.byteToHexs(byte,int,String,int,int)": "code clean-up for checkstyle.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.compare(String,String)": ": fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.indexOfSequence(CharSequence,int,int)": "replacing some of the older code. when performing a mutation operation (even if it's on an immutable by returning a new instance), string should go in and string should come out. when performing a non-mutation operation, charsequence should be passed in. 687checkstylemoving indexof(string, int) and indexof(string, int, int) over to charsequence. . this, plus the same happening for the string, string, int variant will open up a lot of methods. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.addRegex(FastDateParser,StringBuilder)": " fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.readObject(ObjectInputStream)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.BasicThreadFactory.getWrappedFactory()": "adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.TimeZoneStrategy(Locale)": "refactor \"gmt\" magic string.add a default case to switch to appease findbugs: nullpointerexception in fastdateparser$timezonestrategy ()replicate the fix for 1186add final modifier to local variables.remove redundant type arguments.",
  "src/main/java/org/apache/commons/lang3/time/GmtTimeZone.java@org.apache.commons.lang3.time.GmtTimeZone.GmtTimeZone(boolean,int,int)": "use final.[] timezone.gettimezone() in fastdateparser causes resourcecontention</action>. this .",
  "src/main/java/org/apache/commons/lang3/time/FormatCache.java@org.apache.commons.lang3.time.MultipartKey.getDateTimeInstance(Integer,Integer,TimeZone,Locale)": " simplify fastdateformat; eliminate boxingadd final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.appendTo(Appendable,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.rightPad(CharSequence,int,char)": "moving center, left, leftpad, right, rightpad, mid, uppercase, lowercase and swapcase over to charsequence input. 687",
  "src/main/java/org/apache/commons/lang3/SystemUtils.java@org.apache.commons.lang3.SystemUtils.getJavaHome()": "- fix () systemutils.getjavaversionasfloat throws stringindexoutofboundsexception on android runtime/dalvik vm- refactor for unit testing.- remove odd test code which is copy and pasted from systemutils, which therefore does not test anything.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.append(StringBuffer,String,int,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java@org.apache.commons.lang3.exception.DefaultExceptionContext.getFirstContextValue(String)": "refactor exceptioncontext and derived. context contract stipulates a sequence of label-value entries with support for multiple entries for the same label.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableShort.java@org.apache.commons.lang3.mutable.MutableShort.compareTo(MutableShort)": "pmd: useless parentheses.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.setFieldSeparator(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.nullToEmpty(Class)": "crlf -> lfjavadoc: fix typo but working is still awkward.use isempty() where possible. thanks to james sawle for pointing this out.[] add arrayutilsnulltoempty(class<?>[])",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.WeekYear(NumberRule)": ": fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java@org.apache.commons.lang3.concurrent.ConstantInitializer.hashCode()": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)[] added constantinitializer class",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.getDateInstance(int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.delete(int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.containsTypeVariables(Type)": "removes unnecessary class reference of static method calls which are declared in the same classuse final consistently. [] new type util features",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,byte,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/tuple/MutableTriple.java@org.apache.commons.lang3.tuple.MutableTriple.setLeft(L)": "sort methods.adding henning's github pull request with a triple implementation. 675",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.setArraySeparator(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.format(Date,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.stripStart(String,String)": "sort members.use stringisempty() instead of stringlength() == 0remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)use index_not_found instead of magic number.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.applyRules(Calendar,B)": "add final modifier to local variables.1154fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.appendTo(StringBuffer,Calendar)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.replace(CharSequence)": " strsubstitutor does not support stringbuilder or charsequence",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.hexsToByte(String,int,byte,int,int)": "code clean-up for checkstyle.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.exclusiveBetween(T,T,Comparable,String,Object)": "add todosjavadocfix brace positionsapplying valentin rocher's patch from , adding isinstanceof and isassignablefrom methods. applying valentin rocher's patch to , adding new regexp and in range methods to validate",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isNotEmpty(long)": "crlf -> lfjavadoc: fix typo but working is still awkward.simplify isnotempty by reusing isemptyapplying chandrashekar m's patch to , adding isnotempty(array) methods to arrayutils. ",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.NamePredicate.findThreadsByName(String,String)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.use validateistrue to validate argumentsremove redundant type arguments.fixing crlfsstatement unnecessarily nested within else clause.merge branch 'remove_threadutils_compiler_warnings'remove compiler warnings from threadutils. thanks to pascal schuhmacher.remove compiler warnings from threadutilsincorporated feedback from fabian, formatting adjusted, count >> 1 replaced with count / 2incorporated feedback from peteradd threadutils",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.wrapIfMissing(String,String)": "add final modifier to local variables.[] stringutils.wrapifmissing(string, char|string)",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.TimeZoneDisplayKey(TimeZone,boolean,int,Locale)": "don't mutate parametersadd final modifier to method parameters.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(Class,String)": "[] add methodutil apis to call methods without parameters.",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.substitute(StrBuilder,int,int,List)": "remove redundant type arguments.strsubstitutor can preserve escapesstrsubstitutor can now optionally preserve the escape character for anescaped reference, which is useful when substitution takes place inmultiple phases and some references are intentionally unresolved.  priorto this change, an unresolved reference `${a}` and an escaped reference`$${a}` may result in the same string `${a}`, making it impossible foran additional substitution phase to distinguish between escapedreferences and non-escaped references.statement unnecessarily nested within else clause.it's confusing to re-use field names locally[] strsubstitutor now supports the declaration of default values for the variables to be replaced. thanks to woonsan ko for the patch.add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)[] added support for substitution in variable names.removed my author tag, typo, trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.getTimeInstance(int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.appendTo(Appendable,int)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.appendSeparator(char,char)": "fix brace positions",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.FastDateParser(String,TimeZone,Locale,Date)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.make sure placement of curly braces is consistent: dateutilstest.testlang530 fails for some timezonesreplace tabs with whitespaces and ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.InitStripAccents.equals(CharSequence,CharSequence)": "[] stringutils equals() relies on undefined behavior; thanks to daniel trebbien",
  "src/main/java/org/apache/commons/lang3/concurrent/Memoizer.java@org.apache.commons.lang3.concurrent.Memoizer.compute(A)": ": implementation of a memomizer ()",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.genericArrayType(Type)": "validation[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.getStrategy(String,Calendar)": "don't mutate parameterstab police: fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.format(long,StringBuffer)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.getDisplayNames(int,Calendar,Locale)": " fastdateparser could use calendar.getdisplaynames for all text fieldsremove unnecessary keyvalue instances: fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.parseDateStrictly(String,String)": " - dateutilsparsedate uses default locale; add locale supportjavadoc correction",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.appendFieldStart(StringBuffer,String)": " - jsontostringstyle does not escape string namesjsontostringstyle: improve private constant name and remove wrong comment: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/concurrent/CircuitBreakingException.java@org.apache.commons.lang3.concurrent.CircuitBreakingException.CircuitBreakingException()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.trim()": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.or(Boolean)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.add final modifier to local variables.ws[] add booleanutils.and/or varargs methods to complement xor",
  "src/main/java/org/apache/commons/lang3/SerializationUtils.java@org.apache.commons.lang3.ClassLoaderAwareObjectInputStream.serialize(Serializable)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.format(Calendar)": "4fastdateformat apis that use a stringbuilderapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.copy(KeyValue,int,String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shift(char,int,int,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.crlf -> lfjavadoc: fix typo but working is still awkward.merge branch '': inconsistent behavior of swap for malformed inputs. thanksto adrian ber.new test caseexplanations about algorithmtabs replaced by spacesnew tests addedswap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/exception/ContextedException.java@org.apache.commons.lang3.exception.ContextedException.getRawMessage()": "missing method getrawmessage for contextedexception and contextedruntimeexception ().",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.Builder.namingPattern(String)": "use validatenotnull instead of \"throw new nullpointerexception\"adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle.java@org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(StringBuffer,String,short)": "multilinerecursivetostringstyle: made private field indent static: multiline recursive to string style. this fixes  from github. thanks to jan mat\u00e8rne.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.appendDisplayNames(Calendar,Locale,int,StringBuilder)": "add final modifier to local variables.remove redundant type arguments.: fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.getLocale()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.getTimeInstance(int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.stripAll(String,String)": "sort members.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.CheckIntervalData.open()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.getMaxLengthEstimate()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.boolArrayToHexDigit(boolean,int)": "use better method names. document possible arrayindexoutofboundsexception and stringindexoutofboundsexception.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.TextField(int,String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.appendWithSeparators(Iterator,String)": ": update java requirement from java 6 to 7replace usage of deprecated objectutilstostring with objectstostring: fix deprecation warningseat own dog food: separator == null ? \"\" : separator->objectutils.tostring(separator)remove superfluous parens.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.containsOnly(CharSequence,CharSequence)": "moving lastindexof, contains, containswhitespace, indexofany, containsany, indexofanybut, containsonly, containsnone and substring over to using charsequences for parameters. 687",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.parseObject(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.isNumber()": " fastdateparser does not handle non-gregorian calendars properly applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java@org.apache.commons.lang3.builder.HashCodeBuilder.reflectionAppend(Object,Class,HashCodeBuilder,boolean,String)": "pmd: remove useless parenthesesequalsexlcude notation, hashcodeexclude notation and tostringexludenotationpmd: useless parenthesesuse not string.contains instead of indexof == -1add final modifier to local variables.add final modifier to method parameters.replacing the creation of a list in the core of each builder class to test contains on the excludefields with a call to arrayutils.contains. reported by anthony whitford in 575",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.toString()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.getAbbreviatedName(Class,int)": ": add classutils.getabbreviatedname(). this fixes  from github. thanks to fabian lange.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.setSizeStartText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.appendTo(StringBuffer,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/InheritanceUtils.java@org.apache.commons.lang3.reflect.InheritanceUtils.distance(Class,Class)": "statement unnecessarily nested within else clause. method returns number of inheritance hops between parent and subclass",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.getTimeZone()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.getPattern()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.append(Object)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: avoid string allocation in strbuilder.append(charsequence). this fixes  from github. thanks to mikhail mazurskiy and fabian lange.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.minimizeCapacity()": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyClosed.getClosingThreshold()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.newCalendar()": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.getTimeInstance(int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.format(Date,B)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.center(String,int,String)": "sort members.add final modifier to local variables.[] stringutils join with var args. add and use space string constant for \" \".rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.DayInWeekField.applyRules(Calendar,B)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/EnumUtils.java@org.apache.commons.lang3.EnumUtils.getEnum(Class,String)": ": enumutils.getenumignorecase and isvalidenumignorecase methods added ()add final modifier to local variables.javadoc and clarify null handling",
  "src/main/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java@org.apache.commons.lang3.concurrent.MultiBackgroundInitializerResults.isSuccessful()": "added a new issuccessful() method to the result object of multibackgroundinitializer.",
  "src/main/java/org/apache/commons/lang3/math/Fraction.java@org.apache.commons.lang3.math.Fraction.pow(int)": "format to 120 line length.statement unnecessarily nested within else clause.add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.newCalendar()": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.replaceOnce(String,String,String)": "sort members.merge branch '': add stringutilsremoveignorecasepatch by gokul nanthakumar c",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.ProxyInvocationHandler.createInvocationHandler()": "allow subclass custom invocation handling",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.getStrategy(String,Calendar)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format fastdateparser does not handle excess hours as per simpledateformatdocsadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .don't mutate parameterstab police: fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.TimeZoneDisplayKey(TimeZone,boolean,int,Locale)": "don't mutate parametersadd final modifier to method parameters.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.getFragment(Calendar,int,int)": ": dateutils.getfragmentindays(date, calendar.month) returns wrong days, reported by jay xu.add explict default case: fragments are wrong by 1 day when using fragment year or month - applying patch provided by sebastian g\u00f6tz, several tests now fail because of wrong assertions, will fix them in a separate commitadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.getTimeInstance(int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.reverse()": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.NamePredicate.findThreads(ThreadGroup,boolean,ThreadPredicate)": "use validateistrue to validate argumentsremove redundant type arguments.fixing crlfsstatement unnecessarily nested within else clause.incorporated feedback from fabian, formatting adjusted, count >> 1 replaced with count / 2incorporated feedback from peteradd threadutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.PaddedNumberField(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.format(Calendar,StringBuffer)": "4fastdateformat apis that use a stringbuilder: dateformatutils.format does not correctly change calendar timezone in certain situations: unit test fastdateprintertimezonestest needs a timezone setapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java@org.apache.commons.lang3.reflect.FieldUtils.writeField(Field,Object,Object,boolean)": "a bit of dog food and a lot of javadoc tweakage[] add fieldutils getdeclaredfields() to return all the fields defined in the given class and super classes.checkstyle",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.getDisplayNames(int)": "don't save short eras if they are the same as the long eras fastdateparser does not handle non-gregorian calendars properlyuse calendargetdisplaynames() instead of dateformatsymbolsgeteras()getinstance() (java 1.6) supports more localesexplicit conversion to integer; save the value for use latergetinstance(locale) is java 1.6+applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.parseToken(String,int)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.setSizeStartText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.getAllInterfaces(Class,HashSet)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/RecursiveToStringStyle.java@org.apache.commons.lang3.builder.RecursiveToStringStyle.accept(Class)": ": reflectiontostringbuilder.tostring does not debug 3rd party object fields within 3rd party object. suggested by philip hodges. final patch from thomas neidhart.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.append(StringBuffer,String,int,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.withLowerBounds(Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/tuple/MutableTriple.java@org.apache.commons.lang3.tuple.MutableTriple.getRight()": "sort methods.adding henning's github pull request with a triple implementation. 675",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toDouble(BigDecimal,double)": ": add todouble(bigdecimal), todouble(bigdecimal, double)",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.getTimeInstance(int,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.StrategyParser(String,Calendar)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/tuple/MutableTriple.java@org.apache.commons.lang3.tuple.MutableTriple.setRight(R)": "adding henning's github pull request with a triple implementation. 675",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.getLowerBounds()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.determineTypeArguments(Class,ParameterizedType)": "validation",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.getContent()": "statements unnecessarily nested within else clause.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.TwentyFourHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.parsePattern()": "adjust fastdateformat for java 7 behavior regarding format of the year pattern ().refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.getOpeningInterval()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.appendln(StringBuffer)": "<action issue=\"\" type=\"add\">strbuilder should support stringbuilder as an input parameter</action>",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.getInstance()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.KeyValue(String,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.containsAny(String,String)": "rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.swapCase(String)": "removes unnecessary class reference of static method calls which are declared in the same classadd final modifier to local variables.: stringutils should use toxxxxcase(int) rather than toxxxxcase(char) ()based on patch by sebbadd final modifier to local variables.eat own dog food: call stringutils.isempty().[] swapcase and *capitalize speedups.rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.getTimeInstance(int,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.smallerObj(Comparable,T)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.TwentyFourHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/CharSetUtils.java@org.apache.commons.lang3.CharSetUtils.delete(String,String)": "sort members and clean up comments.merge charsetutils string[] and string method forms to string...",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.isJsonObject(String)": "extract logic for checking string representation of objects into separate methods",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.appendSeparator(char,char)": "fix brace positions",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.subarray(byte,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.identityToString(StrBuilder,Object)": "[] objectutils.identitytostring(object) and friends shouldallocate builders and buffers with a sizerefactor magic char.better exception message.use validatenotnull instead of \"throw new nullpointerexception\" add objectutils.toidentitystring methods that support stringbuilder, strbuilder, and appendable",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.InitStripAccents.splitWorker(String,char,boolean)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.Iso8601_Rule.format(Calendar,StringBuffer)": "4fastdateformat apis that use a stringbuilder: dateformatutils.format does not correctly change calendar timezone in certain situations: unit test fastdateprintertimezonestest needs a timezone set",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.ProxyInvocationHandler.getListenerCount()": "changing eol-style to native.misc. event utils.",
  "src/main/java/org/apache/commons/lang3/text/translate/JavaUnicodeEscaper.java@org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)": "add final modifier to local variables.<action issue=\"\" type=\"fix\">stringescapeutils.escapejava() and escapeecmascript() do not output the escaped surrogate pairs that are java parsable</action>",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.getTimeZone()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.setSummaryObjectEndText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.StrSubstitutor(Map,String,String,char)": "add missing since tags for strsubstitutor; wrap lines longer than 80 chars",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.applyRules(Calendar,B)": "add final modifier to local variables.1154fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.TimeZoneNumberRule(boolean)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.truncatedEquals(Date,Date,int)": ": add truncatedequals and truncatedcompareto",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,ParameterizedType,Map)": ": typeutils.isassignable throws nullpointerexception when fromtype has type variables and totype generic superclass specifies type variable ()add final modifier to local variables.add final modifier to method parameters.[] [] fix related bugs dealing with type variable inheritance[] vastly expanded typeutils",
  "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java@org.apache.commons.lang3.CsvEscaper.unescapeJson(String)": "added escape/unescapejson methods per maurizio cucchiara's patch in 797",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int,int)": "add final modifier to local variables.remove trailing whitespacescrlf -> lfjavadoc: fix typo but working is still awkward.implements : add a method to arrayutils for removing all occurrences of a given element. thanks to haiyang li.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.init()": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.toStringYesNo(boolean)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.ws",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.InitStripAccents.isAlphaSpace(CharSequence)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.FastDatePrinter(String,TimeZone,Locale)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java@org.apache.commons.lang3.builder.ReflectionToStringBuilder.isExcludeNullValues()": "merge branch '' of https://github.com/markdacek/commons-lang: added isexcludenullvalues to reflectiontostringbuilder and test",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.indexOf(short,short)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.format(Calendar)": "fastdateformat apis that use a stringbuilderapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.round(Date,int)": "use validateistrue to validate argumentsreplaced private integer constants with private static enum.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.remove(String,char)": "sort members.add final modifier to local variables.use index_not_found instead of magic number.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.createKeyValues(String,String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java@org.apache.commons.lang3.builder.CompareToBuilder.append(long,long)": "removes redundant '+' signpmd: remove useless parentheses",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.TwelveHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/mutable/MutableShort.java@org.apache.commons.lang3.mutable.MutableShort.getAndIncrement()": "add final modifier to local variables. addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java@org.apache.commons.lang3.mutable.MutableDouble.subtract(Number)": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.appendDigits(Appendable,int)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.getFragmentInSeconds(Date,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesmake use of existing timeunit class to manage time units.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.format(Object,StringBuffer,FieldPosition)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/EnumUtils.java@org.apache.commons.lang3.EnumUtils.generateBitVector(Class,Iterable)": " enumutils *bitvector issue with more than 32 values enumthis add final modifier to local variables.[] permit bitvector generation for enums with > 64 values; plus some test correctionsremove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)require values parameter when generating bit vectors from enums, throwing nullpointerexception if omitted; merge check for type eligibility; add e... generatebitvector() variant; alter generatebitvector(class<e>, enumset<e>) to (class<e>, iterable<e>) by using |= << instead of + to accumulate values; process only specified values",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.parseObject(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.indexOf(CharSequence,CharSequence)": "sort members.moving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils classreplacing some of the older code. when performing a mutation operation (even if it's on an immutable by returning a new instance), string should go in and string should come out. when performing a non-mutation operation, charsequence should be passed in. 687moving indexof(string, string) and indexof(string, string, int) over to charsequence. 687",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.setArraySeparator(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.lastIndexOfSequence(CharSequence,CharSequence,int)": "replacing some of the older code. when performing a mutation operation (even if it's on an immutable by returning a new instance), string should go in and string should come out. when performing a non-mutation operation, charsequence should be passed in. 687checkstylemoving lastindexof, contains, containswhitespace, indexofany, containsany, indexofanybut, containsonly, containsnone and substring over to using charsequences for parameters. 687",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.WeekYear.format(Date,B)": ": fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.DayInWeekField.format(Date,B)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.hashCode()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.format(Calendar)": "4fastdateformat apis that use a stringbuilderapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyClosed.checkState()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java@org.apache.commons.lang3.builder.HashCodeBuilder.append(int)": "add final modifier to local variables.convert to java 5 enhanced loops. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.TwoDigitYearField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.FastDateFormat(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.replace(StrBuilder)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/tuple/Triple.java@org.apache.commons.lang3.tuple.Triple.equals(Object)": ": update java requirement from java 6 to 7replace usage of deprecated objectutilsequals with objectsequalsadd final modifier to local variables.adding henning's github pull request with a triple implementation. 675",
  "src/main/java/org/apache/commons/lang3/text/StrMatcher.java@org.apache.commons.lang3.text.StrMatcher.toString()": "add stringmatchertostring(); useful from a debugger.",
  "src/main/java/org/apache/commons/lang3/text/FormattableUtils.java@org.apache.commons.lang3.text.FormattableUtils.append(CharSequence,Formatter,int,int,int,char)": "add final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.getMaxLengthEstimate()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.Iso8601_Rule.format(Date,B)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toFloat(String)": "fixing crlfsstatement unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.parseObject(String,ParsePosition)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java@org.apache.commons.lang3.concurrent.MultiBackgroundInitializerResults.checkName(String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.getDateInstance(int,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.replaceImpl(StrMatcher,String,int,int,int)": ": strbuilderreplaceall arrayindexoutofboundsexception ()avoid arrayindexoutofboundsexception by keeping variable buf consistent with buffer in strbuilderreplaceimpl.add final modifier to local variables.add final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.smallerObject(Comparable,T)": ": new methods for lang3.validate ()fixed method names; fixed differentobject to use object.equals",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.CheckIntervalData.performStateCheck(int)": "add final modifier to local variables.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/test/java/org/apache/commons/lang3/test/NotVisibleExceptionFactory.java@org.apache.commons.lang3.test.NotVisibleExceptionFactory.getCause()": "[] prefer throwable.getcause() in exceptionutils.getcause() ()",
  "src/main/java/org/apache/commons/lang3/exception/ContextedException.java@org.apache.commons.lang3.exception.ContextedException.getContextLabels()": "refactor exceptioncontext and derived. context contract stipulates a sequence of label-value entries with support for multiple entries for the same label.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.subarray(short,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.InitStripAccents.substringsBetween(String,String,String)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.hashCode()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/tuple/ImmutableTriple.java@org.apache.commons.lang3.tuple.ImmutableTriple.nullTriple()": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces[] immutabletriple.nulltriple()",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.isAssignable(Class,Class,boolean)": "[github] commons-lang pull request : intellij idea refactorings..remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.intsToLong(int,int,long,int,int)": "code clean-up for checkstyle.simplify expressions again.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence)": "sort members.: add stringutilsisallempty and isallblank methodsapplying alexander muthmann's patch from , adding isblank/isempty charsequence... variants",
  "src/main/java/org/apache/commons/lang3/tuple/MutableTriple.java@org.apache.commons.lang3.tuple.MutableTriple.setMiddle(M)": "adding henning's github pull request with a triple implementation. 675",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyOpen.getEventCount()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.TzInfo(TimeZone,boolean)": ": fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.toByteArray(float)": ": please add number to byte[] methods. suggested by lilianne e. blaze. final patch from vincent ricard (with thanks to henri yandell).",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.StrategyParser(String,Calendar)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.add(Date,int,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesuse validateistrue to validate argumentsadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.getDateTimeInstance(int,int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shuffle(double,Random)": ": added get methods to arrayutils: added shuffle methods to arrayutils",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.setTestRecursive(boolean)": ": add bypass option for classes to recursive and reflective equalsbuilderpatch supplied by yathos ug: recursive and reflective equalsbuilder ()patch by yathos ug",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.insert(int,short,short)": "use final.remove trailing white spacesadded new vararg methods to insert values into an array at an index.this implements . this commit also deprecates the add() methodsthat inserted a single value into an array at an index.",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.toBoolean(int)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.ws[] removed unnecessary elses and use of ternary operator with primitive boolean consequences e.g. (some boolean expression) ? true : false",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.removeEnd(String,String)": "sort members.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.isJsonArray(String)": ": fix logic in isjsonarray method of jsontostringstyleextract logic for checking string representation of objects into separate methods",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.hashCode()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.typesSatisfyVariables(Map)": "the the patrol.validation",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,Object,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.WeekYear(NumberRule)": ": fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/AnnotationUtils.java@org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(Class,Object)": "add hashcode and tostring methods to annotationutils, plus tests",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.reverse(long,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.[] add arrayutils.reverse(array, from, to) methods.",
  "src/main/java/org/apache/commons/lang3/SystemUtils.java@org.apache.commons.lang3.SystemUtils.getJavaVersionAsFloat()": "- fix () systemutils.getjavaversionasfloat throws stringindexoutofboundsexception on android runtime/dalvik vm- refactor for unit testing.- remove odd test code which is copy and pasted from systemutils, which therefore does not test anything.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.getTimeZone()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.PaddedNumberField(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.insert(int,String)": "rewrite to avoid (im)possible npe warningadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/math/Fraction.java@org.apache.commons.lang3.math.Fraction.reduce()": "removes unnecessary class reference of static method calls which are declared in the same classadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.format(Date)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. applying my fix to , and mikael's test case; fixing the fastdateformat to properly include the locale when formatting a date",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.smallerOrEqual(double,double)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.appendWithSeparators(Object,String)": ": update java requirement from java 6 to 7replace usage of deprecated objectutilstostring with objectstostring: fix deprecation warningseat own dog food: separator == null ? \"\" : separator->objectutils.tostring(separator)remove superfluous parens.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.subarray(T,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.getDateInstance(int,TimeZone)": " and  simplify fastdateformat; eliminate boxingrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.getInstance(String)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.compare(T,T,boolean)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)[] add mode and median comparable... methods to objectutilscheckstyle and trailing spaces. simplify compare() method - thanks to julien aym\u00e9 add a null-safe compare() method to objectutils",
  "src/main/java/org/apache/commons/lang3/mutable/MutableInt.java@org.apache.commons.lang3.mutable.MutableInt.addAndGet(Number)": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.toString(Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.shuffle(byte)": ": added shuffle methods to arrayutils",
  "src/main/java/org/apache/commons/lang3/builder/ReflectionDiffBuilder.java@org.apache.commons.lang3.builder.ReflectionDiffBuilder.build()": ": add a reflection-based variant of diffbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.getDateInstance(int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.getDisplayNames(int)": "don't save short eras if they are the same as the long eras fastdateparser does not handle non-gregorian calendars properlyuse calendargetdisplaynames() instead of dateformatsymbolsgeteras()getinstance() (java 1.6) supports more localesexplicit conversion to integer; save the value for use latergetinstance(locale) is java 1.6+applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.CaseInsensitiveTextStrategy(int,Calendar,Locale)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.: fastdateformat doesn't respect summer daylight in some localized stringsrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display namesuse final consistently. tab policeremove keyvalues map  per sebb's suggestion",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.letterPattern(char)": "add final modifier to local variables.format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/CharSequenceUtils.java@org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,CharSequence,int)": "simplify code; javadocformattingmoving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils class",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.DayInWeekField.appendTo(Appendable,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/tuple/MutableTriple.java@org.apache.commons.lang3.tuple.MutableTriple.MutableTriple()": "adding henning's github pull request with a triple implementation. 675",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.toInteger(boolean,int,int)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.ws",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,float,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.getTimeInstance(int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.TwoDigitMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/mutable/MutableBoolean.java@org.apache.commons.lang3.mutable.MutableBoolean.isFalse()": "[github] commons-lang pull request : intellij idea refactorings..",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.isPrimitiveWrapper(Class)": "[] add apis classutils.isprimitivewrapper(class<?>) and isprimitiveorwrapper(class<?>)",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.format(Date,StringBuffer)": "change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle.java@org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(StringBuffer,String,int)": "multilinerecursivetostringstyle: made private field indent static: multiline recursive to string style. this fixes  from github. thanks to jan mat\u00e8rne.",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.hexDigitToInt(char)": "format to 120 line length.code clean-up for checkstyle.use lowercase presentation for hex values as it is done in the jdk.use jdk functionality where available.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeElements(char,char)": "remove redundant type arguments. simplify arrayutils removeelements by using newdecrementandget() method: improve arrayutils removeelements time complexity to o(n) ()based on patch submitted by jeffery yuancrlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables. arrayutils removeelements methods use unnecessary hashseteliminate conversion of bitset to int[] arrayutils removeelements methods use unnecessary hashsetreplace hashset with bitset (less memory; faster) arrayutils removeelements methods clone temporary index arrays unnecessarilyreduce number of created arrays[] complement arrayutils.addall() variants with by-index and by-value removal methods",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.format(long)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.[] fastdateformat generates date objects wastefully.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java@org.apache.commons.lang3.builder.DiffBuilder.DiffBuilder(Object,Object,ToStringStyle,boolean)": "use validateistrue to validate argumentsremove redundant type arguments.: add option to disable the objectstriviallyequal test in diffbuilder. this fixes  from github. thanks to jonathan baker.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toPrimitive(Double)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/LocaleUtils.java@org.apache.commons.lang3.SyncAvoid.isISO3166CountryCode(String)": "extract some helper methods to make the code better readable",
  "src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java@org.apache.commons.lang3.builder.CompareToBuilder.appendArray(Object,Object,Comparator)": ": comparetobuilder.append(object, object, comparator) method is too big to be inlinedextracted arrays processing into a separate method.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.format(Calendar,B)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.getDateTimeInstance(int,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.format(Date,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.getDateTimeInstance(int,int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.getDateInstance(int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.TimeZoneStrategy(Calendar,Locale)": ": fastdateformat doesn't respect summer daylight in some localized stringsmerge branch 'master' of https://github.com/nickmanley/commons-langthis  fix nullpointerexception in fastdateparser$timezonestrategyfix nullpointerexception in fastdateparser$timezonestrategyrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.setSizeStartText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.appendDigits(Appendable,int)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableFloat.java@org.apache.commons.lang3.mutable.MutableFloat.getAndDecrement()": "add final modifier to local variables. addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.upperCase(CharSequence,Locale)": "moving center, left, leftpad, right, rightpad, mid, uppercase, lowercase and swapcase over to charsequence input. 687",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.min(int,int,int)": "fixing crlfsstatement unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.parseObject(String,ParsePosition)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.CharacterLiteral(char)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.appendEnd(StringBuffer,Object)": "[github] commons-lang pull request : intellij idea refactorings..",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.appendTo(StringBuffer,Calendar)": "zz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.parsePattern()": "adjust fastdateformat for java 7 behavior regarding format of the year pattern ().refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/NotImplementedException.java@org.apache.commons.lang3.NotImplementedException.NotImplementedException(Throwable)": " make some private fields finalreturning notimplementedexception to lang after it was removed in lang 3.0 per the request in . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.append(CharSequence,int,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces<action issue=\"\" type=\"add\">strbuilder should support stringbuilder as an input parameter</action>",
  "src/main/java/org/apache/commons/lang3/time/FormatCache.java@org.apache.commons.lang3.time.FormatCache.getPatternForStyle(Integer,Integer,Locale)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.make sure placement of curly braces is consistentmake sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.explicit boxingapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle.java@org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.MultilineRecursiveToStringStyle()": ": multiline recursive to string style. this fixes  from github. thanks to jan mat\u00e8rne.",
  "src/main/java/org/apache/commons/lang3/SerializationUtils.java@org.apache.commons.lang3.SerializationUtils.resolveClass(ObjectStreamClass)": "statement unnecessarily nested within else clause.add final modifier to local variables.applying benedikt ritter's patch to fix the checkstyle error in serializationutils - 793[] serializationutils throws classnotfoundexception when cloning primitive classesapplying sven ludwig's patch from . this modifies the serializationutils.clone method to use the threadcontextloader if it is unable to find a class using the object's current classloader. this should (hopefully) help with weblogic and tomcat situations where lang is outside the web-inf for some reason (likely user error with tomcat, by design for weblogic)",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.replaceChars(String,char,char)": "sort members.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.get(Object,int)": ": added get methods to arrayutils",
  "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java@org.apache.commons.lang3.text.translate.NumericEntityEscaper.below(int)": "reverting r1090111 - moving the text.translate escapers back from using range to replicating parts of the range api. see the list for details ('unnecessary boxing in stringescapeutils etc'), the move to range was an uncomfortable fit. ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.append(StringBuffer,String,char,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/tuple/Pair.java@org.apache.commons.lang3.tuple.Pair.setValue(R)": "[] add empty_array constants to classes inorg.apache.commons.lang3.tuple",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.isTestTransients()": ": recursive and reflective equalsbuilder ()patch by yathos ug",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.TextField(int,String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.boolsToInt(boolean,int,int,int,int)": "code clean-up for checkstyle.simplify expressions again.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.TimeZoneNumberRule(boolean)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.Iso8601_Rule(int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/text/WordUtils.java@org.apache.commons.lang3.text.WordUtils.swapCase(String)": "add final modifier to local variables.eat own dog food: call stringutils.isempty().[] swapcase and *capitalize speedups.",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.isSameDay(Calendar,Calendar)": "pmd: useless parentheses",
  "src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java@org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(Class,String,Object,boolean)": "make the write*field impl match its in-line comment and not rely on the default behavior of writefield(field,target,value).a bit of dog food and a lot of javadoc tweakage[] add fieldutils getdeclaredfields() to return all the fields defined in the given class and super classes.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/text/WordUtils.java@org.apache.commons.lang3.text.WordUtils.wrap(String,int,String,boolean)": "merge branch ''wordutils.wrap: customizable breakable characters (not just space/whitespace)changed wrap method to use regex pattern to find breakable characters rather than only spaces. added a few basic tests for \"regex wrap\": fix bug with stripping spaces on last line in wordutils.wrap(). this fixes  from github. thanks to andrey khobnyaadd final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.selectNumberRule(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.getImplicitUpperBounds(WildcardType)": "validation",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.getInstance(String)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.appendFixedWidthPadLeft(Object,int,char)": "reuseadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.ceiling(Calendar,int)": "replaced private integer constants with private static enum.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/CharRange.java@org.apache.commons.lang3.CharRange.CharacterIterator(CharRange)": "adding vincent ricard's patch to charrange.java providing an iterator that lets you walk the chars in the range. 454",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.lowerCase(CharSequence)": "moving center, left, leftpad, right, rightpad, mid, uppercase, lowercase and swapcase over to charsequence input. 687",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.parse(String,ParsePosition)": "format.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names: dateutilstest.testlang530 fails for some timezonesadd final modifier to local variables.trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.setFieldNameValueSeparator(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.genericArrayTypeToString(GenericArrayType)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.cloneIfPossible(T)": "javadocadd methods for cloneables to objectutils ().",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.getStrategy(String,Calendar)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format fastdateparser does not handle excess hours as per simpledateformatdocsadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .don't mutate parameterstab police: fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java@org.apache.commons.lang3.concurrent.TimedSemaphore.getAcquireCount()": "[] added timedsemaphore class to concurrent package.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.WeekYear.format(long,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateprinter generates date objects wastefully168",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.UnpaddedNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.format(Calendar,StringBuffer)": "4fastdateformat apis that use a stringbuilder: dateformatutils.format does not correctly change calendar timezone in certain situations: unit test fastdateprintertimezonestest needs a timezone setapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.equals(Object,Object)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo) add notequal() method to objectutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.literal()": "add final modifier to local variables.pmd: these nested if statements could be combinedformat.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.getTimeInstance(int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.Range.elementCompareTo(T)": "use validatenotnull instead of \"throw new nullpointerexception\"refactor range with lots of new methods",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.toBooleanDefaultIfNull(Boolean,boolean)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.ws[] removed unnecessary elses and use of ternary operator with primitive boolean consequences e.g. (some boolean expression) ? true : false",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.truncatedEquals(Calendar,Calendar,int)": ": add truncatedequals and truncatedcompareto",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.UnpaddedMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.format(Date,B)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.TwelveHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/DiffResult.java@org.apache.commons.lang3.builder.DiffResult.toString(ToStringStyle)": "replaces 'size() == 0' and 'length() == 0' with 'isempty()'use final consistently. ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.nullToEmpty(short)": "crlf -> lfjavadoc: fix typo but working is still awkward.use isempty() where possible. thanks to james sawle for pointing this out.minor code simplificationadding nulltoempty methods to arrayutils per  and levon karayan's patch. ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.join(Iterator,String)": "sort members.[] stringutils.join() with support for list<?> withconfigurable start/end indices. extract constant.[github] commons-lang pull request : intellij idea refactorings..: update java requirement from java 6 to 7replace usage of deprecated objectutilstostring with objectstostring: fix deprecation warningsadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(StringBuffer,String)": " - jsontostringstyle does not escape string namesjsontostringstyle: improve private constant name and remove wrong comment: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.shortsToInt(short,int,int,int,int)": "code clean-up for checkstyle.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java@org.apache.commons.lang3.text.StrSubstitutor.replace(char,int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.Iso8601_Rule(int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.stripAll(String)": "sort members.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.hashCode()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.selectNumberRule(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.getParsePattern()": "allow access to parsedpattern for test purposesmake parseexception text similar to that thrown by simpledateformat",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.greaterOrEqualObj(Comparable,T)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.Iso8601_Rule.applyRules(Calendar,B)": "add final modifier to local variables.1154fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toPrimitive(Integer,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.getDateTimeInstance(int,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.byteArrayToShort(byte,int,short,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesscope of local variabel shift can be narrowerpmd: useless parenthesesformat to 120 line length.add final modifier to local variables.add final modifier to method parameters.use better method names. document possible arrayindexoutofboundsexception and stringindexoutofboundsexception.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.reverse(double)": "crlf -> lfjavadoc: fix typo but working is still awkward.[] add arrayutils.reverse(array, from, to) methods.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toObject(boolean)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableInt.java@org.apache.commons.lang3.mutable.MutableInt.addAndGet(int)": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(Class,String,Class)": "use final.use foreach loop for arrays ()since the project no longer supports java versions older than 6, it'ssafe to use the enhanced for loop syntax introduced in java 5.this patch employs this syntax where possible to clean up the code.use final consistently. a bit of dog food and a lot of javadoc tweakageadd final modifier to local variables.add final modifier to method parameters.adding nopmd tags for various empty catch blocksmoving most of the methods over to varargs. a couple can't change because they are object[], class[] with both end parameters ideally wanting to be vararg. 396",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.wildcardTypeToString(WildcardType)": "typeutils wildcard fixes[] new type util features",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.getExcludeFields()": ": recursive and reflective equalsbuilder ()patch by yathos ug",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.append(StringBuffer,String,long,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.TwelveHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.TwoDigitMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java@org.apache.commons.lang3.exception.ContextedRuntimeException.getRawMessage()": "missing method getrawmessage for contextedexception and contextedruntimeexception ().",
  "src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java@org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(String,ParsePosition,StringBuilder,boolean)": "add final modifier to local variables.add final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.getNextStrategy()": "add final modifier to local variables.format.statement unnecessarily nested within else clause.\\refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.getStrategy(String)": "document intentional drop-thruapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.Iso8601_Rule.appendTo(Appendable,int)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.getStrategy(char,int,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y') partial: implement format 'u' for fastdateformat, day number of weekrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.EventListenerSupport.EventListenerSupport(Class)": "changing eol-style to native.misc. event utils.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.applyRules(Calendar,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: resurrect applyrules(java.util.calendar, java.lang.stringbuffer) for binary compatibilityadd final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.TwentyFourHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.reverse(String)": "sort members.tab police (and trailing spaces)back out a csu experiment.change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/tuple/Pair.java@org.apache.commons.lang3.tuple.Pair.toString()": "[github] commons-lang pull request : intellij idea refactorings..inline the pair tostring for performance, and specify the formatpair implements java.util.formattable and defers tostring() handling thereto.",
  "src/main/java/org/apache/commons/lang3/NotImplementedException.java@org.apache.commons.lang3.NotImplementedException.getCode()": "returning notimplementedexception to lang after it was removed in lang 3.0 per the request in . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.getTimeInstance(int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.anyNotNull(Object)": ": added methods to objectutils class to check for null elements in the array ()",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.Range.Range(T,T,Comparator)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesdon't assign parameterrefactor range with lots of new methodscheckstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.TimeZoneNumberRule(boolean)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.getCommonPrefix(String)": "sort members.add final modifier to local variables.tab police (and trailing spaces)use index_not_found instead of magic number.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.swap(int,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.merge branch '': inconsistent behavior of swap for malformed inputs. thanksto adrian ber.consistent treatment for negative indices for swap methodswap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/mutable/MutableInt.java@org.apache.commons.lang3.mutable.MutableInt.getValue()": "use more efficient integer cache: use \"integer.valueof(int)\" instead of \"new integer(int)\".",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.format(Date,B)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java@org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(Object,Object,boolean)": "more varargs-related updates",
  "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java@org.apache.commons.lang3.text.translate.NumericEntityEscaper.NumericEntityEscaper(Range)": "moving text translation classes to the range class for its configuration",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.wrap(String,String)": "[] stringutils.wrapifmissing(string, char|string)make checkstyle happy: add wrap (with string or char) to stringutils. this closes pr  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.format(long,B)": ": fastdateprinter generates date objects wastefullyfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.replaceImpl(StrMatcher,String,int,int,int)": ": strbuilderreplaceall arrayindexoutofboundsexception ()avoid arrayindexoutofboundsexception by keeping variable buf consistent with buffer in strbuilderreplaceimpl.add final modifier to local variables.add final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toObject(int)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.setNullText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java@org.apache.commons.lang3.exception.DefaultExceptionContext.addContextValue(Pair)": "refactor exceptioncontext and derived. context contract stipulates a sequence of label-value entries with support for multiple entries for the same label.",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.getFragment(Date,int,TimeUnit)": "use validateistrue to validate arguments",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.AlwaysTruePredicate.ThreadIdPredicate(long)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.getLocale()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.parsePattern()": "adjust fastdateformat for java 7 behavior regarding format of the year pattern ().refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.getMaxLengthEstimate()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(String,String)": "use index_not_found instead of magic number.",
  "src/main/java/org/apache/commons/lang3/SerializationUtils.java@org.apache.commons.lang3.SerializationUtils.roundtrip(T)": "removes unnecessary class reference of static method calls which are declared in the same class: add (t) casts to get unit tests to pass in old jdk. this fixes  from github. thanks to jonathan baker.<action issue=\"\" type=\"add\" dev=\"ggregory\">add serializationutils.roundtrip(t extends serializable) to serialize then deserialize</action>",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.truncate(String,int,int)": "sort members.add final modifier to local variables.remove unnecessary else.: add stringutils.truncate() ()",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.getTimeInstance(int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/math/Fraction.java@org.apache.commons.lang3.math.Fraction.addAndCheck(int,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesformat to 120 line length.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java@org.apache.commons.lang3.builder.HashCodeBuilder.appendArray(Object)": ": hashcodebuilder.append(object,object) is too big to be inlined, which prevents whole builder to be scalarized ()",
  "src/main/java/org/apache/commons/lang3/tuple/Triple.java@org.apache.commons.lang3.tuple.TripleAdapter.emptyArray()": "[] add empty_array constants to classes inorg.apache.commons.lang3.tuple",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.longToHexs(long,int,String,int,int)": "code clean-up for checkstyle.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.getInstance(String,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.NumberStrategy(int)": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.getFragment(Date,int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java@org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(Field,Object,boolean)": "[] org.apache.commons.lang3.reflect.fieldutils.removefinalmodifier(field) does not clean up after itself.a bit of dog food and a lot of javadoc tweakage",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.appendFullDigits(Appendable,int,int)": "add final modifier to local variables.: fastdateprinter memory allocation regressionfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.TwoDigitNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.FastDateFormat(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.parsePattern()": "adjust fastdateformat for java 7 behavior regarding format of the year pattern ().refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.replaceFirst(String,String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.trim(String)": "sort members.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.getTimeInstance(int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.parsePattern()": "adjust fastdateformat for java 7 behavior regarding format of the year pattern ().refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.ComparableComparator.elementAfter(T)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.getMaxWidth(ListIterator)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.getParsePattern()": "allow access to parsedpattern for test purposesmake parseexception text similar to that thrown by simpledateformat",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.bytesToUuid(byte,int)": "code clean-up for checkstyle.: add to conversion from byte[] to uuid and uuid to byte[]",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.isTrue(boolean,String,Object)": "[github] commons-lang pull request : intellij idea refactorings..",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.KeyValue(String,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.getImplicitUpperBounds(WildcardType)": "validation",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyOpen.changeStateAndStartNewCheckInterval(State)": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.isAllLowerCase(CharSequence)": "sort members.[github] commons-lang pull request : intellij idea refactorings..add final modifier to local variables.change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.leftString(int)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.adjustYear(int)": "format.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.getRawType()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.CharacterLiteral(char)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.add(long,int,long)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.UnpaddedNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.appendDigits(StringBuffer,int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java@org.apache.commons.lang3.time.Token.format(Token,long,long,long,long,long,long,long,boolean)": " - fix findbugs warnings in durationformatutilsuse final consistently. use enhanced for loop failing tests with java 8 b128 durationformatutils does not handle large durations correctly",
  "src/main/java/org/apache/commons/lang3/reflect/ConstructorUtils.java@org.apache.commons.lang3.reflect.ConstructorUtils.invokeExactConstructor(Class,Object,Class)": "a bit of dog food and a lot of javadoc tweakageadd final modifier to local variables.review and cleanup javadoc in constructorutilsmove/comment suppresswarnings(unchecked)/refactor surrounding codegenerics",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.getContent()": "statements unnecessarily nested within else clause.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.addRegex(FastDateParser,StringBuilder)": " fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses . fastdateparser does not handle non-gregorian calendars properly applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.startsWith(String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.isArrayType(Type)": "add methods for inspecting array types",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.TwoDigitYearField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.withUpperBounds(Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.truncate(Calendar,int)": "replaced private integer constants with private static enum.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.estimateLength()": " fastdateparser and fastdateprinter support 'x' formatapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.appendAll(Object)": "convert to java 5 enhanced loops. ",
  "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java@org.apache.commons.lang3.CsvUnescaper.unescapeJson(String)": "added escape/unescapejson methods per maurizio cucchiara's patch in 797",
  "src/main/java/org/apache/commons/lang3/time/FormatCache.java@org.apache.commons.lang3.time.FormatCache.getDateTimeInstance(Integer,Integer,TimeZone,Locale)": " simplify fastdateformat; eliminate boxingadd final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.append(String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.<action issue=\"\" type=\"add\">strbuilder should support stringbuilder as an input parameter</action>",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(CharSequence,CharSequence,int)": "format source codeuse final modifier where possiblecorrect indentation: add the jaro-winkler string distance algorithm to stringutils - partially applying the patch by rekha joshi as submitted for further refinement",
  "src/main/java/org/apache/commons/lang3/tuple/Pair.java@org.apache.commons.lang3.tuple.PairAdapter.emptyArray()": "[] add empty_array constants to classes inorg.apache.commons.lang3.tuple",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(StrBuilder)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/builder/Diff.java@org.apache.commons.lang3.builder.Diff.setValue(T)": ": there should be a differencebuilder with a reflectiondifferencebuilder implementation",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyClosed.getOpeningThreshold()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.letterPattern(char)": "add final modifier to local variables.format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/RandomUtils.java@org.apache.commons.lang3.RandomUtils.nextBoolean()": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces[][github issue ] add randomutilsnextboolean() method..",
  "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java@org.apache.commons.lang3.text.translate.LookupTranslator.translate(CharSequence,int,Writer)": "further optimization of :- avoid tostring of the replacement sequence by doing it once.- avoid calculating the maximum when not needed.- fixup comment for greedy algorithmthanks to fabian lange.: possible performance improvement on string escape functions. thanks to fabian lange and thomas neidhart.allow lookuptranslator to support charsequence properly; previously it was working only for charsequence's that implemented hashcode and equals(object). 882add final modifier to local variables.ws",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.indexOfDifference(CharSequence)": "sort members.use final.use foreach loop for arrays ()since the project no longer supports java versions older than 6, it'ssafe to use the enhanced for loop syntax introduced in java 5.this patch employs this syntax where possible to clean up the code.add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)tab police (and trailing spaces)use index_not_found instead of magic number.change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.compare(short,short)": "fixing crlfsstatement unnecessarily nested within else clause.statement unnecessarily nested within else clause. - add issorted() to arrayutils. patch supplied by james sawle.  in github.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.DayInWeekField.equals(Object)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.contains(char)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/StopWatch.java@org.apache.commons.lang3.time.StopWatch.split()": "sort methods.applying sebb's patch from  - adding isstarted, issuspended and isstopped to stopwatch",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.parse(String,ParsePosition,Calendar)": "lvar should not hide ivar.add final modifier to local variables.format.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.getDateInstance(int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.getInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.hashCode()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.format(Calendar)": "4fastdateformat apis that use a stringbuilderapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.NamePredicate.test(Thread)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.contains(long,long)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.format(Date,B)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.endsWith(String,String,boolean)": ": add normalizespace to stringutilschange stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().applying srihari reddy's patch from , based on dave meikle's original patch. this adds a truncatemiddle method to stringutils. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.TwoDigitNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.equalsIgnoreCase(StrBuilder)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.applyRulesToString(Calendar)": "4fastdateformat apis that use a stringbuilderrefactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/AnnotationUtils.java@org.apache.commons.lang3.AnnotationUtils.remove()": "add hashcode and tostring methods to annotationutils, plus tests",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.nullToEmpty(int)": "crlf -> lfjavadoc: fix typo but working is still awkward.use isempty() where possible. thanks to james sawle for pointing this out.minor code simplificationadding nulltoempty methods to arrayutils per  and levon karayan's patch. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.TwentyFourHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.TimeZoneNumberRule(boolean,boolean)": "added missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .",
  "src/main/java/org/apache/commons/lang3/reflect/TypeLiteral.java@org.apache.commons.lang3.reflect.TypeLiteral.toString()": "[] provide typeliteral class similar to javax.enterprise.util.typeliteral",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.getDateInstance(int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.getTimeZone()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.endsWith(String)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.appendTo(StringBuffer,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.WeekYear.applyRules(Calendar,B)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.getDateInstance(int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.createKeyValues(List)": ": fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.setCalendar(FastDateParser,Calendar,String)": "[] timezone.gettimezone() in fastdateparser causes resourcecontention</action>. this .utc and gmt are the same, so simplify.refactor \"gmt\" magic string.make sure lines in files don't have trailing white spaces and remove all trailing white spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .",
  "src/main/java/org/apache/commons/lang3/SerializationUtils.java@org.apache.commons.lang3.ClassLoaderAwareObjectInputStream.ClassLoaderAwareObjectInputStream(InputStream,ClassLoader)": "[] serializationutils throws classnotfoundexception when cloning primitive classesapplying sven ludwig's patch from . this modifies the serializationutils.clone method to use the threadcontextloader if it is unable to find a class using the object's current classloader. this should (hopefully) help with weblogic and tomcat situations where lang is outside the web-inf for some reason (likely user error with tomcat, by design for weblogic)",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.TwoDigitNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.CharacterLiteral(char)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.getStrategy(String,Calendar)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format fastdateparser does not handle excess hours as per simpledateformatdocsadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.appendInternal(StringBuffer,String,Object,boolean)": "tab alignment[] clear threadlocal recursion registry (compatibly with existing tests, first pass)",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.append(StringBuffer,String,double,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableShort.java@org.apache.commons.lang3.mutable.MutableShort.decrementAndGet()": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java@org.apache.commons.lang3.time.DurationFormatUtils.formatDurationHMS(long)": ": durationformatutilsformatdurationhms implementation does not correspond to javadoc and vice versa. thanks to michael osipov",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.StringLiteral(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.format(Calendar,StringBuffer)": "4fastdateformat apis that use a stringbuilder: dateformatutils.format does not correctly change calendar timezone in certain situations: unit test fastdateprintertimezonestest needs a timezone setapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.parameterize(Class,Map)": "validation[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.init(Calendar)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.don't need a copy of this field.add final modifier to local variables.remove redundant type arguments.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.compare(KeyValue,KeyValue)": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.indexOf(double,double,int)": "removes unnecessary class reference of static method calls which are declared in the same classcrlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyOpen.stateStrategy(State)": "[github] commons-lang pull request : intellij idea refactorings..add final modifier to local variables.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.CopyQuotedStrategy(String)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/text/StrMatcher.java@org.apache.commons.lang3.text.TrimMatcher.toString()": "add stringmatchertostring(); useful from a debugger.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.getInstance(String,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.UnpaddedNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/SystemUtils.java@org.apache.commons.lang3.SystemUtils.isOSNameMatch(String,String)": ": support os x versions in systemutils. this also fixes  from github. thanks to timo kockert.: make logic for comparing os versions in systemutils smarter- fix () systemutils.getjavaversionasfloat throws stringindexoutofboundsexception on android runtime/dalvik vm- refactor for unit testing.- remove odd test code which is copy and pasted from systemutils, which therefore does not test anything.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.FastDateParser(String,TimeZone,Locale)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names: dateutilstest.testlang530 fails for some timezonesrestore binary compartibilitytrailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyOpen.checkState()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.getDateTimeInstance(int,int,TimeZone)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.truncatedEquals(Calendar,Calendar,int)": ": add truncatedequals and truncatedcompareto",
  "src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java@org.apache.commons.lang3.mutable.MutableDouble.getAndAdd(Number)": "add final modifier to local variables. addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java@org.apache.commons.lang3.builder.DiffBuilder.append(String,double,double)": "use validateistrue to validate arguments: there should be a differencebuilder with a reflectiondifferencebuilder implementation",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.format(long)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.[] fastdateformat generates date objects wastefully.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toPrimitive(Integer)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.getLocale()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java@org.apache.commons.lang3.builder.CompareToBuilder.append(Object,Object)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.getMethodsWithAnnotation(Class,Class,boolean,boolean)": "use final.: adds methodutilsfindannotation and extend methodutilsgetmethodswithannotation for non-public, super-class and interface methods ()",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.Iso8601_Rule(int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.readObject(ObjectInputStream)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyClosed.getEventCount()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(WildcardType)": "typeutils wildcard fixes[] new type util features",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.max(byte,byte,byte)": "fixing crlfsstatement unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.parsePattern()": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove redundant type arguments.: fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y') partial: implement format 'u' for fastdateformat, day number of weekzz format not displaying z for utc with openjdk 6replace tabs with spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.setSizeEndText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.setArrayEnd(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.Pair.parseObject(String,ParsePosition)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java@org.apache.commons.lang3.time.Token.formatDurationWords(long,boolean,boolean)": "replaces 'size() == 0' and 'length() == 0' with 'isempty()'make sure lines in files don't have trailing white spaces and remove all trailing white spacesfix various javadoc typos ()reuseadd final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.TextField(int,String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/CharSequenceUtils.java@org.apache.commons.lang3.CharSequenceUtils.subSequence(CharSequence,int)": "moving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils classjavadoc; move @since; add documented constructorsvn ps svn:eol-style nativesrc/main/java/org/apache/commons/lang3/charsequenceutils.javasvn ps svn:eol-style nativesrc/test/java/org/apache/commons/lang3/charsequenceutilstest.javatab police (and trailing spaces)fix defaultisempty typing.change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.appendTo(StringBuffer,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.Iso8601_Rule.newCalendar()": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.CharacterLiteral(char)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.getCanonicalName(Class,String)": "[] add methods to classutils to get various forms of classnames in a null-safe manner[] add methods to classutils to get various forms of classnames in a null-safe manner",
  "src/main/java/org/apache/commons/lang3/mutable/MutableFloat.java@org.apache.commons.lang3.mutable.MutableFloat.getAndAdd(float)": "add final modifier to local variables. addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.Range.between(T,T,Comparator)": "remove redundant type arguments.refactor range with lots of new methods",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.format(Calendar,B)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.rotate(String,int)": "sort members.: add stringutils.rotate(string, int)",
  "src/main/java/org/apache/commons/lang3/mutable/MutableFloat.java@org.apache.commons.lang3.mutable.MutableFloat.getValue()": "use internal java's number caches instead creating new objects:- use more efficient integer cache: use \"integer.valueof(int)\" instead of \"new integer(int)\".- use more efficient long cache: use \"long.valueof(int)\" instead of \"new long(long)\".- use more efficient short cache: use \"short.valueof(int)\" instead of \"new short(short)\".in java version 1.6.0_24 (vendor: sun microsystems inc.), float and double do not implement caches, but i've made the same changes for consistency and future proofing.- use \"double.valueof(int)\" instead of \"new double(double)\".- use \"float.valueof(int)\" instead of \"new float(float)\".",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.lowerCase(String)": "sort members.rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687",
  "src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java@org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)": "add final modifier to local variables.convert to java 5 enhanced loops. ",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.boolArrayToHexDigitMsb0_4bits(boolean)": "use better method names. document possible arrayindexoutofboundsexception and stringindexoutofboundsexception.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.nullToEmpty(byte)": "crlf -> lfjavadoc: fix typo but working is still awkward.use isempty() where possible. thanks to james sawle for pointing this out.minor code simplificationadding nulltoempty methods to arrayutils per  and levon karayan's patch. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.hashCode()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.format(Calendar)": "4fastdateformat apis that use a stringbuilderapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/SystemUtils.java@org.apache.commons.lang3.SystemUtils.toVersionInt(int)": "- fix () systemutils.getjavaversionasfloat throws stringindexoutofboundsexception on android runtime/dalvik vm- refactor for unit testing.- remove odd test code which is copy and pasted from systemutils, which therefore does not test anything.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.getInstance(String,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.Iso8601_Rule.format(long)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategy.performStateCheck(int)": "add final modifier to local variables.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.BasicThreadFactory.getDaemonFlag()": "don't need internal ivar name for a boolean to carry a \"flag\" postfix.adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.compare(long,long)": "fixing crlfsstatement unnecessarily nested within else clause.statement unnecessarily nested within else clause. - add issorted() to arrayutils. patch supplied by james sawle.  in github.",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.getThrowableList(Throwable)": "sort by method name.[] exceptionutils.getthrowablelist() is using deprecatedexceptionutils.getcause()[github] commons-lang pull request : intellij idea refactorings..remove redundant type arguments.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TextStrategy.setCalendar(FastDateParser,Calendar,String)": "trailing spaces fastdateparser does not handle non-gregorian calendars properly unnecessary ;applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.setNullText(String)": "use stringisempty() instead of stringlength() == 0",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.getInstance(String)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.indexOf(CharSequence,CharSequence,int)": "sort members.moving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils classreplacing some of the older code. when performing a mutation operation (even if it's on an immutable by returning a new instance), string should go in and string should come out. when performing a non-mutation operation, charsequence should be passed in. 687moving indexof(string, string) and indexof(string, string, int) over to charsequence. 687",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.hashCode()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.format(Calendar,StringBuffer)": "4fastdateformat apis that use a stringbuilder: dateformatutils.format does not correctly change calendar timezone in certain situations: unit test fastdateprintertimezonestest needs a timezone setapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.CharacterLiteral(char)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.getFragment(Calendar,int,TimeUnit)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.make sure lines in files don't have trailing white spaces and remove all trailing white spacesuse final consistently. make use of existing timeunit class to manage time units.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.TimeZoneNameRule(TimeZone,Locale,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.getInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.FastDateParser(String,TimeZone,Locale,Date)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.make sure placement of curly braces is consistent",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.equals(Object)": "if statement can be simplified",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.NoClassNameToStringStyle()": ": add noclassnametostringstyle implementation of tostringstyle. this  from github. thanks to innokenty shuvalov.",
  "src/main/java/org/apache/commons/lang3/tuple/Triple.java@org.apache.commons.lang3.tuple.TripleAdapter.getMiddle()": "[] add empty_array constants to classes inorg.apache.commons.lang3.tuple",
  "src/main/java/org/apache/commons/lang3/time/StopWatch.java@org.apache.commons.lang3.time.StopWatch.getSplitTime()": "sort methods.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.genericArrayTypeToString(GenericArrayType)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FormatCache.java@org.apache.commons.lang3.time.FormatCache.hashCode()": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FormatCache.java@org.apache.commons.lang3.time.MultipartKey.MultipartKey(Object)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.ensureCapacity(int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.compareIgnoreCase(String,String)": "merge branch 'fix-': add compare methods in stringutilsthis  from github. add null safe compare methods in stringutils :  - stringutils.compare(string str1, string str2);  - stringutils.compare(string str1, string str2, boolean nullisless);  - stringutils.compareignorecase(string str1, string str2);  - stringutils.compareignorecase(string str1, string str2, boolean nullisless);",
  "src/main/java/org/apache/commons/lang3/CharRange.java@org.apache.commons.lang3.CharacterIterator.equals(Object)": "boolean comparisons in charrange ()cleaned up comparisons to false to just use the boolean negationoperator (!).add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.TwelveHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.TwentyFourHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/StopWatch.java@org.apache.commons.lang3.time.StopWatch.unsplit()": "sort methods.applying sebb's patch from  - adding isstarted, issuspended and isstopped to stopwatch",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.append(CharBuffer)": ": avoid string allocation in strbuilder.append(charsequence). this fixes  from github. thanks to mikhail mazurskiy and fabian lange.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.mapTypeVariablesToArguments(Class,ParameterizedType,Map)": "add final modifier to local variables.add final modifier to method parameters.[] vastly expanded typeutils",
  "src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java@org.apache.commons.lang3.reflect.FieldUtils.getFieldsListWithAnnotation(Class,Class)": "remove redundant type arguments.: provide methods to retrieve all fields/methods annotated with a specific type. thanks to alexander m\u00fcller.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.CheckIntervalData.close()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.getMethodsListWithAnnotation(Class,Class)": ": adds methodutilsfindannotation and extend methodutilsgetmethodswithannotation for non-public, super-class and interface methods ()remove redundant type arguments.: provide methods to retrieve all fields/methods annotated with a specific type. thanks to alexander m\u00fcller.",
  "src/main/java/org/apache/commons/lang3/concurrent/Memoizer.java@org.apache.commons.lang3.concurrent.Memoizer.call()": ": implementation of a memomizer ()changes suggested in https://github.com/apache/commons-lang/pull/80:- tabs to spaces- use @override- remove unused variables- other minimal clean-ups: implementation of a memomizer ()",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.withLowerBounds(Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.StrategyAndWidth(Strategy,int)": "refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.AlwaysTruePredicate.getAllThreadGroups()": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.readObject(ObjectInputStream)": " and trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.WeekYear.appendDigits(Appendable,int)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.getDisplayNames(int)": "don't save short eras if they are the same as the long eras fastdateparser does not handle non-gregorian calendars properlyuse calendargetdisplaynames() instead of dateformatsymbolsgeteras()getinstance() (java 1.6) supports more localesexplicit conversion to integer; save the value for use latergetinstance(locale) is java 1.6+applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.TimeZoneDisplayKey(TimeZone,boolean,int,Locale)": "don't mutate parametersadd final modifier to method parameters.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.appendFieldStart(StringBuffer,String)": " - jsontostringstyle does not escape string namesjsontostringstyle: improve private constant name and remove wrong comment: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(String,String,int)": "use index_not_found instead of magic number.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.Iso8601_Rule.format(Date)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.InitStripAccents.isNumericSpace(CharSequence)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.equals(Object)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.withLowerBounds(Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,Class)": "add final modifier to local variables.[] vastly expanded typeutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule(boolean)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.toIntegerObject(boolean)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.ws",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.isBlank(CharSequence)": "sort members.[github] commons-lang pull request : intellij idea refactorings..remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.setSummaryObjectStartText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.wildcardTypeToString(WildcardType)": "typeutils wildcard fixes[] new type util features",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyClosed.stateStrategy(State)": "[github] commons-lang pull request : intellij idea refactorings..add final modifier to local variables.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.append(char)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.setSizeStartText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.estimateLength()": " fastdateparser and fastdateprinter support 'x' formatapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrLookup.java@org.apache.commons.lang3.text.StrLookup.copyProperties(Properties)": ": strsubstitutor.replacesystemproperties does not work consistently. this fixes  from github. thanks to jonathan baker.",
  "src/main/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle.java@org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.reflectionAppendArrayDetail(StringBuffer,String,Object)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesavoid endless loop printing array with multilinerecursivetostringstyleprevious implementation was causing an endless loop by calling'super.appenddetail' rather than 'super.reflectionappendarraydetail'when it encountered an array type.fixes: multilinerecursivetostringstyle: made private field indent static: multiline recursive to string style. this fixes  from github. thanks to jan mat\u00e8rne.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.TimeZoneNumberRule(boolean)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.adjustYear(int)": "format.",
  "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java@org.apache.commons.lang3.StringEscapeUtils.unescapeJson(String)": "added escape/unescapejson methods per maurizio cucchiara's patch in 797",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.substring(String,int,int)": "sort members.rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.getFragmentInHours(Calendar,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesmake use of existing timeunit class to manage time units.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.appendFixedWidthPadLeft(Object,int,char)": "reuseadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.equalsIgnoreCase(StrBuilder)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.StateStrategyClosed.EventCountCircuitBreaker(int,long,TimeUnit)": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.JsonToStringStyle.appendFieldStart(StringBuffer,String)": " - jsontostringstyle does not escape string namesjsontostringstyle: improve private constant name and remove wrong comment: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.readFrom(Readable)": ": add zero copy write method to strbuilder; : add zero copy read method to strbuilder. thanks to mikhail mazursky.",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object,String,Object)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: enhance methodutils to allow invocation of private methods ()a bit of dog food and a lot of javadoc tweakageadd final modifier to local variables.[] methodutils.invoke*(*, object... args) variants cannot handle null valuesmoving most of the methods over to varargs. a couple can't change because they are object[], class[] with both end parameters ideally wanting to be vararg. 396",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.indexOf(CharSequence,int)": "sort members.moving the charsequence specific methods out of stringutils and reintroducing the charsequenceutils classreplacing some of the older code. when performing a mutation operation (even if it's on an immutable by returning a new instance), string should go in and string should come out. when performing a non-mutation operation, charsequence should be passed in. 687moving indexof(string, int) and indexof(string, int, int) over to charsequence. . this, plus the same happening for the string, string, int variant will open up a lot of methods. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.addNamesToKeyValues(List,Map)": ": fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(Class,String,Object)": "a bit of dog food and a lot of javadoc tweakageadd final modifier to local variables.[] methodutils.invoke*(*, object... args) variants cannot handle null valuesmoving most of the methods over to varargs. a couple can't change because they are object[], class[] with both end parameters ideally wanting to be vararg. 396",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.format(Calendar)": "1154fastdateformat apis that use a stringbuilderapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.getTimeZone()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java@org.apache.commons.lang3.builder.ReflectionToStringBuilder.ReflectionToStringBuilder(Object)": "add checknotnull method in reflectiontostringbuilder.java to fix 1132",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toPrimitive(Long,long)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.addAll(long,long)": "crlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.UnpaddedNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double,String)": "validate's string.format without arguments ()while calling string.format(\"some string\") without any additionalarguments is not technically wrong, it's redundant, as it justreturns the same string.removing these calls and just using the string instead both cleans upthe code and offers a (very slight) performance gain.: validate: add inclusivebetween and exclusivebetween overloads for primitives types. initial patch provided by sebb.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.appendln(StringBuffer)": "<action issue=\"\" type=\"add\">strbuilder should support stringbuilder as an input parameter</action>",
  "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java@org.apache.commons.lang3.time.Token.formatPeriod(long,long,String,boolean,TimeZone)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.make sure lines in files don't have trailing white spaces and remove all trailing white spacesusing validate where possible in time package.: durationformatutils are not able to handle negative duration/periods. document new behavior for negative inputs.: durationformatutils are not able to handle negative durations/periods. reported by michael osipov.remove useless parentheses (pmd).add final modifier to local variables.add final modifier to method parameters.fix brace positions",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeElements(float,float)": "remove redundant type arguments. simplify arrayutils removeelements by using newdecrementandget() method: improve arrayutils removeelements time complexity to o(n) ()based on patch submitted by jeffery yuancrlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables. arrayutils removeelements methods use unnecessary hashseteliminate conversion of bitset to int[] arrayutils removeelements methods use unnecessary hashsetreplace hashset with bitset (less memory; faster) arrayutils removeelements methods clone temporary index arrays unnecessarilyreduce number of created arrays[] complement arrayutils.addall() variants with by-index and by-value removal methods",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.CONST(byte)": "make sure placement of curly braces is consistent[] introduce const() methods to prevent javac from inlining constants",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.genericArrayTypeToString(GenericArrayType)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/text/translate/OctalUnescaper.java@org.apache.commons.lang3.text.translate.OctalUnescaper.isZeroToThree(char)": "rewriting octalunescaper as a hand rolled parser (all of 4 characters), instead of trying to handle the conversion via repeated attempts to convert the numbers. this fixes bugs, see , and also changes the behaviour for 'illegal' octals such as \\999. instead of throwing numberformatexception, it will now ignore them. this seems the better behaviour. ",
  "src/main/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle.java@org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(StringBuffer,String,byte)": "multilinerecursivetostringstyle: made private field indent static: multiline recursive to string style. this fixes  from github. thanks to jan mat\u00e8rne.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.WeekYear.applyRules(Calendar,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: resurrect applyrules(java.util.calendar, java.lang.stringbuffer) for binary compatibility",
  "src/main/java/org/apache/commons/lang3/math/NumberUtils.java@org.apache.commons.lang3.math.NumberUtils.min(double)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesfixing crlfsstatement unnecessarily nested within else clause. code refactoring in numberutils",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.isAlphanumeric(CharSequence)": "sort members.[github] commons-lang pull request : intellij idea refactorings..eat own dog food: use stringutils.isempty().add final modifier to local variables.resolving  - changing stringutils.isalpha, isalphanumeric and isnumeric to return false when passed an empty string. documenting this in the changes report and in the upgrade article. also fixing a javadoc c+p error in isnumericspace and isalphanumericspace. change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.indexOfSequence(CharSequence,CharSequence,int)": "replacing some of the older code. when performing a mutation operation (even if it's on an immutable by returning a new instance), string should go in and string should come out. when performing a non-mutation operation, charsequence should be passed in. 687checkstylemoving indexof(string, int) and indexof(string, int, int) over to charsequence. . this, plus the same happening for the string, string, int variant will open up a lot of methods. ",
  "src/main/java/org/apache/commons/lang3/text/StrMatcher.java@org.apache.commons.lang3.text.NoMatcher.charSetMatcher(String)": "eat own dog food: stringutilsisempty(string) and replace some but not all stringlength() == 0 with stringisempty()",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.getDateTimeInstance(int,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.Pair.getDateTimeInstance(int,int)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.compare(String,String)": ": fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.TimeZoneNumberRule(boolean)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toString(Object)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.append(StringBuilder,int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.TzInfo(TimeZone,boolean)": ": fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle.java@org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(StringBuffer,String,Object)": "multilinerecursivetostringstyle: made private field indent static: multiline recursive to string style. this fixes  from github. thanks to jan mat\u00e8rne.",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.toBooleanObject(String,String,String,String)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.[] removed unnecessary elses and use of ternary operator with primitive boolean consequences e.g. (some boolean expression) ? true : false",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.getInstance(String,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java@org.apache.commons.lang3.exception.DefaultExceptionContext.setContextValue(Pair)": "refactor exceptioncontext and derived. context contract stipulates a sequence of label-value entries with support for multiple entries for the same label.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.append(String,int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.getDateInstance(int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.getInstance()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/math/Fraction.java@org.apache.commons.lang3.math.Fraction.invert()": "statement unnecessarily nested within else clause.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.readObject(ObjectInputStream)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.WeekYear.appendTo(Appendable,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.KeyValue(String,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.DayInWeekField.TimeZoneNameRule(TimeZone,Locale,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/builder/ToStringBuilder.java@org.apache.commons.lang3.builder.ToStringBuilder.appendAsObjectToString(Object)": "it's confusing to re-use field names locally",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.appendTo(Appendable,int)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.newCalendar()": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableFloat.java@org.apache.commons.lang3.mutable.MutableFloat.decrementAndGet()": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java@org.apache.commons.lang3.exception.DefaultExceptionContext.getContextValues(String)": "remove redundant type arguments.refactor exceptioncontext and derived. context contract stipulates a sequence of label-value entries with support for multiple entries for the same label.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.TwoDigitYearField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.getDateInstance(int,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.append(StringBuffer,String,Object,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.getDateInstance(int)": " simplify fastdateformat; eliminate boxingrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.parse(String,ParsePosition,Calendar)": "lvar should not hide ivar.add final modifier to local variables.format.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/NotImplementedException.java@org.apache.commons.lang3.NotImplementedException.NotImplementedException(String,Throwable,String)": "returning notimplementedexception to lang after it was removed in lang 3.0 per the request in . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.getDateTimeInstance(int,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.getInstance(String,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.nullToEmpty(T,Class)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesformatting fixes perhttps://patch-diff.githubusercontent.com/raw/apache/commons-lang/pull/128.diffcrlf -> lfjavadoc: fix typo but working is still awkward.implements : change nulltoempty methods to generics. thanks to james sawle. this  in github too.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.MultiLineToStringStyle()": "deprecate systemutilsline_separator in favor of java.lang.systemlineseparator",
  "src/main/java/org/apache/commons/lang3/CharUtils.java@org.apache.commons.lang3.CharUtils.toIntValue(char)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.getParsePattern()": "allow access to parsedpattern for test purposesmake parseexception text similar to that thrown by simpledateformat",
  "src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java@org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(CharSequence,int,Writer)": "statement unnecessarily nested within else clause.add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)fix pmd issues: \"these nested if statements could be combined\"removing the option around whether or not to support the + in \\u+0000. jdk 7 now supports the + sign, so unicodeunescaper will unescape \\u0000 or \\u+0000. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.copy(KeyValue,int,String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyParser.compare(String,String)": ": fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.appendln(String,Object)": "[] create strbuilder apis similar to string.format(string, object...)",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean,int)": "format to 120 line length.simplify using ternary expressions instead of nested if-elses.",
  "src/main/java/org/apache/commons/lang3/LocaleUtils.java@org.apache.commons.lang3.SyncAvoid.localeLookupList(Locale,Locale)": "replaces 'size() == 0' and 'length() == 0' with 'isempty()'[github] commons-lang pull request : intellij idea refactorings..remove redundant type arguments.reuseadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/event/EventUtils.java@org.apache.commons.lang3.event.EventBindingInvocationHandler.bindEventsToMethod(Object,String,Object,Class,String)": "add final modifier to method parameters.checkstylecompiler/generics warnings & a typochanging eol-style to native.misc. event utils.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java@org.apache.commons.lang3.mutable.MutableDouble.addAndGet(Number)": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.equals(WildcardType,Type)": "lan-1114 fixes bug in typeutils.equals(wildcardtype, type) where it was incorrectly returning true when the second argument was not a wildcard type.typeutils wildcard fixes[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.selectNumberRule(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.equals(Object,Object)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo) add notequal() method to objectutils",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.parse(String,ParsePosition,Calendar)": ": fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.joinWith(String,Object)": ": defaultstring(str) reuses defaultstring(str, defaultstr): update java requirement from java 6 to 7replace usage of deprecated objectutilstostring with objectstostringadd @suppresswarnings(deprecation) in joinwith(), because it uses the deprecated objectutils.tostring(object) method (which is o.k. to use as long as we do not require java 7 or greater)use final where possible - added new joinwith method to support varargs",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char,char)": "add final modifier to local variables.remove trailing whitespacescrlf -> lfjavadoc: fix typo but working is still awkward.implements : add a method to arrayutils for removing all occurrences of a given element. thanks to haiyang li.",
  "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java@org.apache.commons.lang3.CsvUnescaper.escapeHtml3(String)": "remove unnecessary white spaces",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.Builder.getThreadCount()": "adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.TwentyFourHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.CaseInsensitiveTextStrategy(int,Calendar,Locale)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.: fastdateformat doesn't respect summer daylight in some localized stringsrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display namesuse final consistently. tab policeremove keyvalues map  per sebb's suggestion",
  "src/main/java/org/apache/commons/lang3/tuple/Pair.java@org.apache.commons.lang3.tuple.Pair.formatTo(Formatter,int,int,int)": "pair implements java.util.formattable and defers tostring() handling thereto.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.hashCode()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilder.indexOf(StrMatcher,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.bytesToInt(byte,int,int,int,int)": "code clean-up for checkstyle.document exceptions. use illegalargumentexception instead of assert. throw illegalargumentexception for empty arrays.avoid unnecessary conversions.use stringbuilder instead of stringbuffer.:  add conversion utility to convert between data types on byte level",
  "src/test/java/org/apache/commons/lang3/test/NotVisibleExceptionFactory.java@org.apache.commons.lang3.test.NotVisibleExceptionFactory.NotVisibleException(Throwable)": "[] prefer throwable.getcause() in exceptionutils.getcause() ()",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.CharacterLiteral(char)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.applyRules(Calendar,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: resurrect applyrules(java.util.calendar, java.lang.stringbuffer) for binary compatibilityadd final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.applyRulesToString(Calendar)": "4fastdateformat apis that use a stringbuilderrefactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isSameLength(Object,Object)": "crlf -> lfjavadoc: fix typo but working is still awkward.simplify issamelenght implementations by reusing getlength. this also fixes a lot of the useless paranthesis warnings generated by pmd.",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.inclusiveBetween(T,T,Comparable,String,Object)": "add todosjavadocfix brace positionsapplying valentin rocher's patch to , adding new regexp and in range methods to validate",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.getOwnerType()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.inclusiveBetween(T,T,Comparable)": "add todosjavadocfix brace positionsapplying valentin rocher's patch to , adding new regexp and in range methods to validate",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.compare(T,T)": " add a null-safe compare() method to objectutils",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.DayInWeekField(NumberRule)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/CharSetUtils.java@org.apache.commons.lang3.CharSetUtils.squeeze(String,String)": "make code more readable with less nesting (move block out of elseclause).pmd: remove useless parentheses: improve charsetutils.squeeze() performance ()patch by mohammed alfallajadd final modifier to local variables.[] charsetutils.squeeze() speedup.merge charsetutils string[] and string method forms to string...",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.swap(short,int,int,int)": "add final modifier to local variables.crlf -> lfjavadoc: fix typo but working is still awkward.merge branch '': inconsistent behavior of swap for malformed inputs. thanksto adrian ber.consistent treatment for negative indices for swap methodtabs replaced by spacesnew tests addedswap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.getDateInstance(int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/tuple/ImmutableTriple.java@org.apache.commons.lang3.tuple.ImmutableTriple.getMiddle()": "adding henning's github pull request with a triple implementation. 675",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.format(Object,StringBuffer,FieldPosition)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.getRule(int)": "removes unnecessary class reference of static method calls which are declared in the same classmake sure lines in files don't have trailing white spaces and remove all trailing white spacesreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/tuple/MutablePair.java@org.apache.commons.lang3.tuple.MutablePair.setValue(R)": "add final modifier to local variables.rename mutablepair setters for bean compatibility",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TzInfo.CaseInsensitiveTextStrategy(int,Calendar,Locale)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.: fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.FastDateParser(String,TimeZone,Locale,Date)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.make sure placement of curly braces is consistent: dateutilstest.testlang530 fails for some timezonesreplace tabs with whitespaces and ",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.ensureCapacity(int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.ISO8601TimeZoneStrategy(String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesrefactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display namesreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.append(StringBuffer)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/tuple/ImmutablePair.java@org.apache.commons.lang3.tuple.ImmutablePair.nullPair()": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces[] immutablepair.nullpair()",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwentyFourHourField.getTimeInstance(int,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/StopWatch.java@org.apache.commons.lang3.time.StopWatch.getSplitNanoTime()": "applying sebb's patch from  - adding isstarted, issuspended and isstopped to stopwatch",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.init()": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.register(Object)": "remove redundant type arguments.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableShort.java@org.apache.commons.lang3.mutable.MutableShort.getAndAdd(short)": "add final modifier to local variables. addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/ClassPathUtils.java@org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedName(Package,String)": "micro optimization: replace stringbuilder with string concatenation so that the compiler can better optimize the codeuse final consistently. : new class classpathutils with methods for turning fqn into resource path",
  "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java@org.apache.commons.lang3.reflect.Executable.isMatchingConstructor(Constructor,Class)": "removes unnecessary class reference of static method calls which are declared in the same class: add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.BasicThreadFactory.uncaughtExceptionHandler(Thread)": "use validatenotnull instead of \"throw new nullpointerexception\"add final modifier to method parameters.adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.lastIndexOf(Object,Object,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,Type,Map)": "add final modifier to method parameters.[] vastly expanded typeutils",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.append(StringBuffer,String,long,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableFloat.java@org.apache.commons.lang3.mutable.MutableFloat.addAndGet(float)": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.toString()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java@org.apache.commons.lang3.text.translate.LookupTranslator.LookupTranslator(CharSequence)": "remove redundant type arguments.further optimization of :- avoid tostring of the replacement sequence by doing it once.- avoid calculating the maximum when not needed.- fixup comment for greedy algorithmthanks to fabian lange.: possible performance improvement on string escape functions. thanks to fabian lange and thomas neidhart.allow lookuptranslator to support charsequence properly; previously it was working only for charsequence's that implemented hashcode and equals(object). 882add final modifier to local variables.wsvarargs",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.unregister(Object)": "add final modifier to local variables.promote uniformity between branches by using registry accessorunused imports + uh, why would you synchronize access to a threadlocal?  :p[] clear threadlocal recursion registry (compatibly with existing tests, first pass)",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeBuilder.wildcardType()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/EnumUtils.java@org.apache.commons.lang3.EnumUtils.asEnum(Class)": "[] permit bitvector generation for enums with > 64 values; plus some test corrections",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean,boolean)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.rightPad(String,int)": "rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.getTimeInstance(int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeElements(short,short)": "remove redundant type arguments. simplify arrayutils removeelements by using newdecrementandget() method: improve arrayutils removeelements time complexity to o(n) ()based on patch submitted by jeffery yuancrlf -> lfjavadoc: fix typo but working is still awkward.add final modifier to local variables. arrayutils removeelements methods use unnecessary hashseteliminate conversion of bitset to int[] arrayutils removeelements methods use unnecessary hashsetreplace hashset with bitset (less memory; faster) arrayutils removeelements methods clone temporary index arrays unnecessarilyreduce number of created arrays[] complement arrayutils.addall() variants with by-index and by-value removal methods",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.append(StringBuffer,String,long,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.setContentEnd(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.isInstance(Object,Type)": "[] vastly expanded typeutils",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.negate(Boolean)": "revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter.ws[] removed unnecessary elses and use of ternary operator with primitive boolean consequences e.g. (some boolean expression) ? true : false",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.EventCountCircuitBreaker(int,long,TimeUnit,int,long,TimeUnit)": "add final modifier to method parameters.remove redundant type arguments.: add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.getTimeInstance(int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.TwoDigitMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.appendValueAsString(StringBuffer,String)": " - jsontostringstyle does not escape double quote in a stringvalue[github] commons-lang pull request : intellij idea refactorings..: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.getRegistry()": "[] part 2: refactor tostringstyle and tostringbuildertest to verify that we are unsetting the registry when no longer needed[] clear threadlocal recursion registry (compatibly with existing tests, first pass)",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.getTimeZone()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.newCalendar()": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor some duplicate code.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.getTimeInstance(int,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java@org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(String)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.indexOf(String,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.toLongString(TypeVariable)": "remove redundant casts ()remove redundant casts throughout the codebase to make it cleaner and easier to read.validation[] new type util features",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.hexToInt(String,int,int,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesscope of local variabel shift can be narrowerformat to 120 line length.add final modifier to local variables.use better method names. document possible arrayindexoutofboundsexception and stringindexoutofboundsexception.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.getPattern()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.ParameterizedTypeImpl(Class,Type,Type)": ": fix typeutils.parameterize to work correctly with narrower-typed varargs array ()fix sonarqube warning: the user-supplied array 'typearguments' is stored directly.[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/StopWatch.java@org.apache.commons.lang3.time.StopWatch.isSuspended()": "sort methods.applying sebb's patch from  - adding isstarted, issuspended and isstopped to stopwatch",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.swap(float,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.merge branch '': inconsistent behavior of swap for malformed inputs. thanksto adrian ber.consistent treatment for negative indices for swap methodswap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.format(Date,StringBuffer)": "change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.WeekYear(NumberRule)": ": fastdateformat support of the week-year component (uppercase 'y'): fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.getStrategy(int)": "make checkstyle happy: add missing javadocreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.TwelveHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.java@org.apache.commons.lang3.concurrent.CheckIntervalData.incrementAndCheckState()": ": add a circuit breaker implementation ()squashed commit of the following:commit 1b12db706b457408562a166c21bc6470a8064620merge: edebd97 def7832author: oliver heger <oliver.heger@oliver-heger.de>date:   wed jun 10 21:27:17 2015 +0200    merge pull request  from kinow/patch1    this commit:commit def78320c5efcb734572c5b48623a952e3c94c75author: bruno p. kinoshita <brunodepaulak@yahoo.com.br>date:   wed jun 10 22:57:33 2015 +1200    this commit:    * fixes javadocs warnings in checkstyle    * adds license headers    * renames the memorycircuitbreaker to thresholdcircuitbreaker    * adds more tests to have a good coveragecommit edebd970582ce2984258352c8482bcb51587f7d2author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 22:11:11 2015 +0200    documentation updates for eventcountcircuitbreaker.commit 3d8a4ff85a78173dd8f5437d9b4d931069128e20author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:55:02 2015 +0200    renamed timedcircuitbreaker to eventcountcircuitbreaker.    this name seems to be more appropriate as the main property of this circuit    breaker implementation is that it counts specific events and changes its state    when a certain threshold is reached.commit 0e4ce5a984ef699ddace61bbf430d695b011c6b5author: oheger <oliver.heger@oliver-heger.de>date:   tue jun 9 21:51:22 2015 +0200    added documentation for circuitbreaker interface.commit 0e6b22190ef1868655fec9b3814a2345ad206f76author: oheger <oliver.heger@oliver-heger.de>date:   mon jun 8 22:27:05 2015 +0200    initial import of circuitbreaker classes.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.clone(byte)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableLong.java@org.apache.commons.lang3.mutable.MutableLong.getAndIncrement()": "add final modifier to local variables. addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.getStrategy(String,Calendar)": ": fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.appendln(StringBuilder,int,int)": "<action issue=\"\" type=\"add\">strbuilder should support stringbuilder as an input parameter</action>",
  "src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java@org.apache.commons.lang3.mutable.MutableDouble.hashCode()": "add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.leftPad(String,int,char)": "sort members.add final modifier to local variables.renaming the newly public pad(int, char) method to repeat(char, int) [note the swap of param order]. i've also pulled the faster implementation out of repeat(string, int). make the pad method public. i can use this now :) ! the method used to be private and named padding. it is used internally and covered by unit tests through leftpad(), rightpad() and repeat().rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.reverse(int,int,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.[] add arrayutils.reverse(array, from, to) methods.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isNotEmpty(int)": "crlf -> lfjavadoc: fix typo but working is still awkward.simplify isnotempty by reusing isemptyapplying chandrashekar m's patch to , adding isnotempty(array) methods to arrayutils. ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.getGenericComponentType()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.setSizeEndText(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.getInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.equals(Type,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.setArrayStart(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.FastDatePrinter(String,TimeZone,Locale)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.getVarArgs(Object,Class)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to local variables.: add support for varargs in constructorutils, memberutils, and methodutilsthis  from github.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.Pair.readObject(ObjectInputStream)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.estimateLength()": " fastdateparser and fastdateprinter support 'x' formatapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.distance(Class,Class)": "checkstyle: convert tabs to spaces: enhance methodutils to allow invocation of private methods ()",
  "src/main/java/org/apache/commons/lang3/RandomStringUtils.java@org.apache.commons.lang3.RandomStringUtils.randomAscii(int)": ": extend randomstringutils with methods that generate strings between a min and max length (, )",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.FastDateParser(String,TimeZone,Locale,Date,boolean)": ": dateutilstest.testlang530 fails for some timezones",
  "src/main/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java@org.apache.commons.lang3.text.translate.UnicodeEscaper.between(int,int)": "reverting r1090111 - moving the text.translate escapers back from using range to replicating parts of the range api. see the list for details ('unnecessary boxing in stringescapeutils etc'), the move to range was an uncomfortable fit. removing unnecessary code",
  "src/test/java/org/apache/commons/lang3/test/NotVisibleExceptionFactory.java@org.apache.commons.lang3.test.NotVisibleException.createException(Throwable)": "[] prefer throwable.getcause() in exceptionutils.getcause() ()",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.DefaultToStringStyle.append(StringBuffer,String,float,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java@org.apache.commons.lang3.concurrent.ConstantFuture.createIfAbsent(ConcurrentMap,K,ConcurrentInitializer)": "add final modifier to local variables.add final modifier to method parameters.[] added support for concurrentmap.putifabsent() to concurrentutils.",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.differentObj(Comparable,T,String,Object)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.TimeZoneNumberRule(boolean,boolean)": "added missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.getTimeZone()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.SimpleToStringStyle()": "reuse",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.CONST(byte)": "make sure placement of curly braces is consistent[] introduce const() methods to prevent javac from inlining constants",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.createKeyValues(String,String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/text/StrMatcher.java@org.apache.commons.lang3.text.TrimMatcher.charSetMatcher(String)": "eat own dog food: stringutilsisempty(string) and replace some but not all stringlength() == 0 with stringisempty()",
  "src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java@org.apache.commons.lang3.builder.DiffBuilder.getRight()": ": there should be a differencebuilder with a reflectiondifferencebuilder implementation",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.getDateTimeInstance(int,int,TimeZone)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java@org.apache.commons.lang3.exception.ContextedRuntimeException.addContextValue(Pair)": "refactor exceptioncontext and derived. context contract stipulates a sequence of label-value entries with support for multiple entries for the same label.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.lastIndexOfSequence(CharSequence,int,int)": "replacing some of the older code. when performing a mutation operation (even if it's on an immutable by returning a new instance), string should go in and string should come out. when performing a non-mutation operation, charsequence should be passed in. 687checkstylemoving lastindexof, contains, containswhitespace, indexofany, containsany, indexofanybut, containsonly, containsnone and substring over to using charsequences for parameters. 687",
  "src/main/java/org/apache/commons/lang3/AnnotationUtils.java@org.apache.commons.lang3.AnnotationUtils.iterator()": "add hashcode and tostring methods to annotationutils, plus tests",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNameRule.getDateTimeInstance(int,int,TimeZone)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.TwentyFourHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.applyRules(Calendar,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: resurrect applyrules(java.util.calendar, java.lang.stringbuffer) for binary compatibilityadd final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.appendTo(Appendable,int)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.appendDetail(StringBuffer,String,char)": "fix the jsontostringstyle:except number types and boolean type, all other types in java should be 'appendasstring'",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.setCalendar(FastDateParser,Calendar,String)": "[] timezone.gettimezone() in fastdateparser causes resourcecontention</action>. this .utc and gmt are the same, so simplify.refactor \"gmt\" magic string.make sure lines in files don't have trailing white spaces and remove all trailing white spaces fastdateparser and fastdateprinter support 'x' formatadded missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .trailing spaces fastdateparser does not handle non-gregorian calendars properly unnecessary ;applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.getSimpleName(Class)": "[] add methods to classutils to get various forms of classnames in a null-safe manneradd two new null-safe apis: getsimplename(*). see https://issues.apache.org/jira/browse/696",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.Range.is(T)": "refactor range with lots of new methods",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.toString()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.PaddedNumberField.TimeZoneNumberRule(boolean,boolean)": "added missing support for iso 8601 parsing and printing using \"zz\" pattern (code now matches javadoc). addresses .",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.NumberStrategy(int)": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.parseObject(String,ParsePosition)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.toString()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/SystemUtils.java@org.apache.commons.lang3.SystemUtils.getJavaIoTmpDir()": "- fix () systemutils.getjavaversionasfloat throws stringindexoutofboundsexception on android runtime/dalvik vm- refactor for unit testing.- remove odd test code which is copy and pasted from systemutils, which therefore does not test anything.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.equals(Object)": "format.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.appendln(StringBuilder)": "<action issue=\"\" type=\"add\">strbuilder should support stringbuilder as an input parameter</action>",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.StrategyParser(String,Calendar)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.getType()": "provide simple method to wrap a given type to the typed interface",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.TwoDigitYearField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.appendTo(StringBuffer,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.removeFirst(String,String)": "removes unnecessary class reference of static method calls which are declared in the same class add remove by regular expression methods in stringutils :  - string stringutils.removeall(string text, string regex);  - string stringutils.removefirst(string text, string regex);",
  "src/main/java/org/apache/commons/lang3/CharSequenceUtils.java@org.apache.commons.lang3.CharSequenceUtils.reverse(CharSequence)": "fix defaultisempty typing.change stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/AnnotationUtils.java@org.apache.commons.lang3.AnnotationUtils.isNonbindingMember(Method)": "respect @javax.enterprise.util.nonbinding",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.readObject(ObjectInputStream)": " and ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.format(Date)": ": fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/test/java/org/apache/commons/lang3/reflect/testbed/StringParameterizedChild.java@org.apache.commons.lang3.reflect.testbed.StringParameterizedChild.consume(String)": "[] get method override hierarchy",
  "src/main/java/org/apache/commons/lang3/mutable/MutableInt.java@org.apache.commons.lang3.mutable.MutableInt.compareTo(MutableInt)": "pmd: useless parentheses.add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.applyRules(Calendar,B)": "add final modifier to local variables.1154fastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.max(T,T)": " add a null-safe compare() method to objectutilsadd methods for cloneables to objectutils ().",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.remove(long,int)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.parsePattern()": "adjust fastdateformat for java 7 behavior regarding format of the year pattern ().refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.parse(FastDateParser,Calendar,String,ParsePosition,int)": "add final modifier to local variables.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNumberRule.appendDigits(StringBuffer,int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/BooleanUtils.java@org.apache.commons.lang3.BooleanUtils.compare(boolean,boolean)": "simplify, less clutter.revert \"simplify, less clutter.\"this reverts commit 18f5f54ca0e78df12586e0750e257058746a5a39.simplify, less clutter. - add issorted() to arrayutils. patch supplied by james sawle.  in github.",
  "src/main/java/org/apache/commons/lang3/text/StrTokenizer.java@org.apache.commons.lang3.text.StrTokenizer.addToken(List,String)": "eat own dog food: stringutilsisempty(string) and replace some but not all stringlength() == 0 with stringisempty()",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitYearField.TimeZoneNameRule(TimeZone,Locale,int)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/math/Fraction.java@org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)": "format to 120 line length.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)adding first method check from math's mathutils.gcd method; and unit tests showing that this was needed. bug reported and solved by christian semrau []",
  "src/main/java/org/apache/commons/lang3/tuple/Pair.java@org.apache.commons.lang3.tuple.Pair.equals(Object)": ": update java requirement from java 6 to 7replace usage of deprecated objectutilsequals with objectsequalsadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.containsWhitespace(String)": "rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687adding containswhitespace method per . code comes from the spring framework, so i've added such to the notice file. license is apache license 2.0. unit test is original. ",
  "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java@org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(Method)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.TextStrategy(int,Calendar,Locale)": " - tolowercase should use locale, additional unit tests for case-insensitive matching - fastdateparser should be case insensitive: fastdateparser could use calendar.getdisplaynames for all text fields",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.newStringBuilder(int)": "sort members.extract method.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)": "removes unnecessary class reference of static method calls which are declared in the same classmake sure lines in files don't have trailing white spaces and remove all trailing white spacesformatting fixes perhttps://patch-diff.githubusercontent.com/raw/apache/commons-lang/pull/128.diffcrlf -> lfjavadoc: fix typo but working is still awkward. - add issorted() to arrayutils. patch supplied by james sawle.  in github.add final modifier to local variables. arrayutils removeelements methods use unnecessary hashseteliminate conversion of bitset to int[]",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.hashCode()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java@org.apache.commons.lang3.concurrent.ConstantFuture.putIfAbsent(ConcurrentMap,K,V)": "add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)[] added support for concurrentmap.putifabsent() to concurrentutils.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.FastDateParser(String,TimeZone,Locale,Date,boolean)": ": dateutilstest.testlang530 fails for some timezones",
  "src/main/java/org/apache/commons/lang3/arch/Processor.java@org.apache.commons.lang3.arch.Processor.isX86()": ": add archutils - an utility class for the \"os.arch\" system property ()",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.format(Date,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.getFragmentInSeconds(Calendar,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesmake use of existing timeunit class to manage time units.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.format(long,B)": ": fastdateprinter generates date objects wastefullyfastdateformat apis that use a stringbuilder",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.PatternStrategy.parse(String,ParsePosition)": "format.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.getDateTimeInstance(int,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.setContentStart(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/tuple/MutablePair.java@org.apache.commons.lang3.tuple.MutablePair.of(L,R)": "sort methods.remove redundant type arguments.",
  "src/main/java/org/apache/commons/lang3/RandomStringUtils.java@org.apache.commons.lang3.RandomStringUtils.randomPrint(int)": ": extend randomstringutils with methods that generate strings between a min and max length (, ): add randomstringutilsrandomgraph and randomprint which match corresponding regular expression classthese are useful over randomascii because they do not contain the del character but otherwise contain the full range of ascii printing characters, and optionally include whitespace. this is useful for testing user defined inputs where characters like spaces, angle brakets, semicolons, dashes, etc. can cause issues.",
  "src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java@org.apache.commons.lang3.builder.ReflectionToStringBuilder.ReflectionToStringBuilder(T,ToStringStyle,StringBuffer,Class,boolean,boolean)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesmerge branch '' of https://github.com/markdacek/commons-lang: added isexcludenullvalues to reflectiontostringbuilder and testadd checknotnull method in reflectiontostringbuilder.java to fix add final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java@org.apache.commons.lang3.concurrent.ConstantFuture.initialize(ConcurrentInitializer)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo): added atomicinitializer class. introduced new concurrentinitializer interface which is now implemented by all all initializer classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.getDateInstance(int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java@org.apache.commons.lang3.builder.HashCodeBuilder.append(float)": "add final modifier to local variables.convert to java 5 enhanced loops. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedNumberField.getDateTimeInstance(int,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.append(StringBuffer,String,int,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/event/EventUtils.java@org.apache.commons.lang3.event.EventBindingInvocationHandler.invoke(Object,Method,Object)": "statement unnecessarily nested within else clause.wsfix brace positionsimproving test coverage.changing eol-style to native.misc. event utils.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.parseToken(String,int)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.Range.isBefore(T)": "refactor range with lots of new methods",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.AlwaysTruePredicate.findThreadById(long,ThreadGroup)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.use validateistrue to validate argumentsfixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.splitWorker(String,String,int,boolean)": "sort members.remove redundant type arguments.add final modifier to local variables.remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.appendTo(StringBuffer,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.NamePredicate.getAllThreadGroups()": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/SystemUtils.java@org.apache.commons.lang3.SystemUtils.toJavaVersionInt(String)": "- fix () systemutils.getjavaversionasfloat throws stringindexoutofboundsexception on android runtime/dalvik vm- refactor for unit testing.- remove odd test code which is copy and pasted from systemutils, which therefore does not test anything.",
  "src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java@org.apache.commons.lang3.exception.ContextedRuntimeException.getFirstContextValue(String)": "refactor exceptioncontext and derived. context contract stipulates a sequence of label-value entries with support for multiple entries for the same label.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.compare(T,T,boolean)": "remove superfluous parens like:return (foo + 1);int len = (foo + 1);if ((foo + 1 > 2))((string) foo)[] add mode and median comparable... methods to objectutilscheckstyle and trailing spaces. simplify compare() method - thanks to julien aym\u00e9 add a null-safe compare() method to objectutils",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.equals(CharSequence,CharSequence)": "sort members.consolidate the stringutils.equals and equalsignorecase methods. ()* consolidate the stringutils.equals and equalsignorecase methods.\r\rimplement the same edge case logic for null. use the same parameter\rnames. use the same javadoc wording. change the equals method to use a\rstep-wise charat comparison.\r\r* : added jira to changes.xml.\r stringutilsequals fails with index oobe on non-strings withidentical leading prefix[] stringutils equals() relies on undefined behavior; thanks to daniel trebbienchange stringutils arguments from string to charsequence.details: working with (trunk) stringutils (su) i see the following emerge: - in svn already and continuing: change stringutils arguments from string to charsequence (cs).- this leads to replacing calls to string.substring(int[,int]) with calls to charsequence.subsequence(int)- this leads to creating a charsequenceutils class (in svn now, more on this new class below) and charsequenceutils.subsequence(charsequence,int) to avoid changing \"str.substring(start)\" over and over to \"str.subsequence(start, str.length())\". for examples, see new versions of capitalize and uncapitalize.- we end up using a tostring() on charsequence to return a string from stringutil when working with a charsequence.so we have stringutils using charsequence inputs as much as possible instead of string, which is nice. the charsequence method subsequence returns a charsequence; though the javadoc states \"returns a new charsequence that is a subsequence of this sequence.\", this does not guaranteed the return value to be the same kind of charsequence as the receiver). since we are after all in a class called stringutil, calling tostring() is a must.i propose that we create when possible the methods that are now stringutils charsequence methods into charsequenceutils and let stringutil call charsequenceutils and then do its tostring() and other string specific logic. later we could have other charsequence type of utils (for charbuffer, stringbuiler, stringbuffer, etc) that use the 'primitives' from charsequenceutils.this means that for methods that are based solely on methods that are now in charsequence, these can be moved to charsequenceutils without effort (all is* methods only call charsequencelength() and charat() for example and are now typed as cs, still in su). we can leave @deprecateds method in su as a nicety to avoid too much porting pain: first change the package to lang3 then you can 'optimize' by changing call sites from su to csu.as a start, i put in svn a charsequenceutils (csu) implementation for length() and subsequence().",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.getCanonicalName(Object,String)": "[] add methods to classutils to get various forms of classnames in a null-safe manner[] add methods to classutils to get various forms of classnames in a null-safe manner",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedMonthField.StringLiteral(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.getPattern()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.hasNext()": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces[] retrieve class hierarchy",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.getDateTimeInstance(int,int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.nullToEmpty(double)": "crlf -> lfjavadoc: fix typo but working is still awkward.use isempty() where possible. thanks to james sawle for pointing this out.minor code simplificationadding nulltoempty methods to arrayutils per  and levon karayan's patch. ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.readResolve()": "removes unnecessary class reference of static method calls which are declared in the same class: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.: add noclassnametostringstyle implementation of tostringstyle. this  from github. thanks to innokenty shuvalov.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.toString()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.TimeZoneNumberRule(boolean)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.toEncodedString(byte,Charset)": "[] add null-safe stringutils apis to wrapstringgetbytes([charset|string]).</action>sort members.make usage of default charset explicit and remove findbugs exclusion. kudos to sebb for spotting this.deprecating stringutils.tostring(byte[],string) in favour of a new charset based method, as reported by aaron digulla in 795",
  "src/main/java/org/apache/commons/lang3/Conversion.java@org.apache.commons.lang3.Conversion.binaryToShort(boolean,int,short,int,int)": "fix non-critical typos in comments and javadocfix typos in several local variablesscope of local variabel shift can be narrowerpmd: useless parenthesesformat to 120 line length.removed unnecessary multiplication by one.add final modifier to local variables.add final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.getRule(int)": "removes unnecessary class reference of static method calls which are declared in the same classmake sure lines in files don't have trailing white spaces and remove all trailing white spacesreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.right(CharSequence,int)": "moving center, left, leftpad, right, rightpad, mid, uppercase, lowercase and swapcase over to charsequence input. 687",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.UnpaddedMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.parsePattern()": "adjust fastdateformat for java 7 behavior regarding format of the year pattern ().refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.appendTo(Appendable,int)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.TwoDigitMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.UnpaddedMonthField.getDateInstance(int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableInt.java@org.apache.commons.lang3.mutable.MutableInt.getAndAdd(Number)": "add final modifier to local variables. addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java@org.apache.commons.lang3.exception.DefaultExceptionContext.getContextEntries()": "refactor exceptioncontext and derived. context contract stipulates a sequence of label-value entries with support for multiple entries for the same label.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.JsonToStringStyle()": ": add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.applyRules(Calendar,StringBuffer)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/event/EventUtils.java@org.apache.commons.lang3.event.EventUtils.bindEventsToMethod(Object,String,Object,Class,String)": "add final modifier to method parameters.checkstylecompiler/generics warnings & a typochanging eol-style to native.misc. event utils.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(int,Locale)": " simplify fastdateformat; eliminate boxingrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.ProxyInvocationHandler.removeListener(L)": "provide read access to the registered listener instancesimproving error checking logic and adding test cases to verify.changing eol-style to native.misc. event utils.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.NumberStrategy.getStrategy(int)": "make checkstyle happy: add missing javadocreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TextField.TwoDigitYearField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/reflect/ConstructorUtils.java@org.apache.commons.lang3.reflect.ConstructorUtils.isAccessible(Class)": "[] constructorutils.getaccessibleconstructor() does not check the accessibility of enclosing classes",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.ISO8601TimeZoneStrategy.getCache(int)": "remove redundant type arguments.format.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CopyQuotedStrategy.parseObject(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java@org.apache.commons.lang3.event.ProxyInvocationHandler.addListener(L)": "added new addlistener() method that takes a boolean for if duplicates are allowed.added test method to make sure that duplicate listeners are not added.using copyonwritearraylist for thread safety.improving error checking logic and adding test cases to verify.changing eol-style to native.misc. event utils.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.hashCode()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoFieldNameToStringStyle.unregister(Object)": "add final modifier to local variables.promote uniformity between branches by using registry accessorunused imports + uh, why would you synchronize access to a threadlocal?  :p[] clear threadlocal recursion registry (compatibly with existing tests, first pass)",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.truncatedCompareTo(Calendar,Calendar,int)": "add final modifier to local variables.: add truncatedequals and truncatedcompareto",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.UnpaddedMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateIterator.getFragmentInMinutes(Date,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesmake use of existing timeunit class to manage time units.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.FastDateParser(String,TimeZone,Locale,Date)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.make sure placement of curly braces is consistent: dateutilstest.testlang530 fails for some timezonesreplace tabs with whitespaces and ",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.modify(Calendar,int,int)": "add explict default caseadd final modifier to local variables.convert to java 5 enhanced for loops. convert to java 5 enhanced loops. ",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.selectNumberRule(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java@org.apache.commons.lang3.time.DurationFormatUtils.equals(Object)": "add final modifier to local variables.stringbuffer => stringbuilder where being used as a local-only buffer",
  "src/main/java/org/apache/commons/lang3/mutable/MutableShort.java@org.apache.commons.lang3.mutable.MutableShort.getValue()": "use more efficient short cache: use \"short.valueof(int)\" instead of \"new short(short)\"",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.insert(int,String)": "rewrite to avoid (im)possible npe warningadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.getStrategy(int)": "make checkstyle happy: add missing javadocreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java@org.apache.commons.lang3.builder.HashCodeBuilder.build()": "explicit boxingadding builder interface, and refactoring the builder classes and basicthreadfactory to implement this interface. patch from michael wooten in 601",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.CONST(float)": "make sure placement of curly braces is consistent[] introduce const() methods to prevent javac from inlining constants",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.parameterize(Class,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.trim()": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.getRule(int)": "removes unnecessary class reference of static method calls which are declared in the same classmake sure lines in files don't have trailing white spaces and remove all trailing white spacesreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.FastDatePrinter(String,TimeZone,Locale)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java@org.apache.commons.lang3.time.DateFormatUtils.format(Calendar,String,TimeZone,Locale)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.parse(String)": "allow access to parsedpattern for test purposesmake parseexception text similar to that thrown by simpledateformat fastdateparser does not handle non-gregorian calendars properlyuse calendargetdisplaynames() instead of dateformatsymbolsgeteras()applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.Null.cloneIfPossible(T)": "javadocadd methods for cloneables to objectutils ().",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,short,Boolean)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.add final modifier to method parameters.: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/tuple/Triple.java@org.apache.commons.lang3.tuple.Triple.hashCode()": "adding henning's github pull request with a triple implementation. 675",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.parameterizedTypeToString(ParameterizedType)": " - stackoverflowerror on typeutils.tostring(...) for a generic return type of enum.valueof ()[] new type util features",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.lastIndexOfAny(String,String)": "rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687use index_not_found instead of magic number.",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.indexOfThrowable(Throwable,Class,int)": "sort by method name.",
  "src/main/java/org/apache/commons/lang3/event/EventUtils.java@org.apache.commons.lang3.event.EventBindingInvocationHandler.EventBindingInvocationHandler(Object,String,String)": "remove redundant type arguments.changing eol-style to native.misc. event utils.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.unrollVariableAssignments(TypeVariable,Map)": "[] [] fix related bugs dealing with type variable inheritance",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.StringLiteral.appendDigits(StringBuffer,int)": "replace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/SystemUtils.java@org.apache.commons.lang3.SystemUtils.toJavaVersionIntArray(String)": "- fix () systemutils.getjavaversionasfloat throws stringindexoutofboundsexception on android runtime/dalvik vm- refactor for unit testing.- remove odd test code which is copy and pasted from systemutils, which therefore does not test anything.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.isNotEmpty(float)": "crlf -> lfjavadoc: fix typo but working is still awkward.simplify isnotempty by reusing isemptyapplying chandrashekar m's patch to , adding isnotempty(array) methods to arrayutils. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.KeyValue.TextStrategy(int)": "trailing spacesapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.clone(double)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/StopWatch.java@org.apache.commons.lang3.time.StopWatch.getTime(TimeUnit)": "sort methods.: add stopwatchgettime(timeunit) ()",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitNumberField.selectNumberRule(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.appendFieldStart(StringBuffer,String)": " - jsontostringstyle does not escape string namesjsontostringstyle: improve private constant name and remove wrong comment: add jsontostringstyle implementation to tostringstyle. this fixes  and  from github. thanks to thiago andrade.",
  "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java@org.apache.commons.lang3.exception.ExceptionUtils.throwableOf(Throwable,Class,int,boolean)": "sort by method name.[] add exceptionutils.throwableoftype(throwable, class) andfriends.",
  "src/main/java/org/apache/commons/lang3/math/Fraction.java@org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)": "format to 120 line length.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.readResolve()": "removes unnecessary class reference of static method calls which are declared in the same class",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.NoClassNameToStringStyle.setContentEnd(String)": "reuse",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.toPrimitive(Long)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.SimpleToStringStyle.removeLastFieldSeparator(StringBuffer)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.getRule(int)": "removes unnecessary class reference of static method calls which are declared in the same classmake sure lines in files don't have trailing white spaces and remove all trailing white spacesreplace tabs with spaces fastdateparser and fastdateprinter support 'x' format",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.greaterObj(Comparable,T,String,Object)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/CharRange.java@org.apache.commons.lang3.CharRange.remove()": "adding vincent ricard's patch to charrange.java providing an iterator that lets you walk the chars in the range. 454",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.NamePredicate.test(ThreadGroup)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/text/StrTokenizer.java@org.apache.commons.lang3.text.StrTokenizer.cloneReset()": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.matchesPattern(CharSequence,String,String,Object)": "[github] commons-lang pull request : intellij idea refactorings..add todosjavadocfix brace positionsapplying valentin rocher's patch to , adding new regexp and in range methods to validate",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.isFormatLetter(char)": "format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TextField.getInstance(String,TimeZone)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.getDateTimeInstance(int,int,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableInt.java@org.apache.commons.lang3.mutable.MutableInt.getAndAdd(int)": "add final modifier to local variables. addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.CharacterLiteral.UnpaddedNumberField(int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.FastDateFormat.getLocale()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ClassUtils.java@org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(Class)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.append(Object)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: avoid string allocation in strbuilder.append(charsequence). this fixes  from github. thanks to mikhail mazurskiy and fabian lange.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.getLocaleSpecificStrategy(int,Calendar)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesremove unused constructor parameterformat.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/RegExUtils.java@org.apache.commons.lang3.RegExUtils.removeAll(String,Pattern)": "[] add regexutils class instead of overloadinh methods instringutils that take a regex to take precompiled pattern.",
  "src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java@org.apache.commons.lang3.builder.ReflectionToStringBuilder.ReflectionToStringBuilder(T,ToStringStyle,StringBuffer,Class,boolean,boolean,boolean)": "merge branch '' of https://github.com/markdacek/commons-lang: added isexcludenullvalues to reflectiontostringbuilder and test",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwentyFourHourField.PaddedNumberField(int,int)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.build()": "explicit boxingadding builder interface, and refactoring the builder classes and basicthreadfactory to implement this interface. patch from michael wooten in 601",
  "src/main/java/org/apache/commons/lang3/Range.java@org.apache.commons.lang3.Range.isStartedBy(T)": "refactor range with lots of new methods",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TimeZoneNumberRule.parseObject(String,ParsePosition)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java@org.apache.commons.lang3.concurrent.ConcurrentUtils.extractCauseUnchecked(ExecutionException)": "add final modifier to method parameters.[] introduced concurrentruntimeexception and extended the exception handling methods of concurrentutils to support runtime exceptions, too.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.TzInfo(TimeZone,boolean)": ": fastdateformat doesn't respect summer daylight in some localized strings",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.parseObject(String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.swap(int,int,int,int)": "add final modifier to local variables.better javadoc for arrayutils.swap variantscrlf -> lfjavadoc: fix typo but working is still awkward.merge branch '': inconsistent behavior of swap for malformed inputs. thanksto adrian ber.consistent treatment for negative indices for swap methodexamples added in javadoctabs replaced by spacesnew tests addedswap and shift for arrays",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.UnpaddedNumberField.estimateLength()": " fastdateparser and fastdateprinter support 'x' formatapplying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.CharacterLiteral.appendTo(StringBuffer,Calendar)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.getTimeInstance(int,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.TimeZoneStrategy.getDisplayNames(int)": "don't save short eras if they are the same as the long eras fastdateparser does not handle non-gregorian calendars properlyuse calendargetdisplaynames() instead of dateformatsymbolsgeteras()getinstance() (java 1.6) supports more localesexplicit conversion to integer; save the value for use latergetinstance(locale) is java 1.6+applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.lastIndexOf(String,String)": "rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687use index_not_found instead of magic number.",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.indexOf(byte,byte)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.parseDateStrictly(String,Locale,String)": "make sure lines in files don't have trailing white spaces and remove all trailing white spaces: parsedatestrictly does't pass specified locale - dateutilsparsedate uses default locale; add locale support",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ShortPrefixToStringStyle.unregister(Object)": "add final modifier to local variables.promote uniformity between branches by using registry accessorunused imports + uh, why would you synchronize access to a threadlocal?  :p[] clear threadlocal recursion registry (compatibly with existing tests, first pass)",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.FastDateParser.getNextStrategy()": "add final modifier to local variables.format.statement unnecessarily nested within else clause.\\refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.unrollBounds(Map,Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneNameRule.UnpaddedMonthField()": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java@org.apache.commons.lang3.concurrent.ConcurrentUtils.initializeUnchecked(ConcurrentInitializer)": "add final modifier to local variables.: added atomicinitializer class. introduced new concurrentinitializer interface which is now implemented by all all initializer classes.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.StringLiteral.getInstance()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.Strategy.letterPattern(char)": "add final modifier to local variables.format.refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.format(Calendar,B)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.getGenericComponentType()": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.FastDatePrinter.TextField(int,String)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/SerializationUtils.java@org.apache.commons.lang3.ClassLoaderAwareObjectInputStream.roundtrip(T)": "removes unnecessary class reference of static method calls which are declared in the same class: add (t) casts to get unit tests to pass in old jdk. this fixes  from github. thanks to jonathan baker.<action issue=\"\" type=\"add\" dev=\"ggregory\">add serializationutils.roundtrip(t extends serializable) to serialize then deserialize</action>",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": "add final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java@org.apache.commons.lang3.concurrent.Builder.getWrappedFactory()": "adding basicthreadfactory class. same as oliver's original patch in , with an @since 3.0 added",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.ToStringStyle.reflectionAppendArrayDetail(StringBuffer,String,Object)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/tuple/Pair.java@org.apache.commons.lang3.tuple.PairAdapter.getRight()": "[] add empty_array constants to classes inorg.apache.commons.lang3.tuple",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.add(T,T)": "formatting fixes perhttps://patch-diff.githubusercontent.com/raw/apache/commons-lang/pull/128.diffcrlf -> lfjavadoc: fix typo but working is still awkward. read wrong component type of array in add in arrayutilsadd final modifier to local variables.checkstyle and trailing spaces. arrayutils.add(t[] array[, offset], t element) can create unexpected classcastexception",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.append(char,int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderTokenizer.reverse()": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.make sure lines in files don't have trailing white spaces and remove all trailing white spacesadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java@org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(Object,Object,Class)": ": recursive and reflective equalsbuilder ()patch by yathos ug",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.indexOf(boolean,boolean)": "crlf -> lfjavadoc: fix typo but working is still awkward.",
  "src/main/java/org/apache/commons/lang3/ObjectUtils.java@org.apache.commons.lang3.ObjectUtils.getClassCanonicalName(Object)": "[] add methods to objectutils to get various forms of classnames in a null-safe manner",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.greaterOrEqual(double,double)": ": new methods for lang3.validatethis  from github.",
  "src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java@org.apache.commons.lang3.reflect.FieldUtils.readStaticField(Field,boolean)": "a bit of dog food and a lot of javadoc tweakage",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.CaseInsensitiveTextStrategy.parse(String,ParsePosition)": "format.: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')refactor fastdateparseruse hashmap for performance    break down regular expressions to per-format, allowingparseposition to get set    add parse with calendar input, allowing client to set leniencyand/or replace display names: dateutilstest.testlang530 fails for some timezones",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeAll(int,int)": ": arrayutils.removeall(object array, int... indices) should do the clone, not its callers ()crlf -> lfjavadoc: fix typo but working is still awkward.[] complement arrayutils.addall() variants with by-index and by-value removal methods",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.compare(String,String,boolean)": "merge branch 'fix-': add compare methods in stringutilsthis  from github. add null safe compare methods in stringutils :  - stringutils.compare(string str1, string str2);  - stringutils.compare(string str1, string str2, boolean nullisless);  - stringutils.compareignorecase(string str1, string str2);  - stringutils.compareignorecase(string str1, string str2, boolean nullisless);",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.appendFixedWidthPadLeft(Object,int,char)": "reuseadd final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitMonthField.TwelveHourField(NumberRule)": "applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/ArrayUtils.java@org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte,byte)": "add final modifier to local variables.remove trailing whitespacescrlf -> lfjavadoc: fix typo but working is still awkward.implements : add a method to arrayutils for removing all occurrences of a given element. thanks to haiyang li.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitNumberField.appendTo(StringBuffer,Calendar)": "checkstyle and trailing spaces.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwoDigitYearField.DayInWeekField(NumberRule)": " partial: implement format 'u' for fastdateformat, day number of week",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.GenericArrayTypeImpl.isAssignable(Type,ParameterizedType,Map)": ": typeutils.isassignable throws nullpointerexception when fromtype has type variables and totype generic superclass specifies type variable ()",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwoDigitMonthField.getInstance()": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.java@org.apache.commons.lang3.concurrent.ConcurrentRuntimeException.ConcurrentRuntimeException(Throwable)": "[] introduced concurrentruntimeexception and extended the exception handling methods of concurrentutils to support runtime exceptions, too.",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.indexOf(char,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.ParameterizedTypeImpl.toString(T)": " - stackoverflowerror on typeutils.tostring(...) for a generic return type of enum.valueof ()",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.truncate(String,int)": "sort members.: add stringutils.truncate() ()",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TwelveHourField.applyRules(Calendar,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.: resurrect applyrules(java.util.calendar, java.lang.stringbuffer) for binary compatibilityadd final modifier to local variables.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java@org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults(Map,Map,Map)": "add final modifier to method parameters.",
  "src/main/java/org/apache/commons/lang3/mutable/MutableShort.java@org.apache.commons.lang3.mutable.MutableShort.addAndGet(Number)": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/Validate.java@org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long)": ": validate: add inclusivebetween and exclusivebetween overloads for primitives types. initial patch provided by sebb.",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.PaddedNumberField.getInstance(String,TimeZone,Locale)": "refactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.isSameLocalTime(Calendar,Calendar)": "pmd: useless parentheses dateutils issamelocaltime() compares the hour using 12hour calendar.hour instead of 24hour calendar.hour_of_day - thanks to christian",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderReader.toCharArray(int,int)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/DateUtils.java@org.apache.commons.lang3.time.DateUtils.getFragmentInHours(Date,int)": "make sure lines in files don't have trailing white spaces and remove all trailing white spacesmake use of existing timeunit class to manage time units.",
  "src/main/java/org/apache/commons/lang3/StringUtils.java@org.apache.commons.lang3.StringUtils.indexOf(String,int,int)": "rolling stringutils and test code back to r1082046. the move to charsequence is theoretically desirable, but there are no common immutable charsequence subclasses other than string, making this a complex and useless change. instead strbuilder should be enhanced. 687",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.TypeUtils()": "[] vastly expanded typeutils",
  "src/main/java/org/apache/commons/lang3/mutable/MutableLong.java@org.apache.commons.lang3.mutable.MutableLong.decrementAndGet()": " addgetandincrement/getanddecrement/getandadd/incrementandget/decrementandget/addandgetin mutable* classes",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.TypeUtils.appendRecursiveTypes(StringBuilder,int,Type)": " - stackoverflowerror on typeutils.tostring(...) for a generic return type of enum.valueof ()",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.ThreadIdPredicate.findThreadById(long,String)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.use validateistrue to validate argumentsfixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java@org.apache.commons.lang3.builder.MultiLineToStringStyle.removeLastFieldSeparator(StringBuffer)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java@org.apache.commons.lang3.time.TimeZoneDisplayKey.format(Date,StringBuffer)": "make whitespace use after tokens consistent and add a checkstyle rule to enforce it.avoid deprecation message by inlining the deprecated method code body: fastdateformat support of the week-year component (uppercase 'y')revert  while investigating travis failures: fastdateformat support of the week-year component (uppercase 'y')add final modifier to local variables.refactor some duplicate code.applying chas honton's implementation of dateparser and subsequent integration into fastdateformat and the time package. see . ",
  "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java@org.apache.commons.lang3.time.TwelveHourField.format(Date,StringBuffer)": "change calendar.getinstance to new gregoriancalendarrefactoring fastdateformat per  to use the formatcache class created for an upcoming dateparser functionality. i've kept formatcache package-private for now. ",
  "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java@org.apache.commons.lang3.reflect.WildcardTypeImpl.withUpperBounds(Type)": "[] new type util features",
  "src/main/java/org/apache/commons/lang3/ThreadUtils.java@org.apache.commons.lang3.NamePredicate.findThreadsByName(String,ThreadGroup)": "fixing crlfsstatement unnecessarily nested within else clause.add threadutils",
  "src/main/java/org/apache/commons/lang3/text/StrBuilder.java@org.apache.commons.lang3.text.StrBuilderWriter.contains(char)": "add final modifier to local variables.",
  "src/main/java/org/apache/commons/lang3/time/FastDateParser.java@org.apache.commons.lang3.time.StrategyAndWidth.equals(Object)": "format."
}